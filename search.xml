<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python</title>
      <link href="posts/43687.html"/>
      <url>posts/43687.html</url>
      
        <content type="html"><![CDATA[<p>Hello World !</p><p>Mac终端安装<a href="mailto:Python@3.9">Python@3.9</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> python@3.9 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>终端进入python简单命令行命令：python3</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">➜  ~ python3Python <span class="token number">3.9</span>.6 <span class="token punctuation">(</span>default, Jun <span class="token number">29</span> <span class="token number">2021</span>, 06:20:32<span class="token punctuation">)</span> <span class="token punctuation">[</span>Clang <span class="token number">12.0</span>.0 <span class="token punctuation">(</span>clang-1200.0.32.29<span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span>, <span class="token string">"copyright"</span>, <span class="token string">"credits"</span> or <span class="token string">"license"</span> <span class="token keyword">for</span> <span class="token function">more</span> information.<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>终端退出python简单命令行命令：quit()</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">➜  ~ python3Python <span class="token number">3.9</span>.6 <span class="token punctuation">(</span>default, Jun <span class="token number">29</span> <span class="token number">2021</span>, 06:20:32<span class="token punctuation">)</span> <span class="token punctuation">[</span>Clang <span class="token number">12.0</span>.0 <span class="token punctuation">(</span>clang-1200.0.32.29<span class="token punctuation">)</span><span class="token punctuation">]</span> on darwinType <span class="token string">"help"</span>, <span class="token string">"copyright"</span>, <span class="token string">"credits"</span> or <span class="token string">"license"</span> <span class="token keyword">for</span> <span class="token function">more</span> information.<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> quit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Consolation</title>
      <link href="posts/51757.html"/>
      <url>posts/51757.html</url>
      
        <content type="html"><![CDATA[<p>每日鸡汤</p><ol><li>“当你看过世界，见过众生，才发现你要见的世面，是你自己内心的勇敢和自信。“当你看过四季，见过风云，才发现你要见的美景，是看似平淡的生活和心境”。</li><li>凡是过往，皆为序章。——莎士比亚《暴风雨》</li><li>凡事需多听但少言；聆听他人之意见，但保留自己之判断。——莎士比亚 《哈姆雷特》</li><li>“你的脸上云淡风轻，谁也不知道你的牙咬得有多紧。”</li><li>你只管努力，剩下的交给时间。</li><li>我们各自努力，最高处见。</li><li>“让花成花，让树成树。”</li><li>从琴房到教室，一共108步。</li><li>你来我有酒，你走我不留。</li><li>“为什么要解释， 为什么要你懂 ，又不想和你产生共鸣 ，又不想和你交朋友。”</li><li>你不该在没意义的人和事上停留太久。</li><li>你间歇性的努力和蒙混过日子，都是对之前努力的清零。</li><li>有种落差是，你配不上自己的野心，也辜负了所受的苦难。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Consolation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mood</title>
      <link href="posts/27147.html"/>
      <url>posts/27147.html</url>
      
        <content type="html"><![CDATA[<p>Some words are  just  a waste of time … maybe not.</p><ol><li>Reibungslos</li><li>Life  Advice : don’t lose important people because of hard talk.</li><li>You said you were tired but who had smooth.</li><li>I have been where you are.<br>I have felt what you feel.<br>Don’t ask me how I know.<br>All I know,is I don’t wanna hurt you.<br>I don’t want a throne.<br>I just want you to be okay.<br>—————————-Loki </li><li>Well ,life isn’t always what one likes.</li><li>I often laugh, but I’m not always happy.</li><li>Don’t fantasize.</li><li>Whether your heart is cold, everything doesn’t matter.</li><li>It turns out that there is no quarrel, and you can go to the end.</li><li>Life is dark, sorry, I have no light either.</li><li>It’s too difficult to play an emotionally stable adult.</li><li>When I am sad, who can accompany me.</li><li>Only by pretending to be indifferent can you appear less humble.</li><li>I thought you would understand my efforts, but that was just what I thought.</li><li>Don’t take perfunctory as moving, don’t take routine as affectionate.</li><li>If it is too late, let the miss be missed forever.</li><li>This life is really rough, I met you and lost you.</li><li>Avoiding your eyes is not disgusting you, but liking you too much.</li><li>Isn’t this the growth you dream of? Why are you frowning?</li><li>I’m always keeping my eyes on you,by the means you know or not.</li><li>While there is life there is hope.</li><li>Feelings do not have too many assumptions, I have no reason to go back.</li><li>No cross, no crown.</li><li>Maybe i made a mistake yesterday, but yesterday’s me is still me.</li><li>It’s too difficult to play an emotionally stable adult.</li><li>Only by pretending to be indifferent can you appear less humble.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mood </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sql Server</title>
      <link href="posts/8109.html"/>
      <url>posts/8109.html</url>
      
        <content type="html"><![CDATA[<p>注意：本人学习数据来源：b站：<a href="https://www.bilibili.com/video/BV1XV411C7TP?p=1">https://www.bilibili.com/video/BV1XV411C7TP?p=1</a></p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><p>登入SSMS,连接Sql Server 后，点击新建查询，在弹出的面板中输入：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> DBtest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者创建数据库,自定义属性：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> sys<span class="token punctuation">.</span><span class="token keyword">databases</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'DBtest'</span><span class="token punctuation">)</span><span class="token keyword">drop</span> <span class="token keyword">database</span> DBtest  <span class="token comment">--简单粗暴，在工作中慎用。</span><span class="token keyword">create</span> <span class="token keyword">database</span> DBtest<span class="token keyword">on</span>  <span class="token comment">--数据文件 </span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">'DBtest'</span><span class="token punctuation">,</span><span class="token comment">--逻辑名称</span>filename <span class="token operator">=</span> <span class="token string">'C:\test\test3\DBtest.mdf'</span><span class="token punctuation">,</span> <span class="token comment">--物理路径</span>size <span class="token operator">=</span> <span class="token number">8</span>MB <span class="token punctuation">,</span> <span class="token comment">--初始大小</span>filegrowth <span class="token operator">=</span> <span class="token number">20</span><span class="token operator">%</span>  <span class="token comment">--文件增长方式 或者 filegrowth = 2MB，即可以百分比设置，或者具体大小。</span><span class="token punctuation">)</span>log <span class="token keyword">on</span> <span class="token comment">--日志文件</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">'DBtes_log'</span><span class="token punctuation">,</span><span class="token comment">--逻辑名称</span>filename <span class="token operator">=</span> <span class="token string">'C:\test\test3\DBtest_log.mdf'</span><span class="token punctuation">,</span> <span class="token comment">--物理路径</span>size <span class="token operator">=</span> <span class="token number">8</span>MB <span class="token punctuation">,</span> <span class="token comment">--初始大小</span>filegrowth <span class="token operator">=</span> <span class="token number">20</span><span class="token operator">%</span> <span class="token comment">--文件增长方式 或者 filegrowth = 2MB，即可以百分比设置，或者具体增长大小。</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span> sys<span class="token punctuation">.</span>objects <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'Department'</span> <span class="token operator">and</span> <span class="token keyword">type</span> <span class="token operator">=</span> <span class="token string">'U'</span><span class="token punctuation">)</span> <span class="token keyword">drop</span> <span class="token keyword">table</span> Department <span class="token comment">--超级危险，慎用</span><span class="token keyword">use</span> DBtest <span class="token comment">--切换数据库</span><span class="token comment">--创建表基本语法</span><span class="token keyword">create</span> <span class="token keyword">table</span> Department<span class="token punctuation">(</span> D_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--identity(1,1):自动增长，初始值1，每次增长1。</span> D_Name nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> D_Remark <span class="token keyword">text</span> <span class="token comment">--部门描述</span><span class="token punctuation">)</span>    <span class="token comment">--char:定长</span><span class="token comment">--varchar:变长</span><span class="token comment">--text:长文本(效率较低)</span><span class="token comment">--char,varchar,text前面加n:存储unicode字符，对中文比较友好</span><span class="token comment">--比如：varchar(100):存储100个字母或者50个汉字</span><span class="token comment">--nvarchar(100):存储100个字母或者100个汉字</span><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">(</span> R_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--identity(1,1):自动增长，初始值1，每次增长1。</span> R_Name nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> R_Remark <span class="token keyword">text</span>     <span class="token punctuation">)</span>  <span class="token keyword">create</span> <span class="token keyword">table</span> People <span class="token punctuation">(</span> P_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--identity(1,1):自动增长，初始值1，每次增长1。</span> D_Id <span class="token keyword">int</span> <span class="token keyword">references</span> Department<span class="token punctuation">(</span>D_Id<span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token punctuation">,</span> <span class="token comment">--引用外键</span> R_Id <span class="token keyword">int</span> <span class="token keyword">references</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">(</span>R_Id<span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token punctuation">,</span>    P_Name nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> P_Gender nvarchar<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token string">'男'</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>P_Gender <span class="token operator">=</span> <span class="token string">'男'</span><span class="token operator">or</span> P_Gender <span class="token operator">=</span> <span class="token string">'女'</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token punctuation">,</span> P_Birthday smalldatetime <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> P_Salary <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">check</span><span class="token punctuation">(</span>P_Salary <span class="token operator">&gt;=</span> <span class="token number">1000</span> <span class="token operator">and</span>  P_Salary <span class="token operator">&lt;=</span> <span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token punctuation">,</span> P_Phone <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unique</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> P_Address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> P_AddTime smalldatetime <span class="token keyword">default</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改表结构"><a href="#修改表结构" class="headerlink" title="修改表结构"></a>修改表结构</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtest<span class="token comment">--添加列</span><span class="token keyword">alter</span> <span class="token keyword">table</span> People <span class="token keyword">add</span> P_Mail <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token comment">--删除列</span><span class="token keyword">alter</span> <span class="token keyword">table</span> People <span class="token keyword">drop</span> <span class="token keyword">column</span> P_Mail <span class="token comment">--修改列  </span><span class="token keyword">alter</span> <span class="token keyword">table</span> People <span class="token keyword">alter</span> <span class="token keyword">column</span> P_Address <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="维护约束-删除，添加"><a href="#维护约束-删除，添加" class="headerlink" title="维护约束(删除，添加)"></a>维护约束(删除，添加)</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--删除约束</span><span class="token comment">--语法：alter table tableName drop constraint constrantName</span><span class="token comment">--例子：删除月薪的约束</span><span class="token keyword">alter</span> <span class="token keyword">table</span> People <span class="token keyword">drop</span> <span class="token keyword">constraint</span> CK__People__P_Salary__38996AB5<span class="token comment">--添加约束(check约束)</span><span class="token keyword">alter</span> <span class="token keyword">table</span> tableName <span class="token keyword">add</span> <span class="token keyword">constraint</span> constraintName <span class="token keyword">check</span> <span class="token punctuation">(</span>表达式<span class="token punctuation">)</span> <span class="token comment">--例子：添加工资字段约束，工资必须在1000-1000000之间</span><span class="token keyword">alter</span> <span class="token keyword">table</span> People <span class="token keyword">add</span> <span class="token keyword">constraint</span> CK__People__P_Salary <span class="token keyword">check</span> <span class="token punctuation">(</span>P_Salary <span class="token operator">&gt;=</span> <span class="token number">1000</span> <span class="token operator">and</span> P_Salary <span class="token operator">&lt;=</span> <span class="token number">1000000</span><span class="token punctuation">)</span><span class="token comment">--添加约束(主键约束) 语法：</span><span class="token keyword">alter</span> <span class="token keyword">table</span> tableName <span class="token keyword">add</span> <span class="token keyword">constraint</span> constraintName  <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span><span class="token comment">--添加约束(唯一约束) 语法：</span><span class="token keyword">alter</span> <span class="token keyword">table</span> tableName <span class="token keyword">add</span> <span class="token keyword">constraint</span> constraintName  <span class="token keyword">unique</span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span><span class="token comment">--添加约束(默认值) 语法：</span><span class="token keyword">alter</span> <span class="token keyword">table</span> tableName <span class="token keyword">add</span> <span class="token keyword">constraint</span> constraintName  <span class="token keyword">default</span> 默认值 <span class="token keyword">for</span> 列名 <span class="token comment">--添加约束(外键) 语法：</span><span class="token keyword">alter</span> <span class="token keyword">table</span> tableName <span class="token keyword">add</span> <span class="token keyword">constraint</span> constraintName  <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span> <span class="token keyword">references</span> 关联表名<span class="token punctuation">(</span>列名<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="向表插入数据"><a href="#向表插入数据" class="headerlink" title="向表插入数据"></a>向表插入数据</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtest<span class="token comment">--向部门表插入数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department<span class="token punctuation">(</span>D_Name<span class="token punctuation">,</span>D_Remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'市场部'</span><span class="token punctuation">,</span><span class="token string">'......'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department<span class="token punctuation">(</span>D_Name<span class="token punctuation">,</span>D_Remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'软件部'</span><span class="token punctuation">,</span><span class="token string">'......'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department<span class="token punctuation">(</span>D_Name<span class="token punctuation">,</span>D_Remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'企划部'</span><span class="token punctuation">,</span><span class="token string">'......'</span><span class="token punctuation">)</span><span class="token comment">--简写</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'硬件部'</span><span class="token punctuation">,</span><span class="token string">'......'</span><span class="token punctuation">)</span><span class="token comment">--一次性插入多行数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department<span class="token punctuation">(</span>D_Name<span class="token punctuation">,</span>D_Remark<span class="token punctuation">)</span> <span class="token keyword">select</span> <span class="token string">'测试部'</span><span class="token punctuation">,</span><span class="token string">'......'</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token string">'实施部'</span><span class="token punctuation">,</span><span class="token string">'......'</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token string">'产品部'</span><span class="token punctuation">,</span><span class="token string">'......'</span>   <span class="token comment">--向职级表插入数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span><span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">(</span>R_Name<span class="token punctuation">,</span>R_Remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'初级'</span><span class="token punctuation">,</span><span class="token string">'......'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span><span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">(</span>R_Name<span class="token punctuation">,</span>R_Remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'中级'</span><span class="token punctuation">,</span><span class="token string">'......'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span><span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">(</span>R_Name<span class="token punctuation">,</span>R_Remark<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'高级'</span><span class="token punctuation">,</span><span class="token string">'......'</span><span class="token punctuation">)</span> <span class="token comment">--向员工表插入数据</span><span class="token keyword">insert</span> <span class="token keyword">into</span> People<span class="token punctuation">(</span>D_Id<span class="token punctuation">,</span>R_Id<span class="token punctuation">,</span>P_Name<span class="token punctuation">,</span>P_Gender<span class="token punctuation">,</span>P_Birthday<span class="token punctuation">,</span>P_Salary<span class="token punctuation">,</span>P_Phone<span class="token punctuation">,</span>P_Address<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1995-2-1'</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token string">'13858888888'</span><span class="token punctuation">,</span><span class="token string">'中国'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据修改和删除"><a href="#数据修改和删除" class="headerlink" title="数据修改和删除"></a>数据修改和删除</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtest<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Department<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token comment">--修改表数据</span><span class="token comment">--语法：update 表名 set 字段1 = 值1 ，字段2 = 值2  where 语法</span><span class="token comment">--例子：每个人加薪1000元</span><span class="token keyword">update</span> People <span class="token keyword">set</span> P_Salary <span class="token operator">=</span> P_Salary <span class="token operator">+</span> <span class="token number">1000</span><span class="token comment">--例子：为刘备加薪1000</span><span class="token keyword">update</span> People <span class="token keyword">set</span> P_Salary <span class="token operator">=</span> P_Salary <span class="token operator">+</span> <span class="token number">1000</span> <span class="token keyword">where</span> P_Name <span class="token operator">=</span> <span class="token string">'刘备'</span><span class="token comment">--删除表数据</span><span class="token comment">--语法：delete from 表名 where 条件</span><span class="token comment">--例子：删除员工表所有记录</span><span class="token keyword">delete</span> <span class="token keyword">from</span> People<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>drop,truncate,delete简单区别：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--关于删除(drop,truncate,delete)</span><span class="token keyword">delete</span> <span class="token keyword">from</span> People <span class="token comment">--删除表数据，表对象和表结构依然存在</span><span class="token keyword">truncate</span> <span class="token keyword">table</span> People <span class="token comment">--删除表数据(清空数据)，表对象和表结构依然存在</span><span class="token keyword">drop</span> <span class="token keyword">table</span> People <span class="token comment">--删除表对象(删除最彻底)</span><span class="token comment">--truncate ,delete 区别：</span><span class="token comment">--truncate 清空所有数据，不能有条件。同时已经自动编号1，2，3，4 ...仍存在。即，原先表中有1，2，3，4.然后truncate 后，再添加数据，自动编号仍是1234</span><span class="token comment">--delete 可以删除所有数据，也可以带条件删除符合条件的数据。同时，已经自动编号的编号将永远消失。即，原先表中有1，2，3，4.然后delete 后，再添加数据，自动编号将变成5，6，7，8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtest<span class="token comment">--查询所有列所有行</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Department<span class="token comment">--查询指定列(姓名，性别，生日，月薪，电话)</span><span class="token keyword">select</span> P_Name<span class="token punctuation">,</span>P_Gender<span class="token punctuation">,</span>P_Birthday<span class="token punctuation">,</span>P_Salary<span class="token punctuation">,</span>P_Phone <span class="token keyword">from</span> People <span class="token comment">--查询指定列(姓名，性别，生日，月薪，电话)(显示中文列名 )</span><span class="token keyword">select</span> P_Name 姓名<span class="token punctuation">,</span>P_Gender 性别<span class="token punctuation">,</span>P_Birthday 生日<span class="token punctuation">,</span>P_Salary 月薪<span class="token punctuation">,</span>P_Phone 电话 <span class="token keyword">from</span> People  <span class="token comment">--查询出员工所在的城市(去掉重复数据)</span> <span class="token keyword">select</span> <span class="token keyword">distinct</span><span class="token punctuation">(</span>P_Address<span class="token punctuation">)</span> <span class="token keyword">from</span> People <span class="token comment">--假设准备加工资（上调20%），查询出加工资后的员工数据</span> <span class="token keyword">select</span> P_Name<span class="token punctuation">,</span>P_Gender<span class="token punctuation">,</span>P_Salary<span class="token punctuation">,</span>P_Salary<span class="token operator">*</span><span class="token number">1.2</span> 加薪后工资 <span class="token keyword">from</span> People<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtest<span class="token comment">--查询性别为女的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Gender <span class="token operator">=</span> <span class="token string">'女'</span><span class="token comment">--查询工资大于等于10000元的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Salary <span class="token operator">&gt;=</span> <span class="token number">10000</span><span class="token comment">--查询出性别为女，工资大于等于10000元的员工信息（多样性）</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Gender <span class="token operator">=</span> <span class="token string">'女'</span> <span class="token operator">and</span> P_Salary <span class="token operator">&gt;=</span> <span class="token number">10000</span><span class="token comment">--查询出出生年月在1980-1-1之后，而且月薪大于等于10000的女员工</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Birthday <span class="token operator">&gt;=</span> <span class="token string">'1980-1-1'</span> <span class="token operator">and</span> P_Salary <span class="token operator">&gt;=</span> <span class="token number">10000</span> <span class="token operator">and</span> P_Gender <span class="token operator">=</span> <span class="token string">'女'</span><span class="token comment">--查询月薪大于等于10000的员工，或者月薪大于等于8000的女员工</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Salary <span class="token operator">&gt;=</span> <span class="token number">10000</span> <span class="token operator">or</span> <span class="token punctuation">(</span>P_Salary <span class="token operator">&gt;=</span> <span class="token number">8000</span> <span class="token operator">and</span> P_Gender <span class="token operator">=</span> <span class="token string">'女'</span><span class="token punctuation">)</span><span class="token comment">--查询月薪在10000-20000之间的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Salary <span class="token operator">between</span> <span class="token number">10000</span> <span class="token operator">and</span> <span class="token number">20000</span><span class="token comment">--查询出地址在武汉或者北京的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Address <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">'北京'</span><span class="token punctuation">,</span><span class="token string">'武汉'</span><span class="token punctuation">)</span><span class="token comment">--排序</span><span class="token comment">--查询所有员工信息，根据工资排序，降序</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">order</span> <span class="token keyword">by</span> P_Salary <span class="token keyword">desc</span><span class="token comment">--查询所有员工信息，根据工资排序，升序 asc 排序是默认的</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">order</span> <span class="token keyword">by</span> P_Salary <span class="token keyword">asc</span><span class="token comment">--查询所有员工信息，根据名字长度排序（降序）</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">len</span><span class="token punctuation">(</span>P_Name<span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token comment">--查询出工资最高的5个人的信息</span><span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">order</span> <span class="token keyword">by</span> P_Salary <span class="token keyword">desc</span> <span class="token comment">--null:空值，即查询出地址没有填写的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Address <span class="token operator">is</span> <span class="token boolean">null</span><span class="token comment">--not null:空值，查询出地址已经填写的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Address <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token comment">--查询出80后的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Birthday <span class="token operator">&gt;=</span> <span class="token string">'1980-1-1'</span> <span class="token operator">and</span> P_Birthday <span class="token operator">&lt;=</span> <span class="token string">'1990-1-1'</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Birthday  <span class="token operator">between</span> <span class="token string">'1980-1-1'</span> <span class="token operator">and</span> <span class="token string">'1989-12-31'</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span>  <span class="token operator">between</span> <span class="token number">1980</span> <span class="token operator">and</span> <span class="token number">1989</span><span class="token comment">--查询30-40岁之间，并且工资在15000-30000之间的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">between</span> <span class="token number">30</span> <span class="token operator">and</span> <span class="token number">39</span><span class="token punctuation">)</span> <span class="token operator">and</span> P_Salary <span class="token operator">between</span> <span class="token number">15000</span> <span class="token operator">and</span> <span class="token number">30000</span><span class="token comment">--查询出星座是巨蟹座的员工信息（6.22-7.22）</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> <span class="token punctuation">(</span><span class="token keyword">month</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">6</span> <span class="token operator">and</span> <span class="token keyword">day</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">or</span>  <span class="token punctuation">(</span><span class="token keyword">month</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">7</span> <span class="token operator">and</span> <span class="token keyword">day</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token comment">--查询出工资比刘备高的人的信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> P_Salary <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Name <span class="token operator">=</span> <span class="token string">'刘备'</span><span class="token punctuation">)</span><span class="token comment">--查询所有员工信息，添加一列，显示生肖</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token punctuation">,</span>  <span class="token keyword">case</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">4</span> <span class="token keyword">then</span> <span class="token string">'鼠'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">5</span> <span class="token keyword">then</span> <span class="token string">'牛'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">6</span> <span class="token keyword">then</span> <span class="token string">'虎'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">7</span> <span class="token keyword">then</span> <span class="token string">'兔'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">8</span> <span class="token keyword">then</span> <span class="token string">'龙'</span>   <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">9</span> <span class="token keyword">then</span> <span class="token string">'蛇'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">10</span> <span class="token keyword">then</span> <span class="token string">'马'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">11</span> <span class="token keyword">then</span> <span class="token string">'羊'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">then</span> <span class="token string">'猴'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">then</span> <span class="token string">'鸡'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">then</span> <span class="token string">'狗'</span>  <span class="token keyword">when</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span> <span class="token operator">=</span> <span class="token number">3</span> <span class="token keyword">then</span> <span class="token string">'猪'</span>  <span class="token keyword">else</span> <span class="token string">''</span> <span class="token keyword">end</span> <span class="token string">'the Chinese Zodiac'</span><span class="token keyword">from</span> People<span class="token comment">--查询所有员工信息，添加一列，显示生肖(简化写法)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token punctuation">,</span>  <span class="token keyword">case</span> <span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">12</span>  <span class="token keyword">when</span> <span class="token number">4</span> <span class="token keyword">then</span> <span class="token string">'鼠'</span>  <span class="token keyword">when</span> <span class="token number">5</span> <span class="token keyword">then</span> <span class="token string">'牛'</span>  <span class="token keyword">when</span> <span class="token number">6</span> <span class="token keyword">then</span> <span class="token string">'虎'</span>  <span class="token keyword">when</span> <span class="token number">7</span> <span class="token keyword">then</span> <span class="token string">'兔'</span>  <span class="token keyword">when</span> <span class="token number">8</span> <span class="token keyword">then</span> <span class="token string">'龙'</span>   <span class="token keyword">when</span> <span class="token number">9</span> <span class="token keyword">then</span> <span class="token string">'蛇'</span>  <span class="token keyword">when</span> <span class="token number">10</span> <span class="token keyword">then</span> <span class="token string">'马'</span>  <span class="token keyword">when</span> <span class="token number">11</span> <span class="token keyword">then</span> <span class="token string">'羊'</span>  <span class="token keyword">when</span> <span class="token number">0</span> <span class="token keyword">then</span> <span class="token string">'猴'</span>  <span class="token keyword">when</span> <span class="token number">1</span> <span class="token keyword">then</span> <span class="token string">'鸡'</span>  <span class="token keyword">when</span> <span class="token number">2</span> <span class="token keyword">then</span> <span class="token string">'狗'</span>  <span class="token keyword">when</span> <span class="token number">3</span> <span class="token keyword">then</span> <span class="token string">'猪'</span>  <span class="token keyword">else</span> <span class="token string">''</span> <span class="token keyword">end</span> <span class="token string">'the Chinese Zodiac'</span><span class="token keyword">from</span> People<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><p>%：代表匹配0个字符、1个字符或多个字符<br>_：代表匹配有且只有1个字符<br>[]：代表匹配范围内<br>[^]：代表匹配不在范围内</p><p>例子如下：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--选取数据库</span><span class="token keyword">use</span> DBtest<span class="token comment">--查询姓刘的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People  <span class="token keyword">where</span> P_Name <span class="token operator">like</span> <span class="token string">'刘%'</span><span class="token comment">--查询名字中含有'备'的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People  <span class="token keyword">where</span> P_Name <span class="token operator">like</span> <span class="token string">'%备%'</span><span class="token comment">--查询名字中含有'备'或者'刘'的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People  <span class="token keyword">where</span> P_Name <span class="token operator">like</span> <span class="token string">'%备%'</span> <span class="token operator">or</span> P_Name <span class="token operator">like</span> <span class="token string">'%刘%'</span><span class="token comment">--查询姓刘的员工，名字是2个字(方法一)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People  <span class="token keyword">where</span> P_Name <span class="token operator">like</span> <span class="token string">'刘_'</span><span class="token comment">--查询姓刘的员工，名字是2个字(方法二)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> substring<span class="token punctuation">(</span>P_Name<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'刘'</span> <span class="token operator">and</span> <span class="token function">len</span><span class="token punctuation">(</span>P_Name<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token comment">--查询出名字最后一个字是备，名字一共两个字的员工信息(方法一)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People  <span class="token keyword">where</span> P_Name <span class="token operator">like</span> <span class="token string">'_备'</span><span class="token comment">--查询出名字最后一个字是备，名字一共两个字的员工信息(方法二)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> substring<span class="token punctuation">(</span>P_Name<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'备'</span> <span class="token operator">and</span> <span class="token function">LEN</span><span class="token punctuation">(</span>P_Name<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token comment">--查询出电话号码开头138的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Phone <span class="token operator">like</span> <span class="token string">'138%'</span><span class="token comment">--查询出电话号码开头138的员工信息,第4位可能是5，可能8 ，最后一个号码是8</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Phone <span class="token operator">like</span> <span class="token string">'138[5,8]%8'</span><span class="token comment">--查询出电话号码开头138的员工信息,第4位是2-5之间的数字 ，最后一个号码不是2和3(方法一)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Phone <span class="token operator">like</span> <span class="token string">'138[2,3,4,5]%[^2,3]'</span><span class="token comment">--查询出电话号码开头138的员工信息,第4位是2-5之间的数字 ，最后一个号码不是2和3(方法二)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Phone <span class="token operator">like</span> <span class="token string">'138[2-5]%[^2-3]'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><p>count:求数量<br>max:求最大值<br>min:求最小值<br>sum:求和<br>avg:求平均值</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--选取数据库</span><span class="token keyword">use</span> DBtest<span class="token comment">--求员工总人数</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num <span class="token keyword">from</span> People<span class="token comment">--求最大值，求最高工资</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary <span class="token keyword">from</span> People<span class="token comment">--求最小时，求最小工资</span><span class="token keyword">select</span> <span class="token function">MIN</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Min_P_Salary <span class="token keyword">from</span> People<span class="token comment">--求和，求所有员工的工资总和</span><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary <span class="token keyword">from</span> People<span class="token comment">--求平均值，求所有员工的平均工资(方法一)</span><span class="token keyword">select</span> <span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token keyword">from</span> People<span class="token comment">--求平均值，求所有员工的平均工资(方法二)</span><span class="token keyword">select</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> Avg_P_Salary <span class="token keyword">from</span> People<span class="token comment">----求平均值，求所有员工的平均工资(方法三)</span><span class="token keyword">select</span> <span class="token keyword">Convert</span><span class="token punctuation">(</span><span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span><span class="token punctuation">)</span>  Avg_P_Salary <span class="token keyword">from</span> People<span class="token comment">--求数量，最大值，最小值，总和，平均值，在一行显示</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num <span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Min_P_Salary <span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token keyword">from</span> People<span class="token comment">--查询出中国的员工人数，总工资，最高工资，最低工资和平均工资</span><span class="token keyword">select</span> <span class="token string">'中国'</span> country<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num <span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary <span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Min_P_Salary <span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Address<span class="token operator">=</span><span class="token string">'中国'</span><span class="token comment">--求出工资比平均工资高的人员信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Salary <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> <span class="token keyword">from</span> People<span class="token punctuation">)</span><span class="token comment">--求数量，年龄最大值，年龄最小值，年龄总和，年龄平均值，在一行显示(方法一)</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span> <span class="token function">MAX</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Max_P_Birthady<span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Min_P_Birthady<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Sum_P_Birthady<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Avg_P_Birthady <span class="token keyword">from</span> People<span class="token comment">--求数量，年龄最大值，年龄最小值，年龄总和，年龄平均值，在一行显示(方法二)</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span> <span class="token function">MAX</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Max_P_Birthady<span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Min_P_Birthady<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Sum_P_Birthady<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Avg_P_Birthady <span class="token keyword">from</span> People<span class="token comment">--计算出月薪在10000 以上的男性员工的最大年龄，最小年龄和平均年龄(方法一)</span><span class="token keyword">select</span> <span class="token string">'男'</span> Gender<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span> <span class="token function">MAX</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Max_P_Birthady<span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Min_P_Birthady<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Sum_P_Birthady<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Avg_P_Birthady <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Gender <span class="token operator">=</span> <span class="token string">'男'</span> <span class="token operator">and</span> P_Salary <span class="token operator">&gt;=</span> <span class="token number">10000</span><span class="token comment">--计算出月薪在10000 以上的男性员工的最大年龄，最小年龄和平均年龄(方法二)</span><span class="token keyword">select</span> <span class="token string">'男'</span> Gender<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span> <span class="token function">MAX</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Max_P_Birthady<span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Min_P_Birthady<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Sum_P_Birthady<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Avg_P_Birthady <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Gender <span class="token operator">=</span> <span class="token string">'男'</span> <span class="token operator">and</span> P_Salary <span class="token operator">&gt;=</span> <span class="token number">10000</span><span class="token comment">--计算出在中国的男性员工的最大年龄，最小年龄和平均年龄(方法一)</span><span class="token keyword">select</span> <span class="token string">'男'</span> Gender<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span> <span class="token function">MAX</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Max_P_Birthady<span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Min_P_Birthady<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Sum_P_Birthady<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> Avg_P_Birthady <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Gender <span class="token operator">=</span> <span class="token string">'男'</span> <span class="token operator">and</span> P_Address <span class="token operator">in</span><span class="token punctuation">(</span><span class="token string">'中国'</span><span class="token punctuation">)</span><span class="token comment">--计算出在中国的男性员工的最大年龄，最小年龄和平均年龄(方法二)</span><span class="token keyword">select</span> <span class="token string">'男'</span> Gender<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span> <span class="token function">MAX</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Max_P_Birthady<span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Min_P_Birthady<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Sum_P_Birthady<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Avg_P_Birthady <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Gender <span class="token operator">=</span> <span class="token string">'男'</span> <span class="token operator">and</span> P_Address <span class="token operator">=</span> <span class="token string">'中国'</span><span class="token comment">--求出年龄比平均年龄高的人员信息(方法一)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span>  <span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">AVG</span><span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token keyword">year</span><span class="token punctuation">(</span>P_Birthday<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> People<span class="token punctuation">)</span><span class="token comment">--求出年龄比平均年龄高的人员信息(方法二)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">where</span>  DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">AVG</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token keyword">year</span><span class="token punctuation">,</span> P_Birthday<span class="token punctuation">,</span> getDate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> People<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，ROUND函数用法：</p><p>round(num,len,[type])<br>num表示需要处理的数字，len表示需要保留的长度，type处理类型(0是默认值代表四舍五入，非0代表直接截取)<br>select ROUND(123.45454,3)  –123.45500<br>select ROUND(123.45454,3,1) –123.45400</p><p>其他聚合函数补充：</p><p>select DATEDIFF(day, ‘2019-08-20’, getDate());    –获取指定时间单位的差值<br>select DATEADD(MINUTE,-5,GETDATE())               –加减时间,此处为获取五分钟前的时间,MINUTE 表示分钟，可为         YEAR,MONTH,DAY,HOUR<br>select DATENAME(month, getDate());                –当前月份<br>select DATENAME(WEEKDAY, getDate());              –当前星期几<br>select DATEPART(month, getDate());                –当前月份<br>select DAY(getDate());                            –返回当前日期天数<br>select MONTH(getDate());                          –返回当前日期月数<br>select YEAR(getDate());                           –返回当前日期年数</p><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--选取数据库</span><span class="token keyword">use</span> DBtest<span class="token comment">--根据员工所在地区分组统计员工人数 ,员工工资总和 ,平均工资，最高工资和最低工资</span><span class="token comment">--方法一：使用union(此方案需要知道所有的地区，分别查询出所有地区的数据，然后使用union拼接起来。)</span><span class="token keyword">select</span> <span class="token string">'武汉'</span> <span class="token string">'city or country'</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Min_P_Salary<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Address <span class="token operator">=</span> <span class="token string">'武汉'</span> <span class="token keyword">union</span><span class="token keyword">select</span> <span class="token string">'中国'</span> <span class="token string">'city or country'</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Min_P_Salary<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Address <span class="token operator">=</span> <span class="token string">'中国'</span>  <span class="token comment">--...其它地区数据</span> <span class="token comment">--...其他地区数据</span> <span class="token comment">--方法二：使用Group by</span><span class="token keyword">select</span> P_Address <span class="token string">'city or country'</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Min_P_Salary<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token keyword">from</span> People <span class="token keyword">group</span> <span class="token keyword">by</span> P_Address<span class="token comment">--根据员工所在地区分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资，1996 年及以后出身的员工不参与统计。</span><span class="token keyword">select</span> P_Address <span class="token string">'city or country'</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Min_P_Salary<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token keyword">from</span> People<span class="token keyword">where</span> P_Birthday <span class="token operator">&lt;</span> <span class="token string">'1996-1-1'</span><span class="token keyword">group</span> <span class="token keyword">by</span> P_Address<span class="token comment">--根据员工所在地区分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资，要求筛选出员工人数至少在1人及以上的记录，并且1996年及以后出身的员工不参与统计。</span><span class="token keyword">select</span> P_Address <span class="token string">'city or country'</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Min_P_Salary<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token keyword">from</span> People <span class="token keyword">where</span> P_Birthday <span class="token operator">&lt;</span> <span class="token string">'1996-1-1'</span><span class="token keyword">group</span> <span class="token keyword">by</span> P_Address<span class="token keyword">having</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--选取数据库</span><span class="token keyword">use</span> DBtest<span class="token comment">--笛卡尔乘积</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Department<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People<span class="token punctuation">,</span>Department<span class="token comment">--此查询结果会将People表的所有数据和Department表的所有数据进行依次排列组合形成新的记录。</span><span class="token comment">--简单多表查询:此种查询不符合主外建关系的数据不会被显示</span><span class="token comment">--查询员工信息，同时显示部门名称</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People<span class="token punctuation">,</span>Department <span class="token keyword">where</span> People<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> Department<span class="token punctuation">.</span>D_Id <span class="token comment">--查询员工信息，同时显示职级名称</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People<span class="token punctuation">,</span><span class="token punctuation">[</span>Rank<span class="token punctuation">]</span> <span class="token keyword">where</span> People<span class="token punctuation">.</span>R_Id <span class="token operator">=</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Id <span class="token comment">--查询员工信息，同时显示部门名称，职位名称</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People<span class="token punctuation">,</span>Department<span class="token punctuation">,</span><span class="token punctuation">[</span>Rank<span class="token punctuation">]</span> <span class="token keyword">where</span> People<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> Department<span class="token punctuation">.</span>D_Id <span class="token operator">and</span> People<span class="token punctuation">.</span>R_Id <span class="token operator">=</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Id <span class="token comment">--内连接:此种查询不符合主外建关系的数据不会被显示</span><span class="token comment">--查询员工信息，同时显示部门名称</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">inner</span> <span class="token keyword">join</span> Department <span class="token keyword">on</span> People<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> Department<span class="token punctuation">.</span>D_Id <span class="token comment">--查询员工信息，同时显示职级名称</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">inner</span> <span class="token keyword">join</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span> <span class="token keyword">on</span> People<span class="token punctuation">.</span>R_Id <span class="token operator">=</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Id<span class="token comment">--查询员工信息，同时显示部门名称，职位名称</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">inner</span> <span class="token keyword">join</span> Department <span class="token keyword">on</span> People<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> Department<span class="token punctuation">.</span>D_Id <span class="token keyword">inner</span> <span class="token keyword">join</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span> <span class="token keyword">on</span> People<span class="token punctuation">.</span>R_Id <span class="token operator">=</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Id<span class="token comment">--外连接:外连接分为左外连接、右外连接和全外连接。</span><span class="token comment">--左外联接：以左表为主表显示全部数据，主外键关系找不到数据的地方null取代。</span><span class="token comment">--查询员工信息，同时显示部门名称</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">left</span> <span class="token keyword">join</span> Department <span class="token keyword">on</span> People<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> Department<span class="token punctuation">.</span>D_Id <span class="token comment">--查询员工信息，同时显示职级名称</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">left</span> <span class="token keyword">join</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span> <span class="token keyword">on</span> People<span class="token punctuation">.</span>R_Id <span class="token operator">=</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Id<span class="token comment">--查询员工信息，同时显示部门名称，职位名称</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People <span class="token keyword">left</span> <span class="token keyword">join</span> Department <span class="token keyword">on</span> People<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> Department<span class="token punctuation">.</span>D_Id <span class="token keyword">left</span> <span class="token keyword">join</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span> <span class="token keyword">on</span> People<span class="token punctuation">.</span>R_Id <span class="token operator">=</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Id<span class="token comment">--右外连接（right join）：右外连接和左外连接类似，A left join B == B right join A</span><span class="token comment">--全外连接（full join）：两张表的所有数据无论是否符合主外键关系必须全部显示，不符合主外键关系的地方null取代。</span><span class="token comment">--多表查询综合示例</span><span class="token comment">--查询出中国地区所有的员工信息，要求显示部门名称以及员工的详细资料</span><span class="token keyword">select</span> People<span class="token punctuation">.</span>P_Name <span class="token punctuation">,</span>People<span class="token punctuation">.</span>D_Id <span class="token punctuation">,</span>Department<span class="token punctuation">.</span>D_Name <span class="token punctuation">,</span>People<span class="token punctuation">.</span>P_Gender <span class="token punctuation">,</span>People<span class="token punctuation">.</span>P_Birthday <span class="token punctuation">,</span> People<span class="token punctuation">.</span>P_Salary <span class="token punctuation">,</span>People<span class="token punctuation">.</span>P_Phone <span class="token punctuation">,</span>People<span class="token punctuation">.</span>P_Address <span class="token keyword">from</span> People <span class="token keyword">left</span> <span class="token keyword">join</span> Department <span class="token keyword">on</span> People<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> Department<span class="token punctuation">.</span>D_Id<span class="token keyword">where</span> People<span class="token punctuation">.</span>P_Address <span class="token operator">=</span> <span class="token string">'中国'</span><span class="token comment">--查询出中国地区所有的员工信息，要求显示部门名称，职级名称以及员工的详细资料</span><span class="token keyword">select</span> People<span class="token punctuation">.</span>P_Name<span class="token punctuation">,</span>People<span class="token punctuation">.</span>D_Id<span class="token punctuation">,</span>Department<span class="token punctuation">.</span>D_Name<span class="token punctuation">,</span><span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Name<span class="token punctuation">,</span>People<span class="token punctuation">.</span>P_Gender <span class="token punctuation">,</span> People<span class="token punctuation">.</span>P_Birthday <span class="token punctuation">,</span>People<span class="token punctuation">.</span>P_Salary <span class="token punctuation">,</span>People<span class="token punctuation">.</span>P_Phone <span class="token punctuation">,</span>People<span class="token punctuation">.</span>P_Address <span class="token keyword">from</span> People <span class="token keyword">left</span> <span class="token keyword">join</span> Department <span class="token keyword">on</span> People<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> Department<span class="token punctuation">.</span>D_Id<span class="token keyword">left</span> <span class="token keyword">join</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span> <span class="token keyword">on</span> People<span class="token punctuation">.</span>R_Id <span class="token operator">=</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Id<span class="token keyword">where</span> People<span class="token punctuation">.</span>P_Address <span class="token operator">=</span> <span class="token string">'中国'</span><span class="token comment">--根据部门分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资。</span><span class="token comment">--提示：在进行分组统计查询的时候添加二表联合查询。</span><span class="token keyword">select</span> Department<span class="token punctuation">.</span>D_Name <span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary <span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span>  Min_P_Salary<span class="token keyword">from</span> People <span class="token keyword">left</span> <span class="token keyword">join</span> Department <span class="token keyword">on</span> People<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> Department<span class="token punctuation">.</span>D_Id<span class="token keyword">group</span> <span class="token keyword">by</span> Department<span class="token punctuation">.</span>D_Id<span class="token punctuation">,</span>Department<span class="token punctuation">.</span>D_Name<span class="token comment">--根据部门分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资，平均工资在10000 以下的不参与统计，并且根据平均工资降序排列。</span><span class="token keyword">select</span>  Department<span class="token punctuation">.</span>D_Name <span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary <span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span>  Min_P_Salary<span class="token keyword">from</span> People <span class="token keyword">left</span> <span class="token keyword">join</span> Department <span class="token keyword">on</span> Department<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> People<span class="token punctuation">.</span>D_Id<span class="token keyword">group</span> <span class="token keyword">by</span> Department<span class="token punctuation">.</span>D_Id<span class="token punctuation">,</span>Department<span class="token punctuation">.</span>D_Name<span class="token keyword">having</span> <span class="token function">AVG</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">10000</span><span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">AVG</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token comment">--根据部门名称，然后根据职位名称，分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资</span><span class="token keyword">select</span>  Department<span class="token punctuation">.</span>D_Name <span class="token punctuation">,</span><span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Name<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Count_Num<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> Sum_P_Salary<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> Avg_P_Salary <span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span> Max_P_Salary<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>People<span class="token punctuation">.</span>P_Salary<span class="token punctuation">)</span>  Min_P_Salary<span class="token keyword">from</span> People <span class="token keyword">left</span> <span class="token keyword">join</span> Department <span class="token keyword">on</span> Department<span class="token punctuation">.</span>D_Id <span class="token operator">=</span> People<span class="token punctuation">.</span>D_Id<span class="token keyword">left</span> <span class="token keyword">join</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span> <span class="token keyword">on</span> <span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Id <span class="token operator">=</span> People<span class="token punctuation">.</span>R_Id<span class="token keyword">group</span> <span class="token keyword">by</span> Department<span class="token punctuation">.</span>D_Id<span class="token punctuation">,</span>Department<span class="token punctuation">.</span>D_Name<span class="token punctuation">,</span><span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Id<span class="token punctuation">,</span><span class="token punctuation">[</span>Rank<span class="token punctuation">]</span><span class="token punctuation">.</span>R_Name<span class="token comment">--自连接：自己连接自己</span><span class="token keyword">create</span> <span class="token keyword">table</span> Dept<span class="token punctuation">(</span>    D_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>  <span class="token comment">--部门编号</span>    D_Name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--部门名称</span>    parentId <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>  <span class="token comment">--上级部门编号</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Dept<span class="token punctuation">(</span>D_Id<span class="token punctuation">,</span>D_Name<span class="token punctuation">,</span>ParentId<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'软件部'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Dept<span class="token punctuation">(</span>D_Id<span class="token punctuation">,</span>D_Name<span class="token punctuation">,</span>ParentId<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'硬件部'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Dept<span class="token punctuation">(</span>D_Id<span class="token punctuation">,</span>D_Name<span class="token punctuation">,</span>ParentId<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'软件研发部'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Dept<span class="token punctuation">(</span>D_Id<span class="token punctuation">,</span>D_Name<span class="token punctuation">,</span>ParentId<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'软件测试部'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Dept<span class="token punctuation">(</span>D_Id<span class="token punctuation">,</span>D_Name<span class="token punctuation">,</span>ParentId<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'软件实施部'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Dept<span class="token punctuation">(</span>D_Id<span class="token punctuation">,</span>D_Name<span class="token punctuation">,</span>ParentId<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'硬件研发部'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Dept<span class="token punctuation">(</span>D_Id<span class="token punctuation">,</span>D_Name<span class="token punctuation">,</span>ParentId<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'硬件测试部'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Dept<span class="token punctuation">(</span>D_Id<span class="token punctuation">,</span>D_Name<span class="token punctuation">,</span>ParentId<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'硬件实施部'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">--查询出所有部门信息，并且查询出自己的上级部门</span><span class="token keyword">select</span> A<span class="token punctuation">.</span>D_Id 部门编号<span class="token punctuation">,</span>A<span class="token punctuation">.</span>D_Name 部门名称<span class="token punctuation">,</span>B<span class="token punctuation">.</span>D_Name 上级名称 <span class="token keyword">from</span> Dept A <span class="token keyword">inner</span> <span class="token keyword">join</span> Dept B <span class="token keyword">on</span> A<span class="token punctuation">.</span>ParentId <span class="token operator">=</span> B<span class="token punctuation">.</span>D_Id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库结构设计三范式"><a href="#数据库结构设计三范式" class="headerlink" title="数据库结构设计三范式"></a>数据库结构设计三范式</h2><p>第一范式：是对属性的原子性，要求属性具有原子性，不可再分解<br>第二范式：是对记录的惟一性，要求记录有惟一标识，即实体的惟一性，即不存在部分依赖<br>第三范式：要求任何字段不能由其他字段派生出来，它要求字段没有冗余，即不存在传递依赖</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--表关系</span><span class="token keyword">use</span> DBtest<span class="token comment">--一对多关系（专业--学生）</span><span class="token keyword">create</span> <span class="token keyword">table</span> Profession  <span class="token comment">--专业</span><span class="token punctuation">(</span>    P_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--专业编号</span>    P_Name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token comment">--专业名称</span><span class="token punctuation">)</span><span class="token keyword">create</span> <span class="token keyword">table</span> Student <span class="token comment">--学生</span><span class="token punctuation">(</span>    S_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--学生编号</span>    P_Id <span class="token keyword">int</span> <span class="token keyword">references</span> Profession<span class="token punctuation">(</span>P_Id<span class="token punctuation">)</span><span class="token punctuation">,</span>    S_Name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--学生名字</span>    S_Gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token comment">--学生性别</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Profession<span class="token punctuation">(</span>P_Name<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'软件开发'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Profession<span class="token punctuation">(</span>P_Name<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'企业信息化'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student<span class="token punctuation">(</span>P_Id<span class="token punctuation">,</span>S_Name<span class="token punctuation">,</span>S_Gender<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student<span class="token punctuation">(</span>P_Id<span class="token punctuation">,</span>S_Name<span class="token punctuation">,</span>S_Gender<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'关羽'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student<span class="token punctuation">(</span>P_Id<span class="token punctuation">,</span>S_Name<span class="token punctuation">,</span>S_Gender<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'张飞'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student<span class="token punctuation">(</span>P_Id<span class="token punctuation">,</span>S_Name<span class="token punctuation">,</span>S_Gender<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'赵云'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Student <span class="token keyword">left</span> <span class="token keyword">join</span> Profession <span class="token keyword">on</span> Student<span class="token punctuation">.</span>P_Id <span class="token operator">=</span> Profession<span class="token punctuation">.</span>P_Id<span class="token comment">--一对一关系（学生基本信息--学生详情）</span><span class="token keyword">create</span> <span class="token keyword">table</span> StudentBasicInfo  <span class="token comment">--学生基本信息</span><span class="token punctuation">(</span>    S_BasicNo <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">--学号</span>    S_Name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--姓名</span>    S_Gender nvarchar<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>  <span class="token comment">--性别</span><span class="token punctuation">)</span><span class="token keyword">create</span> <span class="token keyword">table</span> StudentDetailInfo  <span class="token comment">--学生详细信息</span><span class="token punctuation">(</span>    S_DetailNo <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">--详细信息编号</span>    S_BasicNo <span class="token keyword">int</span> <span class="token keyword">references</span> StudentBasicInfo<span class="token punctuation">(</span>S_BasicNo<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">--学号,外键</span>    S_QQ <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--QQ</span>    S_Phone <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--电话</span>    S_Mail <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--邮箱</span>    S_Birth <span class="token keyword">date</span>         <span class="token comment">--生日</span><span class="token punctuation">)</span><span class="token comment">--多对多关系：（选课成绩--学生）</span><span class="token keyword">create</span> <span class="token keyword">table</span> Course <span class="token comment">--课程</span><span class="token punctuation">(</span>    C_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">--课程编号</span>    C_Name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--课程名称</span>    C_Content <span class="token keyword">text</span> <span class="token comment">--课程介绍</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Course<span class="token punctuation">(</span>C_Name<span class="token punctuation">,</span>C_Content<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'HTML'</span><span class="token punctuation">,</span><span class="token string">'静态网页的制作'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Course<span class="token punctuation">(</span>C_Name<span class="token punctuation">,</span>C_Content<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'Sql Server'</span><span class="token punctuation">,</span><span class="token string">'Sql Server学习'</span><span class="token punctuation">)</span><span class="token keyword">create</span> <span class="token keyword">table</span> Student1 <span class="token comment">--学生</span><span class="token punctuation">(</span>    S_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--学生编号</span>    S_Name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--学生名字</span>    S_Gender <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token comment">--学生性别</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student1<span class="token punctuation">(</span>S_Name<span class="token punctuation">,</span>S_Gender<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student1<span class="token punctuation">(</span>S_Name<span class="token punctuation">,</span>S_Gender<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'关羽'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">create</span> <span class="token keyword">Table</span> Exam <span class="token comment">--考试信息表</span><span class="token punctuation">(</span>    E_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--选课成绩编号</span>    S_Id <span class="token keyword">int</span> <span class="token keyword">references</span> Student1<span class="token punctuation">(</span>S_Id<span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--学生编号</span>    C_Id <span class="token keyword">int</span> <span class="token keyword">references</span> Course<span class="token punctuation">(</span>C_Id<span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>  <span class="token comment">--课程编号</span>    E_Score <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--考试分数</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Exam<span class="token punctuation">(</span>S_Id<span class="token punctuation">,</span>C_Id<span class="token punctuation">,</span>E_Score<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Exam<span class="token punctuation">(</span>S_Id<span class="token punctuation">,</span>C_Id<span class="token punctuation">,</span>E_Score<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Exam<span class="token punctuation">(</span>S_Id<span class="token punctuation">,</span>C_Id<span class="token punctuation">,</span>E_Score<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Student1 <span class="token keyword">inner</span> <span class="token keyword">join</span> Exam <span class="token keyword">on</span> Student1<span class="token punctuation">.</span>S_Id <span class="token operator">=</span> Exam<span class="token punctuation">.</span>S_Id<span class="token keyword">inner</span> <span class="token keyword">join</span> Course <span class="token keyword">on</span> Course<span class="token punctuation">.</span>C_Id <span class="token operator">=</span> Exam<span class="token punctuation">.</span>C_Id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库设计案例"><a href="#数据库设计案例" class="headerlink" title="数据库设计案例"></a>数据库设计案例</h2><p>模拟银行业务，设计简易版的银行数据库表结构，要求可以完成以下基本功能需求：<br>1.银行开户（注册个人信息）及开卡（办理银行卡）（一个人可以办理多张银行卡，但是最多只能办理3张）<br>2.存钱<br>3.查询余额<br>4.取钱<br>5.转账<br>6.查看交易记录<br>7.账户挂失<br>8.账户注销</p><p>表设计:</p><p>1.账户信息表：存储个人信息。<br>2.银行卡表：存储银行卡信息。<br>3.交易信息表（存储存钱和取钱的记录）<br>4.转账信息表（存储转账信息记录）<br>5.状态信息变化表（存储银行卡状态变化的记录，状态有1:正常,2:挂失,3:冻结,4:注销）</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--账户信息表：存储个人信息</span><span class="token keyword">create</span> <span class="token keyword">table</span> AccountInfo<span class="token punctuation">(</span>    A_Id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--账户编号</span>    A_Code <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--身份证号码</span>    A_Phone <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--电话号码</span>    A_RealName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--真实姓名</span>    A_OpenTime smalldatetime <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--开户时间</span><span class="token punctuation">)</span><span class="token comment">--银行卡表：存储银行卡信息</span><span class="token keyword">create</span> <span class="token keyword">table</span> BankCard<span class="token punctuation">(</span>    B_CardNo <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span> <span class="token comment">--银行卡卡号</span>    B_A_Id <span class="token keyword">int</span> <span class="token keyword">references</span> AccountInfo<span class="token punctuation">(</span>A_Id<span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token comment">--账户编号（与账户信息表形成主外键关系）</span>    B_Pwd <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--银行卡密码</span>    B_Money money <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--银行卡余额</span>    B_State <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span><span class="token comment">--1:正常,2:挂失,3:冻结,4:注销</span>    B_Time smalldatetime <span class="token keyword">default</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">--开卡时间</span><span class="token punctuation">)</span><span class="token comment">--交易信息表（存储存钱和取钱的记录）</span><span class="token keyword">create</span> <span class="token keyword">table</span> CardExchange<span class="token punctuation">(</span>    C_ExchangeId <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--交易自动编号</span>    C_No <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">references</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--银行卡号(与银行卡表形成主外键关系)</span>    C_MoneyInBank money <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--存钱金额</span>    C_MoneyOutBank money <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--取钱金额</span>    C_ExchangeTime smalldatetime <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--交易时间</span><span class="token punctuation">)</span><span class="token comment">--转账信息表（存储转账信息记录）</span><span class="token keyword">create</span> <span class="token keyword">table</span> CardTransfer<span class="token punctuation">(</span>    C_TransferId <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">--转账自动编号</span>    C_NoOut <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">references</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--转出银行卡号(与银行卡表形成主外键关系)</span>    C_NoIn <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">references</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--转入银行卡号(与银行卡表形成主外键关系)</span>    C_TransferMoney money <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span><span class="token comment">--交易金额</span>    C_TransferTime smalldatetime <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--交易时间</span><span class="token punctuation">)</span><span class="token comment">--状态信息变化表（存储银行卡状态变化的记录，状态有1:正常,2:挂失,3:冻结,4:注销）</span><span class="token keyword">create</span> <span class="token keyword">table</span> CardStateChange<span class="token punctuation">(</span>    C_StateId <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">--状态信息自动编号</span>    C_No <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">references</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--银行卡号(与银行卡表形成主外键关系)</span>    C_OldState <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--银行卡原始状态</span>    C_NewState <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--银行卡新状态</span>    C_StateWhy <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--状态变化原因</span>    C_StateTime smalldatetime <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment">--记录产生时间</span><span class="token punctuation">)</span><span class="token comment">--为刘备，关羽，张飞三个人进行开户开卡的操作</span><span class="token comment">--刘备身份证：420107198905064135</span><span class="token comment">--关羽身份证：420107199507104133</span><span class="token comment">--张飞身份证：420107199602034138</span><span class="token keyword">insert</span> <span class="token keyword">into</span> AccountInfo<span class="token punctuation">(</span>A_Code<span class="token punctuation">,</span>A_Phone<span class="token punctuation">,</span>A_RealName<span class="token punctuation">,</span>A_OpenTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'420107198905064135'</span><span class="token punctuation">,</span><span class="token string">'13554785425'</span><span class="token punctuation">,</span><span class="token string">'刘备'</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">,</span>B_A_Id<span class="token punctuation">,</span>B_Pwd<span class="token punctuation">,</span>B_Money<span class="token punctuation">,</span>B_State<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225125478544587'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> AccountInfo<span class="token punctuation">(</span>A_Code<span class="token punctuation">,</span>A_Phone<span class="token punctuation">,</span>A_RealName<span class="token punctuation">,</span>A_OpenTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'420107199507104133'</span><span class="token punctuation">,</span><span class="token string">'13454788854'</span><span class="token punctuation">,</span><span class="token string">'关羽'</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">,</span>B_A_Id<span class="token punctuation">,</span>B_Pwd<span class="token punctuation">,</span>B_Money<span class="token punctuation">,</span>B_State<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225547858741263'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> AccountInfo<span class="token punctuation">(</span>A_Code<span class="token punctuation">,</span>A_Phone<span class="token punctuation">,</span>A_RealName<span class="token punctuation">,</span>A_OpenTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'420107199602034138'</span><span class="token punctuation">,</span><span class="token string">'13456896321'</span><span class="token punctuation">,</span><span class="token string">'张飞'</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">,</span>B_A_Id<span class="token punctuation">,</span>B_Pwd<span class="token punctuation">,</span>B_Money<span class="token punctuation">,</span>B_State<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225547854125656'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> AccountInfo<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> BankCard<span class="token comment">--进行存钱操作，刘备存钱2000元，关羽存钱：8000元，张飞存钱：500000元</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> AccountInfo<span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">+</span> <span class="token number">2000</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token string">'6225125478544587'</span><span class="token keyword">insert</span> <span class="token keyword">into</span> CardExchange<span class="token punctuation">(</span>C_No<span class="token punctuation">,</span>C_MoneyInBank<span class="token punctuation">,</span>C_MoneyOutBank<span class="token punctuation">,</span>C_ExchangeTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225125478544587'</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">+</span> <span class="token number">8000</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token string">'6225547858741263'</span><span class="token keyword">insert</span> <span class="token keyword">into</span> CardExchange<span class="token punctuation">(</span>C_No<span class="token punctuation">,</span>C_MoneyInBank<span class="token punctuation">,</span>C_MoneyOutBank<span class="token punctuation">,</span>C_ExchangeTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225547858741263'</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">+</span> <span class="token number">500000</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token string">'6225547854125656'</span><span class="token keyword">insert</span> <span class="token keyword">into</span> CardExchange<span class="token punctuation">(</span>C_No<span class="token punctuation">,</span>C_MoneyInBank<span class="token punctuation">,</span>C_MoneyOutBank<span class="token punctuation">,</span>C_ExchangeTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225547854125656'</span><span class="token punctuation">,</span><span class="token number">500000</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">--转账：刘备给张飞转账1000元</span><span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">-</span><span class="token number">1000</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token string">'6225125478544587'</span><span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">+</span> <span class="token number">1000</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token string">'6225547854125656'</span><span class="token keyword">insert</span> <span class="token keyword">into</span> CardTransfer<span class="token punctuation">(</span>C_NoOut<span class="token punctuation">,</span>C_NoIn<span class="token punctuation">,</span>C_TransferMoney<span class="token punctuation">,</span>C_TransferTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225125478544587'</span><span class="token punctuation">,</span><span class="token string">'6225547854125656'</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用T-SQL编程"><a href="#使用T-SQL编程" class="headerlink" title="使用T-SQL编程"></a>使用T-SQL编程</h2><h3 id="信息打印"><a href="#信息打印" class="headerlink" title="信息打印"></a>信息打印</h3><p>print:直接打印消息</p><p>select:在表格中打印消息，可以设置多列，以及每一列的名字</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>T-SQL中变量分为局部变量和全局变量</p><p>局部变量：（1）以@作为前缀（2）先声明，在赋值</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@str</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">set</span> <span class="token variable">@str</span> <span class="token operator">=</span> <span class="token string">'BingoLin'</span> <span class="token comment">--或者select @str = 'BingoLin'</span><span class="token keyword">print</span> <span class="token variable">@str</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>备注：set赋值和select赋值区别：</p><p>set：赋给变量指定的值</p><p>select：一般用于从表中查询出的数据，查询记录如果有多条，将最后一条记录的值赋给变量，</p><p>例如：</p><p>select @变量名 = 字段名 from 表名</p><p>在赋值过程中，如果是表中查询的数据，如果记录只有一条，使用set和select都可以，但是习惯上使用select。</p><p>全局变量：（1）以@@作为前缀（2）由系统进行定义和维护,只读</p><p>@@ERROR：返回执行的上一个语句的错误号</p><p>@@IDENTITY：返回最后插入的标识值</p><p>@@MAX_CONNECTIONS：返回允许同时进行的最大用户连接数</p><p>@@ROWCOUNT：返回受上一语句影响的行数</p><p>@@SERVERNAME：返回运行 SQL Server 的本地服务器的名称</p><p>@@SERVICENAME：返回 SQL Server 正在其下运行的注册表项的名称</p><p>@@TRANCOUNT：返回当前连接的活动事务数</p><p>@@LOCK_TIMEOUT：返回当前会话的当前锁定超时设置（毫秒）</p><p>变量示例：</p><p>(1)为赵云此人进行开户开卡操作，赵云身份证：420107199904054233</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtest<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> AccountInfo<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> BankCard<span class="token keyword">declare</span> <span class="token variable">@AccountId</span> <span class="token keyword">int</span><span class="token keyword">insert</span> <span class="token keyword">into</span> AccountInfo<span class="token punctuation">(</span>A_Code<span class="token punctuation">,</span>A_Phone<span class="token punctuation">,</span>A_RealName<span class="token punctuation">,</span>A_OpenTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'420107199904054233'</span><span class="token punctuation">,</span><span class="token string">'15878547898'</span><span class="token punctuation">,</span><span class="token string">'赵云'</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">set</span> <span class="token variable">@AccountId</span> <span class="token operator">=</span> @<span class="token variable">@identity</span><span class="token keyword">insert</span> <span class="token keyword">into</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">,</span>B_A_Id<span class="token punctuation">,</span>B_Pwd<span class="token punctuation">,</span>B_Money<span class="token punctuation">,</span>B_State<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225123412357896'</span><span class="token punctuation">,</span><span class="token variable">@AccountId</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(2)需要求出张飞的银行卡卡号和余额，张飞身份证：420107199602034138</p><p>方案一：连接查询</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span> B_Money 余额 <span class="token keyword">from</span> BankCard <span class="token keyword">left</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span class="token keyword">where</span> A_Code <span class="token operator">=</span> <span class="token string">'420107199602034138'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>方案二：使用变量</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@A_Id</span> <span class="token keyword">int</span><span class="token keyword">select</span> <span class="token variable">@A_Id</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> A_Id <span class="token keyword">from</span> AccountInfo <span class="token keyword">where</span> A_Code <span class="token operator">=</span> <span class="token string">'420107199602034138'</span><span class="token punctuation">)</span><span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span> B_Money 余额 <span class="token keyword">from</span> BankCard <span class="token keyword">where</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> <span class="token variable">@A_Id</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="go语句"><a href="#go语句" class="headerlink" title="go语句"></a>go语句</h3><p>（1）等待go语句前的代码执行完成后，再执行go后面的代码。</p><p>（2）批处理语句的结束标志。</p><p>下面的@num变量作用域为全局</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@num</span> <span class="token keyword">int</span><span class="token keyword">set</span> <span class="token variable">@num</span> <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>下面的@num变量的作用域是局部，只在两个go之间可以使用，最后一行代码会报错</p><p>………sql代码</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">go<span class="token keyword">declare</span> <span class="token variable">@num</span> <span class="token keyword">int</span><span class="token keyword">set</span> <span class="token variable">@num</span> <span class="token operator">=</span> <span class="token number">0</span>go<span class="token keyword">set</span> <span class="token variable">@num</span> <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>T-SQL中使用的运算符分为7种</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">算数运算符：加（<span class="token operator">+</span>）、减（<span class="token operator">-</span>）、乘（<span class="token operator">*</span>）、除（<span class="token operator">/</span>）、模（<span class="token operator">%</span>） 逻辑运算符：<span class="token operator">AND</span>、<span class="token operator">OR</span>、<span class="token operator">LIKE</span>、<span class="token operator">BETWEEN</span>、<span class="token operator">IN</span>、<span class="token keyword">EXISTS</span>、<span class="token operator">NOT</span>、<span class="token keyword">ALL</span>、<span class="token keyword">ANY</span>、 赋值运算符：<span class="token operator">=</span> 字符串运算符：<span class="token operator">+</span> 比较运算符：<span class="token operator">=</span>、<span class="token operator">&gt;</span>、<span class="token operator">&lt;</span>、<span class="token operator">&gt;=</span>、<span class="token operator">&lt;=</span>、<span class="token operator">&lt;&gt;</span> 位运算符：<span class="token operator">|</span>、<span class="token operator">&amp;</span>、<span class="token operator">^</span> 复合运算符：<span class="token operator">+</span><span class="token operator">=</span>、<span class="token operator">-</span><span class="token operator">=</span>、<span class="token operator">/</span><span class="token operator">=</span>、<span class="token operator">%</span><span class="token operator">=</span>、<span class="token operator">*</span><span class="token operator">=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例：</p><p>已知长方形的长和宽，求长方形的周长和面积：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@c</span> <span class="token keyword">int</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">declare</span> <span class="token variable">@k</span> <span class="token keyword">int</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token keyword">declare</span> <span class="token variable">@zc</span> <span class="token keyword">int</span><span class="token keyword">declare</span> <span class="token variable">@mj</span> <span class="token keyword">int</span><span class="token keyword">set</span> <span class="token variable">@zc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">@c</span><span class="token operator">+</span><span class="token variable">@k</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token keyword">set</span> <span class="token variable">@mj</span> <span class="token operator">=</span> <span class="token variable">@c</span> <span class="token operator">*</span> <span class="token variable">@k</span><span class="token keyword">print</span> <span class="token string">'周长为:'</span> <span class="token operator">+</span> <span class="token keyword">Convert</span><span class="token punctuation">(</span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@zc</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token string">'面积为:'</span> <span class="token operator">+</span> <span class="token keyword">Convert</span><span class="token punctuation">(</span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@mj</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查询银行卡状态为冻结为”1”，并且余额超过1000的银行卡信息:</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> BankCard <span class="token keyword">where</span> B_State <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">and</span> B_Money <span class="token operator">&gt;</span> <span class="token number">1000</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关羽身份证：420107199507104133，关羽到银行来开户，查询身份证在账户表是否存在，不存在则进行开户开卡，存在则不开户直接开卡:</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtestgo<span class="token keyword">declare</span> <span class="token variable">@A_Id</span> <span class="token keyword">int</span><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> AccountInfo <span class="token keyword">where</span> A_Code <span class="token operator">=</span> <span class="token string">'420107199507104133'</span><span class="token punctuation">)</span>    <span class="token keyword">begin</span>               <span class="token keyword">select</span> <span class="token variable">@A_Id</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> A_Id <span class="token keyword">from</span> AccountInfo <span class="token keyword">where</span> A_Code <span class="token operator">=</span> <span class="token string">'420107199507104133'</span><span class="token punctuation">)</span>        <span class="token keyword">insert</span> <span class="token keyword">into</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">,</span>B_A_Id<span class="token punctuation">,</span>B_Pwd<span class="token punctuation">,</span>B_Money<span class="token punctuation">,</span>B_State<span class="token punctuation">)</span>        <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225456875357896'</span><span class="token punctuation">,</span><span class="token variable">@A_Id</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>                  <span class="token keyword">end</span><span class="token keyword">else</span>    <span class="token keyword">begin</span>        <span class="token keyword">insert</span> <span class="token keyword">into</span> AccountInfo<span class="token punctuation">(</span>A_Code<span class="token punctuation">,</span>A_Phone<span class="token punctuation">,</span>A_RealName<span class="token punctuation">,</span>A_OpenTime<span class="token punctuation">)</span>        <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'420107199507104133'</span><span class="token punctuation">,</span><span class="token string">'13335645213'</span><span class="token punctuation">,</span><span class="token string">'关羽'</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">set</span> <span class="token variable">@A_Id</span> <span class="token operator">=</span> @<span class="token variable">@identity</span>        <span class="token keyword">insert</span> <span class="token keyword">into</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">,</span>B_A_Id<span class="token punctuation">,</span>B_Pwd<span class="token punctuation">,</span>B_Money<span class="token punctuation">,</span>B_State<span class="token punctuation">)</span>        <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225456875357896'</span><span class="token punctuation">,</span><span class="token variable">@A_Id</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>          <span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>扩展：上面需求添加一个限制即一个人最多只能开3张银行卡:</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtestgo<span class="token keyword">declare</span> <span class="token variable">@A_Id</span> <span class="token keyword">int</span><span class="token keyword">declare</span> <span class="token variable">@count</span> <span class="token keyword">int</span><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> AccountInfo <span class="token keyword">where</span> A_Code <span class="token operator">=</span> <span class="token string">'420107199507104133'</span><span class="token punctuation">)</span>    <span class="token keyword">begin</span>               <span class="token keyword">select</span> <span class="token variable">@A_Id</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> A_Id <span class="token keyword">from</span> AccountInfo <span class="token keyword">where</span> A_Code <span class="token operator">=</span> <span class="token string">'420107199507104133'</span><span class="token punctuation">)</span>        <span class="token keyword">select</span> <span class="token variable">@count</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> BankCard <span class="token keyword">where</span> B_A_Id <span class="token operator">=</span> <span class="token variable">@A_Id</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token variable">@count</span> <span class="token operator">&lt;=</span> <span class="token number">2</span>            <span class="token keyword">begin</span>                <span class="token keyword">insert</span> <span class="token keyword">into</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">,</span>B_A_Id<span class="token punctuation">,</span>B_Pwd<span class="token punctuation">,</span>B_Money<span class="token punctuation">,</span>B_State<span class="token punctuation">)</span>                <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225456875357898'</span><span class="token punctuation">,</span><span class="token variable">@A_Id</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>              <span class="token keyword">end</span>         <span class="token keyword">else</span>            <span class="token keyword">begin</span>                <span class="token keyword">print</span> <span class="token string">'一个人最多只能办理三张银行卡'</span>            <span class="token keyword">end</span>         <span class="token keyword">end</span><span class="token keyword">else</span>    <span class="token keyword">begin</span>        <span class="token keyword">insert</span> <span class="token keyword">into</span> AccountInfo<span class="token punctuation">(</span>A_Code<span class="token punctuation">,</span>A_Phone<span class="token punctuation">,</span>A_RealName<span class="token punctuation">,</span>A_OpenTime<span class="token punctuation">)</span>        <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'420107199507104133'</span><span class="token punctuation">,</span><span class="token string">'13335645213'</span><span class="token punctuation">,</span><span class="token string">'关羽'</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">set</span> <span class="token variable">@A_Id</span> <span class="token operator">=</span> @<span class="token variable">@identity</span>        <span class="token keyword">insert</span> <span class="token keyword">into</span> BankCard<span class="token punctuation">(</span>B_CardNo<span class="token punctuation">,</span>B_A_Id<span class="token punctuation">,</span>B_Pwd<span class="token punctuation">,</span>B_Money<span class="token punctuation">,</span>B_State<span class="token punctuation">)</span>        <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225456875357898'</span><span class="token punctuation">,</span><span class="token variable">@A_Id</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>          <span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查询银行卡账户余额，是不是所有的账户余额都超过了3000:</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtestgo<span class="token keyword">if</span> <span class="token number">3000</span> <span class="token operator">&lt;</span> <span class="token keyword">ALL</span><span class="token punctuation">(</span><span class="token keyword">select</span> B_Money <span class="token keyword">from</span> BankCard<span class="token punctuation">)</span>     <span class="token keyword">print</span> <span class="token string">'所有账户余额都超过了3000'</span><span class="token keyword">else</span>    <span class="token keyword">print</span> <span class="token string">'存在有余额不超过3000的账户'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="一、选择分之结构"><a href="#一、选择分之结构" class="headerlink" title="一、选择分之结构"></a>一、选择分之结构</h3><p>（1）某用户银行卡号为“6225547854125656”，该用户执行取钱操作，取钱5000元，余额充足则进行取钱操作，并提示”取钱成功”，否则提示“余额不足”。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtestgo<span class="token keyword">declare</span> <span class="token variable">@balance</span> money<span class="token keyword">select</span> <span class="token variable">@balance</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> B_Money <span class="token keyword">from</span> BankCard <span class="token keyword">where</span> B_CardNo<span class="token operator">=</span><span class="token string">'6225547854125656'</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token variable">@balance</span> <span class="token operator">&gt;=</span> <span class="token number">5000</span>    <span class="token keyword">begin</span>        <span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">-</span> <span class="token number">5000</span>        <span class="token keyword">insert</span> <span class="token keyword">into</span> CardExchange<span class="token punctuation">(</span>C_No<span class="token punctuation">,</span>C_MoneyInBank<span class="token punctuation">,</span>C_MoneyOutBank<span class="token punctuation">,</span>C_ExchangeTime<span class="token punctuation">)</span>        <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225547854125656'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">end</span><span class="token keyword">else</span>    <span class="token keyword">print</span> <span class="token string">'余额不足'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）查询银行卡信息，将银行卡状态1,2,3,4分别转换为汉字“正常,挂失,冻结,注销”，并且根据银行卡余额显示银行卡等级 30万以下为“普通用户”,30万及以上为”VIP用户”，显示列分别为卡号，身份证，姓名，余额，用户等级，银行卡状态。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtestgo<span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额<span class="token punctuation">,</span><span class="token keyword">case</span>    <span class="token keyword">when</span> B_Money <span class="token operator">&lt;</span> <span class="token number">300000</span> <span class="token keyword">then</span> <span class="token string">'普通用户'</span>    <span class="token keyword">else</span> <span class="token string">'VIP用户'</span> <span class="token keyword">end</span> 用户等级<span class="token punctuation">,</span><span class="token keyword">case</span>    <span class="token keyword">when</span> B_State <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">then</span> <span class="token string">'正常'</span>    <span class="token keyword">when</span> B_State <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">then</span> <span class="token string">'挂失'</span>    <span class="token keyword">when</span> B_State <span class="token operator">=</span> <span class="token number">3</span> <span class="token keyword">then</span> <span class="token string">'冻结'</span>    <span class="token keyword">when</span> B_State <span class="token operator">=</span> <span class="token number">4</span> <span class="token keyword">then</span> <span class="token string">'注销'</span>    <span class="token keyword">else</span> <span class="token string">'异常'</span> <span class="token keyword">end</span> 卡状态<span class="token keyword">from</span> BankCard <span class="token keyword">inner</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额<span class="token punctuation">,</span><span class="token keyword">case</span>    <span class="token keyword">when</span> B_Money <span class="token operator">&lt;</span> <span class="token number">300000</span> <span class="token keyword">then</span> <span class="token string">'普通用户'</span>    <span class="token keyword">else</span> <span class="token string">'VIP用户'</span> <span class="token keyword">end</span> 用户等级<span class="token punctuation">,</span><span class="token keyword">case</span> B_State    <span class="token keyword">when</span>  <span class="token number">1</span> <span class="token keyword">then</span> <span class="token string">'正常'</span>    <span class="token keyword">when</span>  <span class="token number">2</span> <span class="token keyword">then</span> <span class="token string">'挂失'</span>    <span class="token keyword">when</span>  <span class="token number">3</span> <span class="token keyword">then</span> <span class="token string">'冻结'</span>    <span class="token keyword">when</span>  <span class="token number">4</span> <span class="token keyword">then</span> <span class="token string">'注销'</span>    <span class="token keyword">else</span> <span class="token string">'异常'</span><span class="token keyword">end</span> 卡状态<span class="token keyword">from</span> BankCard <span class="token keyword">inner</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、循环结构"><a href="#二、循环结构" class="headerlink" title="二、循环结构"></a>二、循环结构</h3><p>（1）循环打印1-10。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@i</span> <span class="token keyword">int</span>  <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> <span class="token variable">@i</span> <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token keyword">begin</span>    <span class="token keyword">print</span> <span class="token variable">@i</span>    <span class="token keyword">set</span> <span class="token variable">@i</span> <span class="token operator">=</span> <span class="token variable">@i</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）循环打印九九乘法表</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@i</span> <span class="token keyword">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">declare</span> <span class="token variable">@str</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token variable">@i</span><span class="token operator">&lt;=</span><span class="token number">9</span><span class="token keyword">begin</span>    <span class="token keyword">declare</span> <span class="token variable">@j</span> <span class="token keyword">int</span> <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">set</span> <span class="token variable">@str</span> <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">while</span> <span class="token variable">@j</span> <span class="token operator">&lt;=</span> <span class="token variable">@i</span>    <span class="token keyword">begin</span>        <span class="token comment">--方案一</span>        <span class="token comment">--set @str = @str + cast(@i as varchar(2)) + '*' + cast(@j as varchar(2)) + </span>        <span class="token comment">--'=' + cast(@i*@j as varchar(2)) + CHAR(9)</span>        <span class="token comment">--方案二</span>        <span class="token keyword">set</span> <span class="token variable">@str</span> <span class="token operator">=</span> <span class="token variable">@str</span> <span class="token operator">+</span> <span class="token keyword">Convert</span><span class="token punctuation">(</span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@i</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'*'</span> <span class="token operator">+</span> <span class="token keyword">Convert</span><span class="token punctuation">(</span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@j</span><span class="token punctuation">)</span> <span class="token operator">+</span>         <span class="token string">'='</span> <span class="token operator">+</span> <span class="token keyword">Convert</span><span class="token punctuation">(</span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@i</span><span class="token operator">*</span><span class="token variable">@j</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>               <span class="token keyword">set</span> <span class="token variable">@j</span> <span class="token operator">=</span> <span class="token variable">@j</span> <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">end</span>    <span class="token keyword">print</span> <span class="token variable">@str</span>    <span class="token keyword">set</span> <span class="token variable">@i</span> <span class="token operator">=</span> <span class="token variable">@i</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>备注：</p><p>（1）特殊字符：制表符 CHAR(9)；换行符 CHAR(10)；回车 CHAR(13)；</p><p>（2）循环中若出现break和CONTINUE,作用与Java，C#等语言一致。</p><h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><p>（1）关羽的银行卡号为”6225547858741263”，查询出余额比关羽多的银行卡信息，显示卡号，身份证，姓名，余额。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--方案一：</span><span class="token keyword">declare</span> <span class="token variable">@gyBalance</span> money<span class="token keyword">select</span> <span class="token variable">@gyBalance</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> B_Money <span class="token keyword">from</span> BankCard <span class="token keyword">where</span> B_CardNo<span class="token operator">=</span><span class="token string">'6225547858741263'</span><span class="token punctuation">)</span><span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额 <span class="token keyword">from</span> BankCard <span class="token keyword">left</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span class="token keyword">where</span> B_Money <span class="token operator">&gt;</span> <span class="token variable">@gyBalance</span><span class="token comment">--方案二:</span><span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额 <span class="token keyword">from</span> BankCard <span class="token keyword">left</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span class="token keyword">where</span> B_Money <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> B_Money <span class="token keyword">from</span> BankCard <span class="token keyword">where</span> B_CardNo<span class="token operator">=</span><span class="token string">'6225547858741263'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）从所有账户信息中查询出余额最高的交易明细(存钱取钱信息)。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--方案一：</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> CardExchange <span class="token keyword">where</span> C_No <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> B_CardNo <span class="token keyword">from</span> BankCard <span class="token keyword">where</span> B_Money <span class="token operator">=</span>   <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>B_Money<span class="token punctuation">)</span> <span class="token keyword">from</span> BankCard<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">--方案二：（如果有多个银行卡余额相等并且最高，此方案只能求出其中一个人的明细）</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> CardExchange <span class="token keyword">where</span> C_No <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">1</span> B_CardNo <span class="token keyword">from</span> BankCard <span class="token keyword">order</span> <span class="token keyword">by</span> B_Money <span class="token keyword">desc</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）查询有取款记录的银行卡及账户信息，显示卡号，身份证，姓名，余额。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额 <span class="token keyword">from</span> BankCard <span class="token keyword">left</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span class="token keyword">where</span> B_CardNo <span class="token operator">in</span><span class="token punctuation">(</span><span class="token keyword">select</span> C_No <span class="token keyword">from</span> CardExchange <span class="token keyword">where</span> C_MoneyOutBank <span class="token operator">&lt;&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（4）查询出没有存款记录的银行卡及账户信息，显示卡号，身份证，姓名，余额。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额 <span class="token keyword">from</span> BankCard <span class="token keyword">left</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span class="token keyword">where</span> B_CardNo <span class="token operator">not</span> <span class="token operator">in</span><span class="token punctuation">(</span><span class="token keyword">select</span> C_No <span class="token keyword">from</span> CardExchange <span class="token keyword">where</span> C_MoneyOutBank <span class="token operator">&lt;&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（5）关羽的银行卡号为”6225547858741263”,查询当天是否有收到转账。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> CardTransfer <span class="token keyword">where</span> C_NoIn <span class="token operator">=</span> <span class="token string">'6225547858741263'</span><span class="token operator">and</span> <span class="token keyword">convert</span><span class="token punctuation">(</span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>C_TransferTime<span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">convert</span><span class="token punctuation">(</span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token string">'有转账记录'</span><span class="token keyword">else</span>    <span class="token keyword">print</span> <span class="token string">'没有转账记录'</span><span class="token comment">--备注：上述例子也可以使用not exists来实现，表示不存在记录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（6）查询出交易次数（存款取款操作）最多的银行卡账户信息，显示：卡号，身份证，姓名，余额，交易次数。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--方案一</span><span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">1</span> BankCard<span class="token punctuation">.</span>B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额<span class="token punctuation">,</span>exchangeCount 交易次数 <span class="token keyword">from</span> BankCard <span class="token keyword">inner</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span class="token keyword">inner</span> <span class="token keyword">join</span><span class="token punctuation">(</span><span class="token keyword">select</span> C_No<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> exchangeCount <span class="token keyword">from</span> CardExchange <span class="token keyword">group</span> <span class="token keyword">by</span> C_No<span class="token punctuation">)</span> CarcExchageTemp<span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_CardNo <span class="token operator">=</span> CarcExchageTemp<span class="token punctuation">.</span>C_No<span class="token keyword">order</span> <span class="token keyword">by</span> exchangeCount <span class="token keyword">desc</span><span class="token comment">--方案二(如果有多个人交易次数相同，都是交易次数最多，则使用以下方案)</span><span class="token keyword">select</span>  BankCard<span class="token punctuation">.</span>B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额<span class="token punctuation">,</span>交易次数 <span class="token keyword">from</span> AccountInfo<span class="token keyword">inner</span> <span class="token keyword">join</span> BankCard <span class="token keyword">on</span> AccountInfo<span class="token punctuation">.</span>A_Id <span class="token operator">=</span> BankCard<span class="token punctuation">.</span>B_A_Id<span class="token keyword">inner</span> <span class="token keyword">join</span><span class="token punctuation">(</span><span class="token keyword">select</span> C_No<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 交易次数 <span class="token keyword">from</span> CardExchange <span class="token keyword">group</span> <span class="token keyword">by</span> C_No<span class="token punctuation">)</span> <span class="token keyword">Temp</span> <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_CardNo <span class="token operator">=</span> <span class="token keyword">Temp</span><span class="token punctuation">.</span>C_No<span class="token keyword">where</span> 交易次数 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>交易次数<span class="token punctuation">)</span> <span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span> C_No<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 交易次数 <span class="token keyword">from</span> CardExchange <span class="token keyword">group</span> <span class="token keyword">by</span> C_No<span class="token punctuation">)</span> <span class="token keyword">Temp</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（7）查询出没有转账交易记录的银行卡账户信息，显示卡号，身份证，姓名，余额。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额 <span class="token keyword">from</span> BankCard <span class="token keyword">left</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span class="token keyword">where</span> BankCard<span class="token punctuation">.</span>B_CardNo <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> C_NoIn <span class="token keyword">from</span> CardTransfer<span class="token punctuation">)</span><span class="token operator">and</span> BankCard<span class="token punctuation">.</span>B_CardNo <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> C_NoOut <span class="token keyword">from</span> CardTransfer<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（8）分页</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--数据结构和数据如下：</span><span class="token keyword">create</span> <span class="token keyword">table</span> Student0<span class="token punctuation">(</span>    StuId <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--自动编号</span>    StuName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    StuSex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'关羽'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'张飞'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'赵云'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'马超'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'黄忠'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'魏延'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'简雍'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'诸葛亮'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'徐庶'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'周仓'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'关平'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'张苞'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'曹操'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'曹仁'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'曹丕'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'曹植'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'曹彰'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'典韦'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'许褚'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'夏侯敦'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'郭嘉'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'荀彧'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'贾诩'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'孙权'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'孙坚'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'孙策'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'太史慈'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'大乔'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Student0<span class="token punctuation">(</span>StuName<span class="token punctuation">,</span>StuSex<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'小乔'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="事务-索引-视图-游标"><a href="#事务-索引-视图-游标" class="headerlink" title="事务-索引-视图-游标"></a>事务-索引-视图-游标</h2><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><p>人员信息如下：（第二列是身份证号，第三列是银行卡卡号）</p><p>–刘备 420107198905064135 6225125478544587<br>–关羽 420107199507104133 6225547858741263<br>–张飞 420107199602034138 6225547854125656</p><p>（1）假设刘备取款6000，(添加check约束，设置账户余额必须&gt;=0)，要求：使用事务实现，修改余额和添加取款记录两步操作使用事务</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtest<span class="token keyword">begin</span> <span class="token keyword">transaction</span><span class="token keyword">declare</span> <span class="token variable">@MyError</span> <span class="token keyword">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money<span class="token operator">-</span><span class="token number">6000</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token string">'6225125478544587'</span><span class="token keyword">set</span> <span class="token variable">@MyError</span> <span class="token operator">=</span> <span class="token variable">@MyError</span> <span class="token operator">+</span> @<span class="token variable">@ERROR</span><span class="token keyword">insert</span> <span class="token keyword">into</span> CardExchange<span class="token punctuation">(</span>C_No<span class="token punctuation">,</span>C_MoneyInBank<span class="token punctuation">,</span>C_MoneyOutBank<span class="token punctuation">,</span>C_ExchangeTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225125478544587'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6000</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">set</span> <span class="token variable">@MyError</span> <span class="token operator">=</span> <span class="token variable">@MyError</span> <span class="token operator">+</span> @<span class="token variable">@ERROR</span><span class="token keyword">if</span> <span class="token variable">@MyError</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">begin</span>    <span class="token keyword">commit</span> <span class="token keyword">transaction</span>    <span class="token keyword">print</span> <span class="token string">'取款成功'</span><span class="token keyword">end</span> <span class="token keyword">else</span><span class="token keyword">begin</span>    <span class="token keyword">rollback</span> <span class="token keyword">transaction</span>    <span class="token keyword">print</span> <span class="token string">'余额不足'</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）假设刘备向张飞转账1000元，(添加check约束，设置账户余额必须&gt;=0)；分析步骤有三步（1）张飞添加1000元，（2）刘备扣除1000元，（3）生成转账记录；使用事务解决此问题。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">begin</span> <span class="token keyword">transaction</span><span class="token keyword">declare</span> <span class="token variable">@Error</span> <span class="token keyword">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">-</span><span class="token number">1000</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token string">'6225125478544587'</span><span class="token keyword">set</span> <span class="token variable">@Error</span> <span class="token operator">=</span> @<span class="token variable">@ERROR</span> <span class="token operator">+</span> <span class="token variable">@Error</span><span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">+</span> <span class="token number">1000</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token string">'6225547854125656'</span><span class="token keyword">set</span> <span class="token variable">@Error</span> <span class="token operator">=</span> @<span class="token variable">@ERROR</span> <span class="token operator">+</span> <span class="token variable">@Error</span><span class="token keyword">insert</span> <span class="token keyword">into</span> CardTransfer<span class="token punctuation">(</span>C_NoOut<span class="token punctuation">,</span>C_NoIn<span class="token punctuation">,</span>C_TransferMoney<span class="token punctuation">,</span>C_TransferTime<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'6225125478544587'</span><span class="token punctuation">,</span><span class="token string">'6225547854125656'</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">set</span> <span class="token variable">@Error</span> <span class="token operator">=</span> @<span class="token variable">@ERROR</span> <span class="token operator">+</span> <span class="token variable">@Error</span><span class="token keyword">if</span> <span class="token variable">@Error</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">begin</span>        <span class="token keyword">commit</span>        <span class="token keyword">print</span> <span class="token string">'转账成功'</span>    <span class="token keyword">end</span><span class="token keyword">else</span>    <span class="token keyword">begin</span>        <span class="token keyword">rollback</span>        <span class="token keyword">print</span> <span class="token string">'转账失败'</span>            <span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>索引：提高检索查询效率。</p><p><strong>SQL SERVER索引类型：</strong>按存储结构区分：“聚集索引（又称聚类索引，簇集索引）”，“非聚集索引（非聚类索引，非簇集索引）”；</p><p>聚集索引：根据数据行的键值在表或视图中的排序存储这些数据行，每个表只有一个聚集索引。聚集索引是一种对磁盘上实际数据重新组织以按指定的一列或多列值排序(类似字典中的拼音索引)(物理存储顺序)。</p><p>非聚集索引：具有独立于数据行的结构，包含非聚集索引键值，且每个键值项都有指向包含该键值的数据行的指针。（类似字典中的偏旁部首索引）（逻辑存储顺序）。</p><p><strong>SQL SERVER索引其他分类：</strong></p><p>按数据唯一性区分：“唯一索引”，“非唯一索引”；按键列个数区分：“单列索引”，“多列索引”。</p><p><strong>创建索引的方式：</strong></p><ol><li>通过显式的CREATE INDEX命令</li><li>在创建约束时作为隐含的对象<ol><li>主键约束(聚集索引)</li><li>唯一约束(唯一索引)</li></ol></li></ol><p><strong>创建索引语法：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">CLUSTERED</span> <span class="token operator">|</span> <span class="token keyword">NONCLUSTERED</span><span class="token punctuation">]</span><span class="token keyword">INDEX</span> <span class="token operator">&lt;</span><span class="token keyword">index</span> name<span class="token operator">&gt;</span> <span class="token keyword">ON</span> <span class="token operator">&lt;</span><span class="token keyword">table</span> <span class="token operator">or</span> <span class="token keyword">view</span> name<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token keyword">column</span> name<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>索引基本示例语法：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--exp:创建一个非聚集索引</span><span class="token comment">--create nonclustered index indexAccount on AccountInfo(AccountCode)</span><span class="token comment">--删除一个索引</span><span class="token comment">--drop index indexAccount on AccountInfo</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>备注：索引信息存储在系统视图sys.indexes中。</p><p><strong>按照指定索引进行查询</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> AccountInfo <span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">index</span><span class="token operator">=</span>indexAccount<span class="token punctuation">)</span> <span class="token keyword">where</span> AccountCode<span class="token operator">=</span><span class="token string">'6225125478544587'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p>视图：可以理解成虚拟表。</p><p>（1）编写视图实现查询出所有银行卡账户信息，显示卡号，身份证，姓名，余额。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">view</span> CardAndAccount <span class="token keyword">as</span><span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额 <span class="token keyword">from</span> BankCard <span class="token keyword">left</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Idgo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果要进行相应信息的查询，不需要编写复杂的SQL语句，直接使用视图，如下：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> CardAndAccount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h3><p>游标：定位到结果集中某一行。</p><p>游标分类：<br>（1）静态游标(Static)：在操作游标的时候，数据发生变化，游标中数据不变<br>（2）动态游标(Dynamic)：在操作游标的时候，数据发生变化，游标中数据改变，默认值。<br>（3）键集驱动游标(KeySet)：在操作游标的时候，被标识的列发生改变，游标中数据改变，其他列改变，游标中数据不变。</p><p>假设有如下表结构和数据：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> Member<span class="token punctuation">(</span>    MemberId <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    MemberAccount nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unique</span> <span class="token keyword">check</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>MemberAccount<span class="token punctuation">)</span> <span class="token operator">between</span> <span class="token number">6</span> <span class="token operator">and</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    MemberPwd nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    MemberNickname nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    MemberPhone nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Member<span class="token punctuation">(</span>MemberAccount<span class="token punctuation">,</span>MemberPwd<span class="token punctuation">,</span>MemberNickname<span class="token punctuation">,</span>MemberPhone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'liubei'</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token string">'4659874564'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Member<span class="token punctuation">(</span>MemberAccount<span class="token punctuation">,</span>MemberPwd<span class="token punctuation">,</span>MemberNickname<span class="token punctuation">,</span>MemberPhone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'guanyu'</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token string">'关羽'</span><span class="token punctuation">,</span><span class="token string">'42354234124'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Member<span class="token punctuation">(</span>MemberAccount<span class="token punctuation">,</span>MemberPwd<span class="token punctuation">,</span>MemberNickname<span class="token punctuation">,</span>MemberPhone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'zhangfei'</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token string">'张飞'</span><span class="token punctuation">,</span><span class="token string">'41253445'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Member<span class="token punctuation">(</span>MemberAccount<span class="token punctuation">,</span>MemberPwd<span class="token punctuation">,</span>MemberNickname<span class="token punctuation">,</span>MemberPhone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'zhangyun'</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token string">'赵云'</span><span class="token punctuation">,</span><span class="token string">'75675676547'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Member<span class="token punctuation">(</span>MemberAccount<span class="token punctuation">,</span>MemberPwd<span class="token punctuation">,</span>MemberNickname<span class="token punctuation">,</span>MemberPhone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'machao'</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">,</span><span class="token string">'马超'</span><span class="token punctuation">,</span><span class="token string">'532523523'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>创建游标：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--1.创建游标(Scroll代表滚动游标，不加Scroll则是只进的，只能支持fetch next)</span><span class="token keyword">declare</span> CURSORMember <span class="token keyword">cursor</span> scroll <span class="token keyword">for</span> <span class="token keyword">select</span> MemberAccount <span class="token keyword">from</span> Member<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>打开游标：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">open</span>  CURSORMember<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>提取数据：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">fetch</span> <span class="token keyword">first</span> <span class="token keyword">from</span> CURSORMember <span class="token comment">--结果集的第一行</span><span class="token keyword">fetch</span> <span class="token keyword">last</span> <span class="token keyword">from</span> CURSORMember  <span class="token comment">--最后一行</span><span class="token keyword">fetch</span> absolute <span class="token number">1</span> <span class="token keyword">from</span> CURSORMember <span class="token comment">--从游标的第一行开始数，第n行。</span><span class="token keyword">fetch</span> relative <span class="token number">3</span> <span class="token keyword">from</span> CURSORMember <span class="token comment">--从当前位置数，第n行。</span><span class="token keyword">fetch</span> <span class="token keyword">next</span> <span class="token keyword">from</span> CURSORMember <span class="token comment">--当前位置的下一行</span><span class="token keyword">fetch</span> prior <span class="token keyword">from</span> CURSORMember <span class="token comment">--当前位置的上一行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>提取数据给变量以供它用（取出第3行用户名，查询该用户详细信息）：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@MemberAccount</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token keyword">fetch</span> absolute <span class="token number">3</span> <span class="token keyword">from</span> CURSORMember <span class="token keyword">into</span> <span class="token variable">@MemberAccount</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Member <span class="token keyword">where</span> MemberAccount <span class="token operator">=</span> <span class="token variable">@MemberAccount</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>利用游标提取所有的账户信息：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--方案一：</span><span class="token keyword">fetch</span> absolute <span class="token number">1</span> <span class="token keyword">from</span> CURSORMember<span class="token keyword">while</span> @<span class="token variable">@FETCH_STATUS</span> <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">--@@FETCH_STATUS=0,提取成功，-1提取失败，-2行不存在</span>    <span class="token keyword">begin</span>        <span class="token keyword">fetch</span> <span class="token keyword">next</span> <span class="token keyword">from</span> CURSORMember    <span class="token keyword">end</span>    <span class="token comment">--方案二：</span><span class="token keyword">declare</span> <span class="token variable">@MemberAccount</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token comment">--fetch next from CURSORMember into @MemberAccount</span><span class="token keyword">fetch</span> absolute <span class="token number">1</span> <span class="token keyword">from</span> CURSORMember <span class="token keyword">into</span> <span class="token variable">@MemberAccount</span><span class="token keyword">while</span> @<span class="token variable">@FETCH_STATUS</span> <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">--@@FETCH_STATUS=0,提取成功，-1提取失败，-2行不存在</span>    <span class="token keyword">begin</span>        <span class="token keyword">print</span> <span class="token string">'提取成功:'</span> <span class="token operator">+</span> <span class="token variable">@MemberAccount</span>        <span class="token keyword">fetch</span> <span class="token keyword">next</span> <span class="token keyword">from</span> CURSORMember <span class="token keyword">into</span> <span class="token variable">@MemberAccount</span>    <span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>利用游标修改和删除数据：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">fetch</span> absolute <span class="token number">3</span> <span class="token keyword">from</span> CURSORMember<span class="token keyword">update</span> Member <span class="token keyword">set</span> MemberPwd <span class="token operator">=</span> <span class="token string">'1234567'</span> <span class="token keyword">where</span> <span class="token keyword">Current</span> <span class="token keyword">of</span> CURSORMember<span class="token keyword">fetch</span> absolute <span class="token number">3</span> <span class="token keyword">from</span> CURSORMember<span class="token keyword">delete</span> Member <span class="token keyword">where</span> <span class="token keyword">Current</span> <span class="token keyword">of</span> CURSORMember<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>关闭游标：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">close</span> CURSORMember<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>删除游标：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">deallocate</span> CURSORMember<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>创建游标指向某行多列数据,并循环显示数据：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--此处如果指向所有数据，可以将for后面的语句修改成select * from Member</span><span class="token keyword">declare</span> CURSORMember <span class="token keyword">cursor</span> scroll<span class="token keyword">for</span> <span class="token keyword">select</span> MemberAccount<span class="token punctuation">,</span>MemberPwd<span class="token punctuation">,</span>MemberNickname<span class="token punctuation">,</span>MemberPhone <span class="token keyword">from</span> Member<span class="token keyword">open</span> CURSORMember<span class="token keyword">declare</span> <span class="token variable">@MemberAccount</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token keyword">declare</span> <span class="token variable">@MemberPwd</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">declare</span> <span class="token variable">@MemberNickname</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">declare</span> <span class="token variable">@MemberPhone</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">fetch</span> <span class="token keyword">next</span> <span class="token keyword">from</span> CURSORMember <span class="token keyword">into</span> <span class="token variable">@MemberAccount</span><span class="token punctuation">,</span><span class="token variable">@MemberPwd</span><span class="token punctuation">,</span><span class="token variable">@MemberNickname</span><span class="token punctuation">,</span><span class="token variable">@MemberPhone</span><span class="token keyword">while</span> @<span class="token variable">@FETCH_STATUS</span> <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">--@@FETCH_STATUS=0,提取成功，-1提取失败，-2行不存在</span>    <span class="token keyword">begin</span>        <span class="token keyword">print</span> <span class="token string">'提取成功:'</span> <span class="token operator">+</span> <span class="token variable">@MemberAccount</span><span class="token operator">+</span><span class="token string">','</span><span class="token operator">+</span><span class="token variable">@MemberPwd</span><span class="token operator">+</span><span class="token string">','</span><span class="token operator">+</span><span class="token variable">@MemberNickname</span><span class="token operator">+</span><span class="token string">','</span><span class="token operator">+</span><span class="token variable">@MemberPhone</span>        <span class="token keyword">fetch</span> <span class="token keyword">next</span> <span class="token keyword">from</span> CURSORMember <span class="token keyword">into</span> <span class="token variable">@MemberAccount</span><span class="token punctuation">,</span><span class="token variable">@MemberPwd</span><span class="token punctuation">,</span><span class="token variable">@MemberNickname</span><span class="token punctuation">,</span><span class="token variable">@MemberPhone</span>    <span class="token keyword">end</span><span class="token keyword">close</span> CURSORMember<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="函数-存储过程-触发器"><a href="#函数-存储过程-触发器" class="headerlink" title="函数-存储过程-触发器"></a>函数-存储过程-触发器</h2><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>函数分为（1）系统函数，（2）自定义函数。</p><p>其中自定义函数又可以分为（1）标量值函数（返回单个值），（2）表值函数（返回查询结果）</p><p>本文主要介绍自定义函数的使用。</p><p>（1）编写一个函数求该银行的金额总和,然后函数调用</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtestgo<span class="token keyword">create</span> <span class="token keyword">function</span> GetSumCardMoney<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">returns</span> money <span class="token keyword">as</span><span class="token keyword">begin</span>    <span class="token keyword">declare</span> <span class="token variable">@AllMOney</span> money    <span class="token keyword">select</span> <span class="token variable">@AllMOney</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>B_Money<span class="token punctuation">)</span> <span class="token keyword">from</span> BankCard<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token variable">@AllMOney</span><span class="token keyword">end</span>go<span class="token keyword">select</span> dbo<span class="token punctuation">.</span>GetSumCardMoney<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述函数没有参数，下面介绍有参数的函数的定义及使用</p><p>（2）传入账户编号，返回账户真实姓名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">function</span> GetNameById<span class="token punctuation">(</span><span class="token variable">@AccountId</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">returns</span>  <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">as</span><span class="token keyword">begin</span>    <span class="token keyword">declare</span> <span class="token variable">@RealName</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>    <span class="token keyword">select</span> <span class="token variable">@RealName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> A_RealName <span class="token keyword">from</span> AccountInfo <span class="token keyword">where</span> A_Id <span class="token operator">=</span> <span class="token variable">@AccountId</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token variable">@RealName</span><span class="token keyword">end</span>go<span class="token keyword">print</span> dbo<span class="token punctuation">.</span>GetNameById<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）传递开始时间和结束时间，返回交易记录（存钱取钱），交易记录中包含 真实姓名，卡号，存钱金额，取钱金额，交易时间。</p><p>方案一（逻辑复杂，函数内容除了返回结果的sql语句还有其他内容，例如定义变量等）：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">function</span> GetExchangeByTime<span class="token punctuation">(</span><span class="token variable">@StartTime</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@EndTime</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">returns</span> <span class="token variable">@ExchangeTable</span> <span class="token keyword">table</span><span class="token punctuation">(</span>    RealName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">--真实姓名</span>    CardNo <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">--卡号</span>    MoneyInBank money<span class="token punctuation">,</span>     <span class="token comment">--存钱金额</span>    MoneyOutBank money<span class="token punctuation">,</span>    <span class="token comment">--取钱金额</span>    ExchangeTime smalldatetime  <span class="token comment">--交易时间</span><span class="token punctuation">)</span><span class="token keyword">as</span><span class="token keyword">begin</span>    <span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token variable">@ExchangeTable</span>    <span class="token keyword">select</span> AccountInfo<span class="token punctuation">.</span>A_RealName<span class="token punctuation">,</span>CardExchange<span class="token punctuation">.</span>C_No<span class="token punctuation">,</span>CardExchange<span class="token punctuation">.</span>C_MoneyInBank<span class="token punctuation">,</span>    CardExchange<span class="token punctuation">.</span>C_MoneyOutBank<span class="token punctuation">,</span>CardExchange<span class="token punctuation">.</span>C_ExchangeTime <span class="token keyword">from</span> CardExchange    <span class="token keyword">left</span> <span class="token keyword">join</span> BankCard <span class="token keyword">on</span> CardExchange<span class="token punctuation">.</span>C_No <span class="token operator">=</span> BankCard<span class="token punctuation">.</span>B_CardNo    <span class="token keyword">left</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id    <span class="token keyword">where</span> CardExchange<span class="token punctuation">.</span>C_ExchangeTime <span class="token operator">between</span> <span class="token variable">@StartTime</span><span class="token operator">+</span><span class="token string">' 00:00:00'</span> <span class="token operator">and</span> <span class="token variable">@EndTime</span><span class="token operator">+</span><span class="token string">' 23:59:59'</span>    <span class="token keyword">return</span><span class="token keyword">end</span>go<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> GetExchangeByTime<span class="token punctuation">(</span><span class="token string">'2018-6-1'</span><span class="token punctuation">,</span><span class="token string">'2021-7-1'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方案二（逻辑简单，函数内容直接是一条sql查询语句）：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">function</span> GetExchangeByTime<span class="token punctuation">(</span><span class="token variable">@StartTime</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@EndTime</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">returns</span> <span class="token keyword">table</span><span class="token keyword">as</span>    <span class="token keyword">return</span>    <span class="token keyword">select</span> AccountInfo<span class="token punctuation">.</span>A_RealName<span class="token punctuation">,</span>CardExchange<span class="token punctuation">.</span>C_No<span class="token punctuation">,</span>CardExchange<span class="token punctuation">.</span>C_MoneyInBank<span class="token punctuation">,</span>    CardExchange<span class="token punctuation">.</span>C_MoneyOutBank<span class="token punctuation">,</span>CardExchange<span class="token punctuation">.</span>C_ExchangeTime <span class="token keyword">from</span> CardExchange    <span class="token keyword">left</span> <span class="token keyword">join</span> BankCard <span class="token keyword">on</span> CardExchange<span class="token punctuation">.</span>C_No <span class="token operator">=</span> BankCard<span class="token punctuation">.</span>B_CardNo    <span class="token keyword">left</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id    <span class="token keyword">where</span> CardExchange<span class="token punctuation">.</span>C_ExchangeTime <span class="token operator">between</span> <span class="token variable">@StartTime</span><span class="token operator">+</span><span class="token string">' 00:00:00'</span> <span class="token operator">and</span> <span class="token variable">@EndTime</span><span class="token operator">+</span><span class="token string">' 23:59:59'</span>go<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> GetExchangeByTime<span class="token punctuation">(</span><span class="token string">'2018-6-19'</span><span class="token punctuation">,</span><span class="token string">'2021-7-19'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）查询银行卡信息，将银行卡状态1,2,3,4分别转换为汉字“正常,挂失,冻结,注销”，根据银行卡余额显示银行卡等级 30万以下为“普通用户”,30万及以上为”VIP用户”，分别显示卡号，身份证，姓名，余额，用户等级，银行卡状态。</p><p>方案一：直接在sql语句中使用case when</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> AccountInfo<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> BankCard<span class="token keyword">select</span> B_Money 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额<span class="token punctuation">,</span><span class="token keyword">case</span>    <span class="token keyword">when</span> B_Money <span class="token operator">&lt;</span> <span class="token number">300000</span> <span class="token keyword">then</span> <span class="token string">'普通用户'</span>    <span class="token keyword">else</span> <span class="token string">'VIP用户'</span> <span class="token keyword">end</span> 用户等级<span class="token punctuation">,</span><span class="token keyword">case</span>    <span class="token keyword">when</span> B_State <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">then</span> <span class="token string">'正常'</span>    <span class="token keyword">when</span> B_State <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">then</span> <span class="token string">'挂失'</span>    <span class="token keyword">when</span> B_State <span class="token operator">=</span> <span class="token number">3</span> <span class="token keyword">then</span> <span class="token string">'冻结'</span>    <span class="token keyword">when</span> B_State <span class="token operator">=</span> <span class="token number">4</span> <span class="token keyword">then</span> <span class="token string">'注销'</span>    <span class="token keyword">else</span> <span class="token string">'异常'</span><span class="token keyword">end</span> 卡状态<span class="token keyword">from</span> BankCard <span class="token keyword">inner</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方案二：将等级和状态用函数实现</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">function</span> GetGradeByMoney<span class="token punctuation">(</span><span class="token variable">@myMoney</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">returns</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">as</span><span class="token keyword">begin</span>    <span class="token keyword">declare</span> <span class="token variable">@result</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token variable">@myMoney</span> <span class="token operator">&lt;</span> <span class="token number">30000</span>         <span class="token keyword">set</span> <span class="token variable">@result</span> <span class="token operator">=</span> <span class="token string">'普通用户'</span>    <span class="token keyword">else</span>        <span class="token keyword">set</span> <span class="token variable">@result</span> <span class="token operator">=</span> <span class="token string">'VIP用户'</span>    <span class="token keyword">return</span> <span class="token variable">@result</span><span class="token keyword">end</span>go<span class="token keyword">create</span> <span class="token keyword">function</span> GetStatusByNumber<span class="token punctuation">(</span><span class="token variable">@myNum</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">returns</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">as</span><span class="token keyword">begin</span>    <span class="token keyword">declare</span> <span class="token variable">@result</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token variable">@myNum</span> <span class="token operator">=</span> <span class="token number">1</span>        <span class="token keyword">set</span> <span class="token variable">@result</span> <span class="token operator">=</span> <span class="token string">'正常'</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token variable">@myNum</span> <span class="token operator">=</span> <span class="token number">2</span>        <span class="token keyword">set</span> <span class="token variable">@result</span> <span class="token operator">=</span> <span class="token string">'挂失'</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token variable">@myNum</span> <span class="token operator">=</span> <span class="token number">3</span>        <span class="token keyword">set</span> <span class="token variable">@result</span> <span class="token operator">=</span> <span class="token string">'冻结'</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token variable">@myNum</span> <span class="token operator">=</span> <span class="token number">4</span>        <span class="token keyword">set</span> <span class="token variable">@result</span> <span class="token operator">=</span> <span class="token string">'注销'</span>    <span class="token keyword">else</span>        <span class="token keyword">set</span> <span class="token variable">@result</span> <span class="token operator">=</span> <span class="token string">'异常'</span>      <span class="token keyword">return</span> <span class="token variable">@result</span><span class="token keyword">end</span>go<span class="token keyword">select</span> B_CardNo 卡号<span class="token punctuation">,</span>A_Code 身份证<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额<span class="token punctuation">,</span>dbo<span class="token punctuation">.</span>GetGradeByMoney<span class="token punctuation">(</span>B_Money<span class="token punctuation">)</span> 账户等级<span class="token punctuation">,</span>dbo<span class="token punctuation">.</span>GetStatusByNumber<span class="token punctuation">(</span>B_State<span class="token punctuation">)</span> 卡状态<span class="token keyword">from</span> BankCard <span class="token keyword">inner</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（5）编写函数，根据出生日期求年龄，年龄求实岁，例如：</p><p> 生日为2000-5-5，当前为2018-5-4，年龄为17岁<br>​ 生日为2000-5-5，当前为2018-5-6，年龄为18岁</p><p>测试数据如下：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> Emp<span class="token punctuation">(</span>    EmpId <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--自动编号</span>    empName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--姓名</span>    empSex <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>   <span class="token comment">--性别</span>    empBirth smalldatetime <span class="token comment">--生日</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'2008-5-8'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'关羽'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1998-10-10'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'张飞'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1999-7-5'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'赵云'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'2003-12-12'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'马超'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'2003-1-5'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'黄忠'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1988-8-4'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'魏延'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1998-5-2'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'简雍'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1992-2-20'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'诸葛亮'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1993-3-1'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Emp<span class="token punctuation">(</span>empName<span class="token punctuation">,</span>empSex<span class="token punctuation">,</span>empBirth<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'徐庶'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1994-8-5'</span><span class="token punctuation">)</span>go<span class="token keyword">create</span> <span class="token keyword">function</span> GetAgeByBirth<span class="token punctuation">(</span><span class="token variable">@birth</span> smalldatetime<span class="token punctuation">)</span><span class="token keyword">returns</span> <span class="token keyword">int</span><span class="token keyword">as</span><span class="token keyword">begin</span>    <span class="token keyword">declare</span> <span class="token variable">@age</span> <span class="token keyword">int</span>    <span class="token keyword">set</span> <span class="token variable">@age</span> <span class="token operator">=</span> <span class="token keyword">year</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">year</span><span class="token punctuation">(</span><span class="token variable">@birth</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">month</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token keyword">month</span><span class="token punctuation">(</span><span class="token variable">@birth</span><span class="token punctuation">)</span>        <span class="token keyword">set</span> <span class="token variable">@age</span> <span class="token operator">=</span> <span class="token variable">@age</span> <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">if</span> <span class="token keyword">month</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">month</span><span class="token punctuation">(</span><span class="token variable">@birth</span><span class="token punctuation">)</span> <span class="token operator">and</span> <span class="token keyword">day</span><span class="token punctuation">(</span>getdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token keyword">day</span><span class="token punctuation">(</span><span class="token variable">@birth</span><span class="token punctuation">)</span>        <span class="token keyword">set</span> <span class="token variable">@age</span> <span class="token operator">=</span> <span class="token variable">@age</span> <span class="token operator">-</span><span class="token number">1</span>    <span class="token keyword">return</span> <span class="token variable">@age</span><span class="token keyword">end</span>go<span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span>dbo<span class="token punctuation">.</span>GetAgeByBirth<span class="token punctuation">(</span>empBirth<span class="token punctuation">)</span> 年龄 <span class="token keyword">from</span> Emp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h2><p>触发器分类：（1） “Instead of”触发器（2）“After”触发器<br>“Instead of”触发器：在执行操作之前被执行<br>“After”触发器：在执行操作之后被执行</p><p>触发器中后面的案例中需要用到的表及测试数据如下:</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">use</span> DBtestgo<span class="token comment">--部门</span><span class="token keyword">create</span> <span class="token keyword">table</span> Department1<span class="token punctuation">(</span>    DepartmentId <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">,</span> <span class="token comment">--主键，自动增长</span>    DepartmentName nvarchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--部门名称</span><span class="token punctuation">)</span><span class="token comment">--人员信息</span><span class="token keyword">create</span> <span class="token keyword">table</span> People1<span class="token punctuation">(</span>    PeopleId <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">identity</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--主键,自动增长</span>    DepartmentId <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--部门编号,外键,与部门表关联</span>    PeopleName nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--人员姓名</span>    PeopleSex nvarchar<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--人员性别</span>    PeoplePhone nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">--电话，联系方式</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>DepartmentName<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'001'</span><span class="token punctuation">,</span><span class="token string">'总经办'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>DepartmentName<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'002'</span><span class="token punctuation">,</span><span class="token string">'市场部'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>DepartmentName<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'003'</span><span class="token punctuation">,</span><span class="token string">'人事部'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>DepartmentName<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'004'</span><span class="token punctuation">,</span><span class="token string">'财务部'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> Department1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>DepartmentName<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'005'</span><span class="token punctuation">,</span><span class="token string">'软件部'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> People1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>PeopleName<span class="token punctuation">,</span>PeopleSex<span class="token punctuation">,</span>PeoplePhone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'001'</span><span class="token punctuation">,</span><span class="token string">'刘备'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'13558785478'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> People1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>PeopleName<span class="token punctuation">,</span>PeopleSex<span class="token punctuation">,</span>PeoplePhone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'001'</span><span class="token punctuation">,</span><span class="token string">'关羽'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'13558788785'</span><span class="token punctuation">)</span><span class="token keyword">insert</span> <span class="token keyword">into</span> People1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>PeopleName<span class="token punctuation">,</span>PeopleSex<span class="token punctuation">,</span>PeoplePhone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'002'</span><span class="token punctuation">,</span><span class="token string">'张飞'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'13698547125'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（1）假设有部门表和员工表，在添加员工的时候，该员工的部门编号如果在部门表中找不到，则自动添加部门信息，部门名称为”新部门”。</p><p>编写触发器：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_InsertPeople <span class="token keyword">on</span> People1<span class="token keyword">after</span> <span class="token keyword">insert</span><span class="token keyword">as</span><span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> Department1 <span class="token keyword">where</span> DepartmentId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> DepartmentId <span class="token keyword">from</span> inserted<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">insert</span> <span class="token keyword">into</span> Department1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>DepartmentName<span class="token punctuation">)</span>    <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> DepartmentId <span class="token keyword">from</span> inserted<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'新部门'</span><span class="token punctuation">)</span>go<span class="token keyword">insert</span> People1<span class="token punctuation">(</span>DepartmentId<span class="token punctuation">,</span>PeopleName<span class="token punctuation">,</span>PeopleSex<span class="token punctuation">,</span>PeoplePhone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'009'</span><span class="token punctuation">,</span><span class="token string">'赵云'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'13854587456'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）触发器实现，删除一个部门的时候将部门下所有员工全部删除。</p><p>编写触发器：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_DeleteDept <span class="token keyword">on</span> Department1<span class="token keyword">after</span> <span class="token keyword">delete</span><span class="token keyword">as</span><span class="token keyword">delete</span> <span class="token keyword">from</span> People1 <span class="token keyword">where</span> People1<span class="token punctuation">.</span>DepartmentId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> DepartmentId <span class="token keyword">from</span> deleted<span class="token punctuation">)</span>go<span class="token keyword">delete</span> Department1 <span class="token keyword">where</span> DepartmentId <span class="token operator">=</span> <span class="token string">'001'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）创建一个触发器，删除一个部门的时候判断该部门下是否有员工，有则不删除，没有则删除。</p><p>编写触发器：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_DeleteDept1 <span class="token keyword">on</span> Department1Instead <span class="token keyword">of</span> <span class="token keyword">delete</span><span class="token keyword">as</span>  <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> People1 <span class="token keyword">where</span> DepartmentId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> DepartmentId <span class="token keyword">from</span> deleted<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">begin</span>    <span class="token keyword">delete</span> <span class="token keyword">from</span> Department1 <span class="token keyword">where</span> DepartmentId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> DepartmentId <span class="token keyword">from</span> deleted<span class="token punctuation">)</span>  <span class="token keyword">end</span>go<span class="token keyword">delete</span> Department1 <span class="token keyword">where</span> DepartmentId <span class="token operator">=</span> <span class="token string">'001'</span><span class="token keyword">delete</span> Department1 <span class="token keyword">where</span> DepartmentId <span class="token operator">=</span> <span class="token string">'002'</span><span class="token keyword">delete</span> Department1 <span class="token keyword">where</span> DepartmentId <span class="token operator">=</span> <span class="token string">'003'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）修改一个部门编号之后，将该部门下所有员工的部门编号同步进行修改</p><p>编写触发器：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">trigger</span> tri_UpdateDept <span class="token keyword">on</span> Department1<span class="token keyword">after</span> <span class="token keyword">update</span><span class="token keyword">as</span>    <span class="token keyword">update</span> People1 <span class="token keyword">set</span> DepartmentId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> DepartmentId <span class="token keyword">from</span> inserted<span class="token punctuation">)</span>    <span class="token keyword">where</span> DepartmentId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> DepartmentId <span class="token keyword">from</span> deleted<span class="token punctuation">)</span>go<span class="token keyword">update</span> Department1 <span class="token keyword">set</span> DepartmentId <span class="token operator">=</span> <span class="token string">'zjb001'</span> <span class="token keyword">where</span> DepartmentId<span class="token operator">=</span><span class="token string">'002'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><p>存储过程（Procedure）是SQL语句和流程控制语句的预编译集合。</p><p>（1）没有输入参数，没有输出参数的存储过程。</p><p>定义存储过程实现查询出账户余额最低的银行卡账户信息,显示银行卡号，姓名，账户余额</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--方案一</span><span class="token keyword">create</span> <span class="token keyword">proc</span> proc_MinMoneyCard0<span class="token keyword">as</span>    <span class="token keyword">select</span> <span class="token keyword">top</span> <span class="token number">1</span> B_CardNo 银行卡号<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额    <span class="token keyword">from</span> BankCard <span class="token keyword">inner</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id    <span class="token keyword">order</span> <span class="token keyword">by</span> B_Money <span class="token keyword">asc</span>go<span class="token comment">--方案二：（余额最低，有多个人则显示结果是多个）</span><span class="token keyword">create</span> <span class="token keyword">proc</span> proc_MinMoneyCard<span class="token keyword">as</span>    <span class="token keyword">select</span> B_CardNo 银行卡号<span class="token punctuation">,</span>A_RealName 姓名<span class="token punctuation">,</span>B_Money 余额    <span class="token keyword">from</span> BankCard <span class="token keyword">inner</span> <span class="token keyword">join</span> AccountInfo <span class="token keyword">on</span> BankCard<span class="token punctuation">.</span>B_A_Id <span class="token operator">=</span> AccountInfo<span class="token punctuation">.</span>A_Id    <span class="token keyword">where</span> B_Money<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">MIN</span><span class="token punctuation">(</span>B_Money<span class="token punctuation">)</span> <span class="token keyword">from</span> BankCard<span class="token punctuation">)</span>go<span class="token comment">--执行</span><span class="token keyword">exec</span> proc_MinMoneyCard<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）有输入参数，没有输出参数的存储过程</p><p>模拟银行卡存钱操作，传入银行卡号，存钱金额，实现存钱操作</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">proc</span> proc_CunQian<span class="token variable">@CardNo</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@MoneyInBank</span> money<span class="token keyword">as</span>    <span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">+</span> <span class="token variable">@MoneyInBank</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token variable">@CardNo</span>    <span class="token keyword">insert</span> <span class="token keyword">into</span> CardExchange<span class="token punctuation">(</span>C_No<span class="token punctuation">,</span>C_MoneyInBank<span class="token punctuation">,</span>C_MoneyOutBank<span class="token punctuation">,</span>C_ExchangeTime<span class="token punctuation">)</span>    <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token variable">@CardNo</span><span class="token punctuation">,</span><span class="token variable">@MoneyInBank</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>go<span class="token comment">--执行</span><span class="token keyword">exec</span> proc_CunQian <span class="token string">'6225125478544587'</span><span class="token punctuation">,</span><span class="token number">3000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）有输入参数，没有输出参数，但是有返回值的存储过程（返回值必须整数）。</p><p>模拟银行卡取钱操作，传入银行卡号，取钱金额，实现取钱操作，取钱成功，返回1，取钱失败返回-1</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">proc</span> proc_QuQian<span class="token variable">@CardNo</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@MoneyOutBank</span> money<span class="token keyword">as</span>    <span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Money <span class="token operator">=</span> B_Money <span class="token operator">-</span> <span class="token variable">@MoneyOutBank</span> <span class="token keyword">where</span> B_CardNo <span class="token operator">=</span> <span class="token variable">@CardNo</span>    <span class="token keyword">if</span> @<span class="token variable">@ERROR</span> <span class="token operator">&lt;&gt;</span> <span class="token number">0</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>    <span class="token keyword">insert</span> <span class="token keyword">into</span> CardExchange<span class="token punctuation">(</span>C_No<span class="token punctuation">,</span>C_MoneyInBank<span class="token punctuation">,</span>C_MoneyOutBank<span class="token punctuation">,</span>C_ExchangeTime<span class="token punctuation">)</span>    <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token variable">@CardNo</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token variable">@MoneyOutBank</span><span class="token punctuation">,</span>GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">1</span>go<span class="token comment">--执行</span><span class="token keyword">declare</span> <span class="token variable">@returnValue</span> <span class="token keyword">int</span><span class="token keyword">exec</span> <span class="token variable">@returnValue</span> <span class="token operator">=</span> proc_QuQian <span class="token string">'6225547854125656'</span><span class="token punctuation">,</span><span class="token number">1000000</span><span class="token keyword">print</span> <span class="token variable">@returnValue</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）有输入参数，有输出参数的存储过程</p><p>查询出某时间段的银行存取款信息以及存款总金额，取款总金额，传入开始时间，结束时间，显示存取款交易信息的同时，返回存款总金额，取款总金额。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">proc</span> proc_SelectExchange    <span class="token variable">@startTime</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">--开始时间</span>    <span class="token variable">@endTime</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">--结束时间</span>    <span class="token variable">@SumIn</span> money output<span class="token punctuation">,</span>     <span class="token comment">--存款总金额</span>    <span class="token variable">@SumOut</span> money output    <span class="token comment">--取款总金额</span><span class="token keyword">as</span><span class="token keyword">select</span> <span class="token variable">@SumIn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>C_MoneyInBank<span class="token punctuation">)</span> <span class="token keyword">from</span> CardExchange                 <span class="token keyword">where</span> C_ExchangeTime <span class="token operator">between</span> <span class="token variable">@startTime</span><span class="token operator">+</span><span class="token string">' 00:00:00'</span> <span class="token operator">and</span> <span class="token variable">@endTime</span><span class="token operator">+</span><span class="token string">' 23:59:59'</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token variable">@SumOut</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>C_MoneyOutBank<span class="token punctuation">)</span> <span class="token keyword">from</span> CardExchange                 <span class="token keyword">where</span> C_ExchangeTime <span class="token operator">between</span> <span class="token variable">@startTime</span><span class="token operator">+</span><span class="token string">' 00:00:00'</span> <span class="token operator">and</span> <span class="token variable">@endTime</span><span class="token operator">+</span><span class="token string">' 23:59:59'</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> CardExchange <span class="token keyword">where</span> C_ExchangeTime <span class="token operator">between</span> <span class="token variable">@startTime</span><span class="token operator">+</span><span class="token string">' 00:00:00'</span> <span class="token operator">and</span> <span class="token variable">@endTime</span><span class="token operator">+</span><span class="token string">' 23:59:59'</span>go<span class="token comment">--执行</span><span class="token keyword">declare</span> <span class="token variable">@SumIn</span> money     <span class="token comment">--存款总金额</span><span class="token keyword">declare</span> <span class="token variable">@SumOut</span> money   <span class="token comment">--取款总金额</span><span class="token keyword">exec</span> proc_SelectExchange <span class="token string">'2018-1-1'</span><span class="token punctuation">,</span><span class="token string">'2021-12-31'</span><span class="token punctuation">,</span><span class="token variable">@SumIn</span> output<span class="token punctuation">,</span><span class="token variable">@SumOut</span> output<span class="token keyword">select</span> <span class="token variable">@SumIn</span><span class="token keyword">select</span> <span class="token variable">@SumOut</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（5）具有同时输入输出参数的存储过程</p><p>密码升级，传入用户名和密码，如果用户名密码正确，并且密码长度&lt;8，自动升级成8位密码</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">--有输入输出参数（密码作为输入参数也作为输出参数）</span><span class="token comment">--密码升级，传入用户名和密码，如果用户名密码正确，并且密码长度&lt;8，自动升级成8位密码</span><span class="token keyword">select</span> FLOOR<span class="token punctuation">(</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">--0-9之间随机数</span>go<span class="token keyword">create</span> <span class="token keyword">proc</span> proc_PwdUpgrade<span class="token variable">@cardno</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token variable">@pwd</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> output<span class="token keyword">as</span>    <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> BankCard <span class="token keyword">where</span> B_A_Id<span class="token operator">=</span><span class="token variable">@cardno</span> <span class="token operator">and</span> B_Pwd<span class="token operator">=</span><span class="token variable">@pwd</span><span class="token punctuation">)</span>        <span class="token keyword">set</span> <span class="token variable">@pwd</span> <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">else</span>    <span class="token keyword">begin</span>        <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token variable">@pwd</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">8</span>        <span class="token keyword">begin</span>            <span class="token keyword">declare</span> <span class="token variable">@len</span> <span class="token keyword">int</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token operator">-</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token variable">@pwd</span><span class="token punctuation">)</span>            <span class="token keyword">declare</span> <span class="token variable">@i</span> <span class="token keyword">int</span> <span class="token operator">=</span> <span class="token number">1</span>            <span class="token keyword">while</span> <span class="token variable">@i</span> <span class="token operator">&lt;=</span> <span class="token variable">@len</span>            <span class="token keyword">begin</span>                <span class="token keyword">set</span> <span class="token variable">@pwd</span> <span class="token operator">=</span> <span class="token variable">@pwd</span> <span class="token operator">+</span> cast<span class="token punctuation">(</span>FLOOR<span class="token punctuation">(</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">set</span> <span class="token variable">@i</span> <span class="token operator">=</span> <span class="token variable">@i</span><span class="token operator">+</span><span class="token number">1</span>            <span class="token keyword">end</span>            <span class="token keyword">update</span> BankCard <span class="token keyword">set</span> B_Pwd <span class="token operator">=</span> <span class="token variable">@pwd</span> <span class="token keyword">where</span> B_CardNo<span class="token operator">=</span><span class="token variable">@cardno</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>go<span class="token comment">--执行</span><span class="token keyword">declare</span> <span class="token variable">@pwd</span> nvarchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">'123456'</span><span class="token keyword">exec</span> proc_PwdUpgrade <span class="token string">'6225547854125656'</span><span class="token punctuation">,</span><span class="token variable">@pwd</span> output<span class="token keyword">select</span> <span class="token variable">@pwd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Win10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sql-Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql Select</title>
      <link href="posts/35760.html"/>
      <url>posts/35760.html</url>
      
        <content type="html"><![CDATA[<p>mysql select 命令练习学习笔记</p><p>本人学习笔记数据来源：b站视频<a href="https://www.bilibili.com/video/av39807944/?p=1">https://www.bilibili.com/video/av39807944/?p=1</a></p><h2 id="新建数据库、数据表"><a href="#新建数据库、数据表" class="headerlink" title="新建数据库、数据表"></a>新建数据库、数据表</h2><h3 id="新建数据库，数据表，打造查询环境"><a href="#新建数据库，数据表，打造查询环境" class="headerlink" title="新建数据库，数据表，打造查询环境"></a>新建数据库，数据表，打造查询环境</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create database selectTest;use selectTest;create table student(s_no varchar(20) primary key comment'学生学号',  s_name varchar(20) not null comment'学生姓名 不为空',  s_gender varchar(1) not null comment'学生性别',  s_birthday datetime comment'学生生日',  s_class varchar(20) comment'学生所在的班级');create table teacher(t_no varchar(20) primary key comment'教师编号',  t_name varchar(20) not null comment'教师姓名',  t_gender varchar(20) not null comment'教师性别',  t_birthday datetime comment'教师生日',  t_rof varchar(20) not null comment'教师职称',  t_depart varchar(20) not null comment'教师所在的部门');create table course(c_no varchar(20) primary key comment'课程号',  c_name varchar(20) not null comment'课程名称',  t_no varchar(20) not null comment'教师编号 外键关联teacher表',  foreign key(t_no) references teacher(t_no));create table score(s_no varchar(20) not null comment'成绩表的编号 依赖学生学号',  c_no varchar(20) not null comment'课程号 依赖课程表c_id',  sc_degree decimal,  foreign key(s_no) references student(s_no),  foreign key(c_no) references course(c_no),  primary key(s_no,c_no));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看创建的表及其表结构"><a href="#查看创建的表及其表结构" class="headerlink" title="查看创建的表及其表结构"></a>查看创建的表及其表结构</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; show tables;+----------------------+| Tables_in_selecttest |+----------------------+| course               || score                || student              || teacher              |+----------------------+4 rows in set (0.00 sec)mysql&gt; desc student;+------------+-------------+------+-----+---------+-------+| Field      | Type        | Null | Key | Default | Extra |+------------+-------------+------+-----+---------+-------+| s_no       | varchar(20) | NO   | PRI | NULL    |       || s_name     | varchar(20) | NO   |     | NULL    |       || s_gender   | varchar(1)  | NO   |     | NULL    |       || s_birthday | datetime    | YES  |     | NULL    |       || s_class    | varchar(20) | YES  |     | NULL    |       |+------------+-------------+------+-----+---------+-------+5 rows in set (0.00 sec)mysql&gt; desc teacher;+------------+-------------+------+-----+---------+-------+| Field      | Type        | Null | Key | Default | Extra |+------------+-------------+------+-----+---------+-------+| t_no       | varchar(20) | NO   | PRI | NULL    |       || t_name     | varchar(20) | NO   |     | NULL    |       || t_gender   | varchar(20) | NO   |     | NULL    |       || t_birthday | datetime    | YES  |     | NULL    |       || t_rof      | varchar(20) | NO   |     | NULL    |       || t_depart   | varchar(20) | NO   |     | NULL    |       |+------------+-------------+------+-----+---------+-------+6 rows in set (0.00 sec)mysql&gt; desc course;+--------+-------------+------+-----+---------+-------+| Field  | Type        | Null | Key | Default | Extra |+--------+-------------+------+-----+---------+-------+| c_no   | varchar(20) | NO   | PRI | NULL    |       || c_name | varchar(20) | NO   |     | NULL    |       || t_no   | varchar(20) | NO   | MUL | NULL    |       |+--------+-------------+------+-----+---------+-------+3 rows in set (0.01 sec)mysql&gt; desc score;+-----------+---------------+------+-----+---------+-------+| Field     | Type          | Null | Key | Default | Extra |+-----------+---------------+------+-----+---------+-------+| s_no      | varchar(20)   | NO   | PRI | NULL    |       || c_no      | varchar(20)   | NO   | PRI | NULL    |       || sc_degree | decimal(10,0) | YES  |     | NULL    |       |+-----------+---------------+------+-----+---------+-------+3 rows in set (0.01 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：decimal 数据类型 用于在数据库中存储精确的数值。常将其用于保留准确精确度的列，例如会计系统中的货币数据。</p><p>用法：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">column_name decimal(P,D);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：P 表示有效数字数的精确度。P的范围是1—65。</p><p>​          D 表示小数点后的位数。D的范围是0—30。</p><p>​          Mysql要求D &lt;= P</p><h3 id="向表中添加测试数据"><a href="#向表中添加测试数据" class="headerlink" title="向表中添加测试数据"></a>向表中添加测试数据</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">INSERT INTO student VALUES('101','曾华','男','1977-09-01','95033');INSERT INTO student VALUES('102','匡明','男','1975-10-02','95031');INSERT INTO student VALUES('103','王丽','女','1976-01-23','95033');INSERT INTO student VALUES('104','李军','男','1976-02-20','95033');INSERT INTO student VALUES('105','王芳','女','1975-02-10','95031');INSERT INTO student VALUES('106','陆军','男','1974-06-03','95031');INSERT INTO student VALUES('107','王尼玛','男','1976-02-20','95033');INSERT INTO student VALUES('108','张全蛋','男','1975-02-10','95031');INSERT INTO student VALUES('109','赵铁柱','男','1974-06-03','95031');INSERT INTO teacher VALUES('804','李诚','男','1958-12-02','副教授','计算机系');INSERT INTO teacher VALUES('856','张旭','男','1969-03-12','讲师','电子工程系');INSERT INTO teacher VALUES('825','王萍','女','1972-05-05','助教','计算机系');INSERT INTO teacher VALUES('831','刘冰','女','1977-08-14','助教','电子工程系');INSERT INTO course VALUES('3-105','计算机导论','825');INSERT INTO course VALUES('3-245','操作系统','804');INSERT INTO course VALUES('6-166','数字电路','856');INSERT INTO course VALUES('9-888','高等数学','831');INSERT INTO score VALUES('103','3-245','86');INSERT INTO score VALUES('105','3-245','75');INSERT INTO score VALUES('109','3-245','68');INSERT INTO score VALUES('103','3-105','92');INSERT INTO score VALUES('105','3-105','88');INSERT INTO score VALUES('109','3-105','76');INSERT INTO score VALUES('103','6-166','85');INSERT INTO score VALUES('105','6-166','79');INSERT INTO score VALUES('109','6-166','81');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="表查询结果"><a href="#表查询结果" class="headerlink" title="表查询结果"></a>表查询结果</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student;+------+-----------+----------+---------------------+---------+| s_no | s_name    | s_gender | s_birthday          | s_class |+------+-----------+----------+---------------------+---------+| 101  | 曾华      | 男       | 1977-09-01 00:00:00 | 95033   || 102  | 匡明      | 男       | 1975-10-02 00:00:00 | 95031   || 103  | 王丽      | 女       | 1976-01-23 00:00:00 | 95033   || 104  | 李军      | 男       | 1976-02-20 00:00:00 | 95033   || 105  | 王芳      | 女       | 1975-02-10 00:00:00 | 95031   || 106  | 陆军      | 男       | 1974-06-03 00:00:00 | 95031   || 107  | 王尼玛    | 男       | 1976-02-20 00:00:00 | 95033   || 108  | 张全蛋    | 男       | 1975-02-10 00:00:00 | 95031   || 109  | 赵铁柱    | 男       | 1974-06-03 00:00:00 | 95031   |+------+-----------+----------+---------------------+---------+9 rows in set (0.00 sec)mysql&gt; select * from teacher;+------+--------+----------+---------------------+-----------+-----------------+| t_no | t_name | t_gender | t_birthday          | t_rof     | t_depart        |+------+--------+----------+---------------------+-----------+-----------------+| 804  | 李诚   | 男       | 1958-12-02 00:00:00 | 副教授    | 计算机系        || 825  | 王萍   | 女       | 1972-05-05 00:00:00 | 助教      | 计算机系        || 831  | 刘冰   | 女       | 1977-08-14 00:00:00 | 助教      | 电子工程系      || 856  | 张旭   | 男       | 1969-03-12 00:00:00 | 讲师      | 电子工程系      |+------+--------+----------+---------------------+-----------+-----------------+4 rows in set (0.00 sec)mysql&gt; select * from course;+-------+-----------------+------+| c_no  | c_name          | t_no |+-------+-----------------+------+| 3-105 | 计算机导论      | 825  || 3-245 | 操作系统        | 804  || 6-166 | 数字电路        | 856  || 9-888 | 高等数学        | 831  |+-------+-----------------+------+4 rows in set (0.00 sec)mysql&gt; select * from score;+------+-------+-----------+| s_no | c_no  | sc_degree |+------+-------+-----------+| 103  | 3-105 |        92 || 103  | 3-245 |        86 || 103  | 6-166 |        85 || 105  | 3-105 |        88 || 105  | 3-245 |        75 || 105  | 6-166 |        79 || 109  | 3-105 |        76 || 109  | 3-245 |        68 || 109  | 6-166 |        81 |+------+-------+-----------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查询练习"><a href="#查询练习" class="headerlink" title="查询练习"></a>查询练习</h2><h3 id="1-查询表中所有记录"><a href="#1-查询表中所有记录" class="headerlink" title="1.查询表中所有记录"></a>1.查询表中所有记录</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student;+------+-----------+----------+---------------------+---------+| s_no | s_name    | s_gender | s_birthday          | s_class |+------+-----------+----------+---------------------+---------+| 101  | 曾华      | 男       | 1977-09-01 00:00:00 | 95033   || 102  | 匡明      | 男       | 1975-10-02 00:00:00 | 95031   || 103  | 王丽      | 女       | 1976-01-23 00:00:00 | 95033   || 104  | 李军      | 男       | 1976-02-20 00:00:00 | 95033   || 105  | 王芳      | 女       | 1975-02-10 00:00:00 | 95031   || 106  | 陆军      | 男       | 1974-06-03 00:00:00 | 95031   || 107  | 王尼玛    | 男       | 1976-02-20 00:00:00 | 95033   || 108  | 张全蛋    | 男       | 1975-02-10 00:00:00 | 95031   || 109  | 赵铁柱    | 男       | 1974-06-03 00:00:00 | 95031   |+------+-----------+----------+---------------------+---------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-查询student表中所有记录的s-name-s-gender和s-class列"><a href="#2-查询student表中所有记录的s-name-s-gender和s-class列" class="headerlink" title="2.查询student表中所有记录的s_name,s_gender和s_class列"></a>2.查询student表中所有记录的s_name,s_gender和s_class列</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_name,s_gender,s_class from student;+-----------+----------+---------+| s_name    | s_gender | s_class |+-----------+----------+---------+| 曾华      | 男       | 95033   || 匡明      | 男       | 95031   || 王丽      | 女       | 95033   || 李军      | 男       | 95033   || 王芳      | 女       | 95031   || 陆军      | 男       | 95031   || 王尼玛    | 男       | 95033   || 张全蛋    | 男       | 95031   || 赵铁柱    | 男       | 95031   |+-----------+----------+---------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-查询教师所有的单位但是不重复的t-depart列"><a href="#3-查询教师所有的单位但是不重复的t-depart列" class="headerlink" title="3.查询教师所有的单位但是不重复的t_depart列"></a>3.查询教师所有的单位但是不重复的t_depart列</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select distinct(t_depart) from teacher;+-----------------+| t_depart        |+-----------------+| 计算机系        || 电子工程系      |+-----------------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-查询score表中成绩在60-80之间所有的记录-sc-degree"><a href="#4-查询score表中成绩在60-80之间所有的记录-sc-degree" class="headerlink" title="4.查询score表中成绩在60-80之间所有的记录(sc_degree)"></a>4.查询score表中成绩在60-80之间所有的记录(sc_degree)</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from score where sc_degree between 61 and 79;+------+-------+-----------+| s_no | c_no  | sc_degree |+------+-------+-----------+| 105  | 3-245 |        75 || 105  | 6-166 |        79 || 109  | 3-105 |        76 || 109  | 3-245 |        68 |+------+-------+-----------+4 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 或者</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from score  where sc_degree &gt; 60 and sc_degree &lt; 80;+------+-------+-----------+| s_no | c_no  | sc_degree |+------+-------+-----------+| 105  | 3-245 |        75 || 105  | 6-166 |        79 || 109  | 3-105 |        76 || 109  | 3-245 |        68 |+------+-------+-----------+4 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-查询score表中成绩为85-86-或者88的记录-sc-degree"><a href="#5-查询score表中成绩为85-86-或者88的记录-sc-degree" class="headerlink" title="5.查询score表中成绩为85, 86, 或者88的记录(sc_degree)"></a>5.查询score表中成绩为85, 86, 或者88的记录(sc_degree)</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from score where sc_degree in(85,86,88);+------+-------+-----------+| s_no | c_no  | sc_degree |+------+-------+-----------+| 103  | 3-245 |        86 || 103  | 6-166 |        85 || 105  | 3-105 |        88 |+------+-------+-----------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-查询student表中’95031’班或者性别为’女’的同学记录"><a href="#6-查询student表中’95031’班或者性别为’女’的同学记录" class="headerlink" title="6.查询student表中’95031’班或者性别为’女’的同学记录"></a>6.查询student表中’95031’班或者性别为’女’的同学记录</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student where s_class = '95031' or s_gender = '女';+------+-----------+----------+---------------------+---------+| s_no | s_name    | s_gender | s_birthday          | s_class |+------+-----------+----------+---------------------+---------+| 102  | 匡明      | 男       | 1975-10-02 00:00:00 | 95031   || 103  | 王丽      | 女       | 1976-01-23 00:00:00 | 95033   || 105  | 王芳      | 女       | 1975-02-10 00:00:00 | 95031   || 106  | 陆军      | 男       | 1974-06-03 00:00:00 | 95031   || 108  | 张全蛋    | 男       | 1975-02-10 00:00:00 | 95031   || 109  | 赵铁柱    | 男       | 1974-06-03 00:00:00 | 95031   |+------+-----------+----------+---------------------+---------+6 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-以class降序查询student表中所有的记录"><a href="#7-以class降序查询student表中所有的记录" class="headerlink" title="7.以class降序查询student表中所有的记录"></a>7.以class降序查询student表中所有的记录</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student order by s_class desc;+------+-----------+----------+---------------------+---------+| s_no | s_name    | s_gender | s_birthday          | s_class |+------+-----------+----------+---------------------+---------+| 101  | 曾华      | 男       | 1977-09-01 00:00:00 | 95033   || 103  | 王丽      | 女       | 1976-01-23 00:00:00 | 95033   || 104  | 李军      | 男       | 1976-02-20 00:00:00 | 95033   || 107  | 王尼玛    | 男       | 1976-02-20 00:00:00 | 95033   || 102  | 匡明      | 男       | 1975-10-02 00:00:00 | 95031   || 105  | 王芳      | 女       | 1975-02-10 00:00:00 | 95031   || 106  | 陆军      | 男       | 1974-06-03 00:00:00 | 95031   || 108  | 张全蛋    | 男       | 1975-02-10 00:00:00 | 95031   || 109  | 赵铁柱    | 男       | 1974-06-03 00:00:00 | 95031   |+------+-----------+----------+---------------------+---------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-以c-no升序-sc-degree降序插叙score表中所有的数据"><a href="#8-以c-no升序-sc-degree降序插叙score表中所有的数据" class="headerlink" title="8.以c_no升序.sc_degree降序插叙score表中所有的数据"></a>8.以c_no升序.sc_degree降序插叙score表中所有的数据</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from score order by c_no asc , sc_degree desc;+------+-------+-----------+| s_no | c_no  | sc_degree |+------+-------+-----------+| 103  | 3-105 |        92 || 105  | 3-105 |        88 || 109  | 3-105 |        76 || 103  | 3-245 |        86 || 105  | 3-245 |        75 || 109  | 3-245 |        68 || 103  | 6-166 |        85 || 109  | 6-166 |        81 || 105  | 6-166 |        79 |+------+-------+-----------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：升降原则：先以c_no进行升序,若c_no相同,则以sc_degree降序；</p><h3 id="9-查询’95031’班的学生人数"><a href="#9-查询’95031’班的学生人数" class="headerlink" title="9.查询’95031’班的学生人数"></a>9.查询’95031’班的学生人数</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select count(s_no) from student where s_class = '95031';+-------------+| count(s_no) |+-------------+|           5 |+-------------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-查询score表中的最高分数的学生号和课程号-子查询或者排序"><a href="#10-查询score表中的最高分数的学生号和课程号-子查询或者排序" class="headerlink" title="10.查询score表中的最高分数的学生号和课程号.(子查询或者排序)"></a>10.查询score表中的最高分数的学生号和课程号.(子查询或者排序)</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_no , c_no from score where sc_degree = (select max(sc_degree) from score);+------+-------+| s_no | c_no  |+------+-------+| 103  | 3-105 |+------+-------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  注意：用以上子查询方法一般都正确的，建议用子查询方法；</p><p>这里也有另一种方法，但是不推荐：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select c_no, s_no from score order by sc_degree desc limit 0,1 ;+-------+------+| c_no  | s_no |+-------+------+| 3-105 | 103  |+-------+------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>备注：limit x,y      ( x：表示从x 条数据开始  y: 需要查出多少条)</p><p>limit 0,1 表示取第一条数据；在本例中因为最高分只有一个，所以是行的通的。一旦最高分有n 个，n 未知，则 limit 则失效。所以不建议使用。</p><h3 id="11-查询每门课的平均成绩"><a href="#11-查询每门课的平均成绩" class="headerlink" title="11.查询每门课的平均成绩"></a>11.查询每门课的平均成绩</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select c_no ,avg(sc_degree) from score group by c_no;+-------+----------------+| c_no  | avg(sc_degree) |+-------+----------------+| 3-105 |        85.3333 || 3-245 |        76.3333 || 6-166 |        81.6667 |+-------+----------------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-查询score表中至少有2名学生选修的-并且以3开头的课程的平均分"><a href="#12-查询score表中至少有2名学生选修的-并且以3开头的课程的平均分" class="headerlink" title="12,查询score表中至少有2名学生选修的,并且以3开头的课程的平均分"></a>12,查询score表中至少有2名学生选修的,并且以3开头的课程的平均分</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select c_no , avg(sc_degree) from score group by c_no having count(c_no) &gt;=2 and c_no like '3%';+-------+----------------+| c_no  | avg(sc_degree) |+-------+----------------+| 3-105 |        85.3333 || 3-245 |        76.3333 |+-------+----------------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="13-查询分数大于70但是小于90的s-no列"><a href="#13-查询分数大于70但是小于90的s-no列" class="headerlink" title="13.查询分数大于70但是小于90的s_no列:"></a>13.查询分数大于70但是小于90的s_no列:</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_no , sc_degree  from score where sc_degree between 71 and 89;+------+-----------+| s_no | sc_degree |+------+-----------+| 103  |        86 || 103  |        85 || 105  |        88 || 105  |        75 || 105  |        79 || 109  |        76 || 109  |        81 |+------+-----------+7 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_no , sc_degree  from score where sc_degree &gt; 70 and sc_degree &lt; 90;+------+-----------+| s_no | sc_degree |+------+-----------+| 103  |        86 || 103  |        85 || 105  |        88 || 105  |        75 || 105  |        79 || 109  |        76 || 109  |        81 |+------+-----------+7 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进阶练习：显示s_name , c_name </p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_name ,sc_degree , c_name from score,student,course where score.s_no = student.s_no and score.c_no = course.c_no and sc_degree between 71 and 89;+-----------+-----------+-----------------+| s_name    | sc_degree | c_name          |+-----------+-----------+-----------------+| 王丽      |        86 | 操作系统        || 王丽      |        85 | 数字电路        || 王芳      |        88 | 计算机导论      || 王芳      |        75 | 操作系统        || 王芳      |        79 | 数字电路        || 赵铁柱    |        76 | 计算机导论      || 赵铁柱    |        81 | 数字电路        |+-----------+-----------+-----------------+7 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="14-查询所有的学生-s-name-c-no-sc-degree列"><a href="#14-查询所有的学生-s-name-c-no-sc-degree列" class="headerlink" title="14.查询所有的学生 s_name , c_no, sc_degree列"></a>14.查询所有的学生 s_name , c_no, sc_degree列</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_name,c_no,sc_degree from student , score where student.s_no = score.s_no;+-----------+-------+-----------+| s_name    | c_no  | sc_degree |+-----------+-------+-----------+| 王丽      | 3-105 |        92 || 王丽      | 3-245 |        86 || 王丽      | 6-166 |        85 || 王芳      | 3-105 |        88 || 王芳      | 3-245 |        75 || 王芳      | 6-166 |        79 || 赵铁柱    | 3-105 |        76 || 赵铁柱    | 3-245 |        68 || 赵铁柱    | 6-166 |        81 |+-----------+-------+-----------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="15-查询所有学生的s-no-c-name-sc-degree列"><a href="#15-查询所有学生的s-no-c-name-sc-degree列" class="headerlink" title="15.查询所有学生的s_no, c_name, sc_degree列"></a>15.查询所有学生的s_no, c_name, sc_degree列</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select student.s_no , c_name, sc_degree from student,score,course where student.s_no = score.s_no and score.c_no = course.c_no;+------+-----------------+-----------+| s_no | c_name          | sc_degree |+------+-----------------+-----------+| 103  | 计算机导论      |        92 || 103  | 操作系统        |        86 || 103  | 数字电路        |        85 || 105  | 计算机导论      |        88 || 105  | 操作系统        |        75 || 105  | 数字电路        |        79 || 109  | 计算机导论      |        76 || 109  | 操作系统        |        68 || 109  | 数字电路        |        81 |+------+-----------------+-----------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="16-查询所有的学生-s-name-c-name-sc-degree列"><a href="#16-查询所有的学生-s-name-c-name-sc-degree列" class="headerlink" title="16.查询所有的学生 s_name , c_name, sc_degree列"></a>16.查询所有的学生 s_name , c_name, sc_degree列</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_name, c_name,sc_degree from student,score,course where student.s_no = score.s_no and score.c_no = course.c_no;+-----------+-----------------+-----------+| s_name    | c_name          | sc_degree |+-----------+-----------------+-----------+| 王丽      | 计算机导论      |        92 || 王丽      | 操作系统        |        86 || 王丽      | 数字电路        |        85 || 王芳      | 计算机导论      |        88 || 王芳      | 操作系统        |        75 || 王芳      | 数字电路        |        79 || 赵铁柱    | 计算机导论      |        76 || 赵铁柱    | 操作系统        |        68 || 赵铁柱    | 数字电路        |        81 |+-----------+-----------------+-----------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="17-查询班级是’95031’班学生每门课的平均分"><a href="#17-查询班级是’95031’班学生每门课的平均分" class="headerlink" title="17.查询班级是’95031’班学生每门课的平均分"></a>17.查询班级是’95031’班学生每门课的平均分</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select score.c_no , c_name , avg(sc_degree) from student , course,score  where course.c_no = score.c_no and score.s_no = student.s_no and s_class = '95031' group by score.c_no ;+-------+-----------------+----------------+| c_no  | c_name          | avg(sc_degree) |+-------+-----------------+----------------+| 3-105 | 计算机导论      |        82.0000 || 3-245 | 操作系统        |        71.5000 || 6-166 | 数字电路        |        80.0000 |+-------+-----------------+----------------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者不考虑 c_name</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select c_no , avg(sc_degree) from score where s_no in (select s_no from student where s_class= '95031') group by c_no;+-------+----------------+| c_no  | avg(sc_degree) |+-------+----------------+| 3-105 |        82.0000 || 3-245 |        71.5000 || 6-166 |        80.0000 |+-------+----------------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select c_no , avg(sc_degree) from score left join student on score.s_no = student.s_no where student.s_class = '95031' group by score.c_no;+-------+----------------+| c_no  | avg(sc_degree) |+-------+----------------+| 3-105 |        82.0000 || 3-245 |        71.5000 || 6-166 |        80.0000 |+-------+----------------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select score.c_no ,avg(sc_degree) from score ,student where score.s_no = student.s_no and student.s_class = '95031' group by score.c_no;+-------+----------------+| c_no  | avg(sc_degree) |+-------+----------------+| 3-105 |        82.0000 || 3-245 |        71.5000 || 6-166 |        80.0000 |+-------+----------------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="18-查询选修”3-105”课程的成绩高于’109’号同学’3-105’成绩-的所有同学的记录"><a href="#18-查询选修”3-105”课程的成绩高于’109’号同学’3-105’成绩-的所有同学的记录" class="headerlink" title="18.查询选修”3-105”课程的成绩高于’109’号同学’3-105’成绩 的所有同学的记录"></a>18.查询选修”3-105”课程的成绩高于’109’号同学’3-105’成绩 的所有同学的记录</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student , score having student.s_no = score.s_no and  score.c_no = '3-105'  and  score.sc_degree &gt; (select sc_degree from score where s_no = '109' and c_no = '3-105') ;+------+--------+----------+---------------------+---------+------+-------+-----------+| s_no | s_name | s_gender | s_birthday          | s_class | s_no | c_no  | sc_degree |+------+--------+----------+---------------------+---------+------+-------+-----------+| 103  | 王丽   | 女       | 1976-01-23 00:00:00 | 95033   | 103  | 3-105 |        92 || 105  | 王芳   | 女       | 1975-02-10 00:00:00 | 95031   | 105  | 3-105 |        88 |+------+--------+----------+---------------------+---------+------+-------+-----------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="19-查询成绩高于学号为’109’-课程号为’3-105’的成绩的所有记录"><a href="#19-查询成绩高于学号为’109’-课程号为’3-105’的成绩的所有记录" class="headerlink" title="19.查询成绩高于学号为’109’,课程号为’3-105’的成绩的所有记录"></a>19.查询成绩高于学号为’109’,课程号为’3-105’的成绩的所有记录</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from score where sc_degree &gt; (select sc_degree from score where s_no = '109' and c_no = '3-105');+------+-------+-----------+| s_no | c_no  | sc_degree |+------+-------+-----------+| 103  | 3-105 |        92 || 103  | 3-245 |        86 || 103  | 6-166 |        85 || 105  | 3-105 |        88 || 105  | 6-166 |        79 || 109  | 6-166 |        81 |+------+-------+-----------+6 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student ,score , course where student.s_no = score.s_no and score.c_no = course.c_no and score.sc_degree &gt; (select sc_degree from score where s_no = '109' and c_no = '3-105');+------+-----------+----------+---------------------+---------+------+-------+-----------+-------+-----------------+------+| s_no | s_name    | s_gender | s_birthday          | s_class | s_no | c_no  | sc_degree | c_no  | c_name          | t_no |+------+-----------+----------+---------------------+---------+------+-------+-----------+-------+-----------------+------+| 103  | 王丽      | 女       | 1976-01-23 00:00:00 | 95033   | 103  | 3-105 |        92 | 3-105 | 计算机导论      | 825  || 103  | 王丽      | 女       | 1976-01-23 00:00:00 | 95033   | 103  | 3-245 |        86 | 3-245 | 操作系统        | 804  || 103  | 王丽      | 女       | 1976-01-23 00:00:00 | 95033   | 103  | 6-166 |        85 | 6-166 | 数字电路        | 856  || 105  | 王芳      | 女       | 1975-02-10 00:00:00 | 95031   | 105  | 3-105 |        88 | 3-105 | 计算机导论      | 825  || 105  | 王芳      | 女       | 1975-02-10 00:00:00 | 95031   | 105  | 6-166 |        79 | 6-166 | 数字电路        | 856  || 109  | 赵铁柱    | 男       | 1974-06-03 00:00:00 | 95031   | 109  | 6-166 |        81 | 6-166 | 数字电路        | 856  |+------+-----------+----------+---------------------+---------+------+-------+-----------+-------+-----------------+------+6 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="20-查询所有学号为108-101的同学同年出生的所有学生的s-no-s-name和s-birthday"><a href="#20-查询所有学号为108-101的同学同年出生的所有学生的s-no-s-name和s-birthday" class="headerlink" title="20.查询所有学号为108.101的同学同年出生的所有学生的s_no,s_name和s_birthday"></a>20.查询所有学号为108.101的同学同年出生的所有学生的s_no,s_name和s_birthday</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_no , s_name , s_birthday from student where year(s_birthday) in (select year(s_birthday) from student where s_no in( '101','108'));+------+-----------+---------------------+| s_no | s_name    | s_birthday          |+------+-----------+---------------------+| 101  | 曾华      | 1977-09-01 00:00:00 || 102  | 匡明      | 1975-10-02 00:00:00 || 105  | 王芳      | 1975-02-10 00:00:00 || 108  | 张全蛋    | 1975-02-10 00:00:00 |+------+-----------+---------------------+4 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="21-查询-张旭-教师任课的学生的成绩"><a href="#21-查询-张旭-教师任课的学生的成绩" class="headerlink" title="21.查询 张旭 教师任课的学生的成绩"></a>21.查询 张旭 教师任课的学生的成绩</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select student.s_name,score.sc_degree from score,course,student,teacher where score.s_no = student.s_no and score.c_no = course.c_no and course.t_no = teacher.t_no and teacher.t_name = '张旭';+-----------+-----------+| s_name    | sc_degree |+-----------+-----------+| 王丽      |        85 || 王芳      |        79 || 赵铁柱    |        81 |+-----------+-----------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="22-查询选修课程的同学人数多余-5-人的教师姓名"><a href="#22-查询选修课程的同学人数多余-5-人的教师姓名" class="headerlink" title="22.查询选修课程的同学人数多余 5 人的教师姓名"></a>22.查询选修课程的同学人数多余 5 人的教师姓名</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select teacher.t_name from (select c_no ,count(c_no) c  from score group by c_no) t , course,teacher where t.c_no  = course.c_no and course.t_no = teacher.t_no and t.c &gt; 5;Empty set (0.01 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>为了效果,添加数据:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">INSERT INTO score VALUES('101','3-105','90');INSERT INTO score VALUES('102','3-105','91');INSERT INTO score VALUES('104','3-105','89');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>再次查询：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select teacher.t_name from (select c_no ,count(c_no) c  from score group by c_no) t , course,teacher where t.c_no  = course.c_no and course.t_no = teacher.t_no and t.c &gt; 5;+--------+| t_name |+--------+| 王萍   |+--------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="23-查询95033班和95031班全体学生的记录"><a href="#23-查询95033班和95031班全体学生的记录" class="headerlink" title="23.查询95033班和95031班全体学生的记录"></a>23.查询95033班和95031班全体学生的记录</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student where s_class in ('95031','95033') order by s_class;+------+-----------+----------+---------------------+---------+| s_no | s_name    | s_gender | s_birthday          | s_class |+------+-----------+----------+---------------------+---------+| 102  | 匡明      | 男       | 1975-10-02 00:00:00 | 95031   || 105  | 王芳      | 女       | 1975-02-10 00:00:00 | 95031   || 106  | 陆军      | 男       | 1974-06-03 00:00:00 | 95031   || 108  | 张全蛋    | 男       | 1975-02-10 00:00:00 | 95031   || 109  | 赵铁柱    | 男       | 1974-06-03 00:00:00 | 95031   || 101  | 曾华      | 男       | 1977-09-01 00:00:00 | 95033   || 103  | 王丽      | 女       | 1976-01-23 00:00:00 | 95033   || 104  | 李军      | 男       | 1976-02-20 00:00:00 | 95033   || 107  | 王尼玛    | 男       | 1976-02-20 00:00:00 | 95033   |+------+-----------+----------+---------------------+---------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="24-查询存在85分以上成绩的课程c-no"><a href="#24-查询存在85分以上成绩的课程c-no" class="headerlink" title="24.查询存在85分以上成绩的课程c_no"></a>24.查询存在85分以上成绩的课程c_no</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select distinct(course.c_no) , course.c_name , teacher.t_name  from course , score ,teacher where course.c_no = score.c_no and course.t_no = teacher.t_no and score.sc_degree &gt; '85';+-------+-----------------+--------+| c_no  | c_name          | t_name |+-------+-----------------+--------+| 3-105 | 计算机导论      | 王萍   || 3-245 | 操作系统        | 李诚   |+-------+-----------------+--------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="25-查出所有’计算机系’-教师所教课程的成绩表"><a href="#25-查出所有’计算机系’-教师所教课程的成绩表" class="headerlink" title="25.查出所有’计算机系’ 教师所教课程的成绩表"></a>25.查出所有’计算机系’ 教师所教课程的成绩表</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select teacher.t_name,teacher.t_depart,course.c_name , student.s_name ,  score.sc_degree from student, course,score,teacher where student.s_no = score.s_no and score.c_no = course.c_no and course.t_no = teacher.t_no and teacher.t_depart = '计算机系';+--------+--------------+-----------------+-----------+-----------+| t_name | t_depart     | c_name          | s_name    | sc_degree |+--------+--------------+-----------------+-----------+-----------+| 李诚   | 计算机系     | 操作系统        | 王丽      |        86 || 李诚   | 计算机系     | 操作系统        | 王芳      |        75 || 李诚   | 计算机系     | 操作系统        | 赵铁柱    |        68 || 王萍   | 计算机系     | 计算机导论      | 曾华      |        90 || 王萍   | 计算机系     | 计算机导论      | 匡明      |        91 || 王萍   | 计算机系     | 计算机导论      | 王丽      |        92 || 王萍   | 计算机系     | 计算机导论      | 李军      |        89 || 王萍   | 计算机系     | 计算机导论      | 王芳      |        88 || 王萍   | 计算机系     | 计算机导论      | 赵铁柱    |        76 |+--------+--------------+-----------------+-----------+-----------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="26-查询’计算机系’与’电子工程系’-不同职称的教师的name和rof"><a href="#26-查询’计算机系’与’电子工程系’-不同职称的教师的name和rof" class="headerlink" title="26.查询’计算机系’与’电子工程系’ 不同职称的教师的name和rof"></a>26.查询’计算机系’与’电子工程系’ 不同职称的教师的name和rof</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from teacher where t_depart = '计算机系' and t_rof not in (select t_rof from teacher where t_depart = '电子工程系') union select * from teacher where t_depart = '电子工程系' and t_rof not in (select t_rof from teacher where t_depart = '计算机系');+------+--------+----------+---------------------+-----------+-----------------+| t_no | t_name | t_gender | t_birthday          | t_rof     | t_depart        |+------+--------+----------+---------------------+-----------+-----------------+| 804  | 李诚   | 男       | 1958-12-02 00:00:00 | 副教授    | 计算机系        || 856  | 张旭   | 男       | 1969-03-12 00:00:00 | 讲师      | 电子工程系      |+------+--------+----------+---------------------+-----------+-----------------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="27-查询选修编号为”3-105”课程且成绩至少高于选修编号为’3-245’同学的c-no-s-no和sc-degree-并且按照sc-degree从高到地次序排序"><a href="#27-查询选修编号为”3-105”课程且成绩至少高于选修编号为’3-245’同学的c-no-s-no和sc-degree-并且按照sc-degree从高到地次序排序" class="headerlink" title="27, 查询选修编号为”3-105”课程且成绩至少高于选修编号为’3-245’同学的c_no,s_no和sc_degree,并且按照sc_degree从高到地次序排序"></a>27, 查询选修编号为”3-105”课程且成绩至少高于选修编号为’3-245’同学的c_no,s_no和sc_degree,并且按照sc_degree从高到地次序排序</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select student.s_name , student.s_no, score.c_no , score.sc_degree from student,score where student.s_no = score.s_no and score.c_no = '3-105' and score.sc_degree &gt; any(select sc_degree from score where c_no = '3-245' ) order by score.sc_degree desc;+-----------+------+-------+-----------+| s_name    | s_no | c_no  | sc_degree |+-----------+------+-------+-----------+| 王丽      | 103  | 3-105 |        92 || 匡明      | 102  | 3-105 |        91 || 曾华      | 101  | 3-105 |        90 || 李军      | 104  | 3-105 |        89 || 王芳      | 105  | 3-105 |        88 || 赵铁柱    | 109  | 3-105 |        76 |+-----------+------+-------+-----------+6 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="28-查询选修编号为”3-105”且成绩高于选修编号为”3-245”课程的同学c-no-s-no和sc-degree"><a href="#28-查询选修编号为”3-105”且成绩高于选修编号为”3-245”课程的同学c-no-s-no和sc-degree" class="headerlink" title="28.查询选修编号为”3-105”且成绩高于选修编号为”3-245”课程的同学c_no.s_no和sc_degree"></a>28.查询选修编号为”3-105”且成绩高于选修编号为”3-245”课程的同学c_no.s_no和sc_degree</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select student.s_name , student.s_no, score.c_no , score.sc_degree from student,score where student.s_no = score.s_no and score.c_no = '3-105' and score.sc_degree &gt; all(select sc_degree from score where c_no = '3-245' ) order by score.sc_degree desc;+--------+------+-------+-----------+| s_name | s_no | c_no  | sc_degree |+--------+------+-------+-----------+| 王丽   | 103  | 3-105 |        92 || 匡明   | 102  | 3-105 |        91 || 曾华   | 101  | 3-105 |        90 || 李军   | 104  | 3-105 |        89 || 王芳   | 105  | 3-105 |        88 |+--------+------+-------+-----------+5 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>备注：any: 若数组A中的值比数组B中的任何值都大,则A要和B中最小值比较。</p><p>all：若数组A中的值比数组B中的所有值都大,则A要和B中最大值比较。</p><h3 id="29-查询所有教师和同学的-name-gender-birthday"><a href="#29-查询所有教师和同学的-name-gender-birthday" class="headerlink" title="29. 查询所有教师和同学的 name ,gender, birthday"></a>29. 查询所有教师和同学的 name ,gender, birthday</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select t_name name ,t_gender gender , t_birthday birthday  from teacher union select s_name name,s_gender gender , s_birthday birthday from student;+-----------+--------+---------------------+| name      | gender | birthday            |+-----------+--------+---------------------+| 李诚      | 男     | 1958-12-02 00:00:00 || 王萍      | 女     | 1972-05-05 00:00:00 || 刘冰      | 女     | 1977-08-14 00:00:00 || 张旭      | 男     | 1969-03-12 00:00:00 || 曾华      | 男     | 1977-09-01 00:00:00 || 匡明      | 男     | 1975-10-02 00:00:00 || 王丽      | 女     | 1976-01-23 00:00:00 || 李军      | 男     | 1976-02-20 00:00:00 || 王芳      | 女     | 1975-02-10 00:00:00 || 陆军      | 男     | 1974-06-03 00:00:00 || 王尼玛    | 男     | 1976-02-20 00:00:00 || 张全蛋    | 男     | 1975-02-10 00:00:00 || 赵铁柱    | 男     | 1974-06-03 00:00:00 |+-----------+--------+---------------------+13 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="30-查询所有’女’教师和’女’学生的name-gender-birthday"><a href="#30-查询所有’女’教师和’女’学生的name-gender-birthday" class="headerlink" title="30.查询所有’女’教师和’女’学生的name,gender,birthday"></a>30.查询所有’女’教师和’女’学生的name,gender,birthday</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select t_name name ,t_gender gender , t_birthday birthday  from teacher where t_gender = '女' union select s_name name,s_gender gender , s_birthday birthday from student where s_gender = '女' ; +--------+--------+---------------------+| name   | gender | birthday            |+--------+--------+---------------------+| 王萍   | 女     | 1972-05-05 00:00:00 || 刘冰   | 女     | 1977-08-14 00:00:00 || 王丽   | 女     | 1976-01-23 00:00:00 || 王芳   | 女     | 1975-02-10 00:00:00 |+--------+--------+---------------------+4 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="31-查询成绩比该课程平均成绩低的同学的成绩表"><a href="#31-查询成绩比该课程平均成绩低的同学的成绩表" class="headerlink" title="31.查询成绩比该课程平均成绩低的同学的成绩表"></a>31.查询成绩比该课程平均成绩低的同学的成绩表</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select student.s_name,score.c_no,course.c_name,score.sc_degree from score , (select c_no , avg(sc_degree) avg from score group by c_no ) t , student,course  where score.s_no = student.s_no and  score.c_no = course.c_no and score.c_no = t.c_no and score.sc_degree &lt; t.avg  order by student.s_name desc ;+-----------+-------+-----------------+-----------+| s_name    | c_no  | c_name          | sc_degree |+-----------+-------+-----------------+-----------+| 赵铁柱    | 3-105 | 计算机导论      |        76 || 赵铁柱    | 3-245 | 操作系统        |        68 || 赵铁柱    | 6-166 | 数字电路        |        81 || 王芳      | 3-245 | 操作系统        |        75 || 王芳      | 6-166 | 数字电路        |        79 |+-----------+-------+-----------------+-----------+5 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="32-查询所有任课教师的t-name-和-t-depart-要在分数表中可以查得到"><a href="#32-查询所有任课教师的t-name-和-t-depart-要在分数表中可以查得到" class="headerlink" title="32.查询所有任课教师的t_name 和 t_depart(要在分数表中可以查得到)"></a>32.查询所有任课教师的t_name 和 t_depart(要在分数表中可以查得到)</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select distinct(teacher.t_name) , teacher.t_depart,score.c_no from score ,course ,teacher where score.c_no = course.c_no and course.t_no = teacher.t_no;+--------+-----------------+-------+| t_name | t_depart        | c_no  |+--------+-----------------+-------+| 李诚   | 计算机系        | 3-245 || 王萍   | 计算机系        | 3-105 || 张旭   | 电子工程系      | 6-166 |+--------+-----------------+-------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="33-查出至少有2名男生的班号"><a href="#33-查出至少有2名男生的班号" class="headerlink" title="33.查出至少有2名男生的班号"></a>33.查出至少有2名男生的班号</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_class from student where s_gender = '男' group by s_class having count(s_class) &gt; '2';+---------+| s_class |+---------+| 95033   || 95031   |+---------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="34-查询student-表中-不姓”王”的同学的记录"><a href="#34-查询student-表中-不姓”王”的同学的记录" class="headerlink" title="34.查询student 表中 不姓”王”的同学的记录"></a>34.查询student 表中 不姓”王”的同学的记录</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student where s_name not like '王%';+------+-----------+----------+---------------------+---------+| s_no | s_name    | s_gender | s_birthday          | s_class |+------+-----------+----------+---------------------+---------+| 101  | 曾华      | 男       | 1977-09-01 00:00:00 | 95033   || 102  | 匡明      | 男       | 1975-10-02 00:00:00 | 95031   || 104  | 李军      | 男       | 1976-02-20 00:00:00 | 95033   || 106  | 陆军      | 男       | 1974-06-03 00:00:00 | 95031   || 108  | 张全蛋    | 男       | 1975-02-10 00:00:00 | 95031   || 109  | 赵铁柱    | 男       | 1974-06-03 00:00:00 | 95031   |+------+-----------+----------+---------------------+---------+6 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="35-查询student-中每个学生的姓名和年龄-当前时间-出生年份"><a href="#35-查询student-中每个学生的姓名和年龄-当前时间-出生年份" class="headerlink" title="35. 查询student 中每个学生的姓名和年龄(当前时间 - 出生年份)"></a>35. 查询student 中每个学生的姓名和年龄(当前时间 - 出生年份)</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select s_name , year(now()) - year(s_birthday) age from student;+-----------+------+| s_name    | age  |+-----------+------+| 曾华      |   44 || 匡明      |   46 || 王丽      |   45 || 李军      |   45 || 王芳      |   46 || 陆军      |   47 || 王尼玛    |   45 || 张全蛋    |   46 || 赵铁柱    |   47 |+-----------+------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="36-查询student中最大和最小的-s-birthday的值"><a href="#36-查询student中最大和最小的-s-birthday的值" class="headerlink" title="36. 查询student中最大和最小的 s_birthday的值"></a>36. 查询student中最大和最小的 s_birthday的值</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select max(s_birthday),min(s_birthday) from student;+---------------------+---------------------+| max(s_birthday)     | min(s_birthday)     |+---------------------+---------------------+| 1977-09-01 00:00:00 | 1974-06-03 00:00:00 |+---------------------+---------------------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="37-以班级号和年龄从大到小的顺序查询student表中的全部记录"><a href="#37-以班级号和年龄从大到小的顺序查询student表中的全部记录" class="headerlink" title="37.以班级号和年龄从大到小的顺序查询student表中的全部记录"></a>37.以班级号和年龄从大到小的顺序查询student表中的全部记录</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student order by s_class desc ,s_birthday asc;+------+-----------+----------+---------------------+---------+| s_no | s_name    | s_gender | s_birthday          | s_class |+------+-----------+----------+---------------------+---------+| 103  | 王丽      | 女       | 1976-01-23 00:00:00 | 95033   || 104  | 李军      | 男       | 1976-02-20 00:00:00 | 95033   || 107  | 王尼玛    | 男       | 1976-02-20 00:00:00 | 95033   || 101  | 曾华      | 男       | 1977-09-01 00:00:00 | 95033   || 106  | 陆军      | 男       | 1974-06-03 00:00:00 | 95031   || 109  | 赵铁柱    | 男       | 1974-06-03 00:00:00 | 95031   || 105  | 王芳      | 女       | 1975-02-10 00:00:00 | 95031   || 108  | 张全蛋    | 男       | 1975-02-10 00:00:00 | 95031   || 102  | 匡明      | 男       | 1975-10-02 00:00:00 | 95031   |+------+-----------+----------+---------------------+---------+9 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="38-查询”男”教师-及其所上的课"><a href="#38-查询”男”教师-及其所上的课" class="headerlink" title="38.查询”男”教师 及其所上的课"></a>38.查询”男”教师 及其所上的课</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select teacher.t_no , teacher.t_name , teacher.t_gender , course.c_no , course.c_name from teacher , course where teacher.t_no = course.t_no and teacher.t_gender = '男' ;+------+--------+----------+-------+--------------+| t_no | t_name | t_gender | c_no  | c_name       |+------+--------+----------+-------+--------------+| 804  | 李诚   | 男       | 3-245 | 操作系统     || 856  | 张旭   | 男       | 6-166 | 数字电路     |+------+--------+----------+-------+--------------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="39-查询最高分同学的s-no-c-no-和-sc-degree"><a href="#39-查询最高分同学的s-no-c-no-和-sc-degree" class="headerlink" title="39.查询最高分同学的s_no c_no 和 sc_degree;"></a>39.查询最高分同学的s_no c_no 和 sc_degree;</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select student.s_name , student.s_no , score.c_no , score.sc_degree from student , score where student.s_no = score.s_no and sc_degree in (select max(sc_degree) from score);+--------+------+-------+-----------+| s_name | s_no | c_no  | sc_degree |+--------+------+-------+-----------+| 王丽   | 103  | 3-105 |        92 |+--------+------+-------+-----------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="40-查询和”李军”同性别的所有同学的s-name"><a href="#40-查询和”李军”同性别的所有同学的s-name" class="headerlink" title="40. 查询和”李军”同性别的所有同学的s_name"></a>40. 查询和”李军”同性别的所有同学的s_name</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student where s_gender = (select s_gender from student where s_name = '李军');+------+-----------+----------+---------------------+---------+| s_no | s_name    | s_gender | s_birthday          | s_class |+------+-----------+----------+---------------------+---------+| 101  | 曾华      | 男       | 1977-09-01 00:00:00 | 95033   || 102  | 匡明      | 男       | 1975-10-02 00:00:00 | 95031   || 104  | 李军      | 男       | 1976-02-20 00:00:00 | 95033   || 106  | 陆军      | 男       | 1974-06-03 00:00:00 | 95031   || 107  | 王尼玛    | 男       | 1976-02-20 00:00:00 | 95033   || 108  | 张全蛋    | 男       | 1975-02-10 00:00:00 | 95031   || 109  | 赵铁柱    | 男       | 1974-06-03 00:00:00 | 95031   |+------+-----------+----------+---------------------+---------+7 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="41-查询和”李军”同性别并且同班的所有同学的s-name"><a href="#41-查询和”李军”同性别并且同班的所有同学的s-name" class="headerlink" title="41.查询和”李军”同性别并且同班的所有同学的s_name"></a>41.查询和”李军”同性别并且同班的所有同学的s_name</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student where s_gender = (select s_gender from student where s_name = '李军') and s_class = (select s_class from student where s_name = '李军');+------+-----------+----------+---------------------+---------+| s_no | s_name    | s_gender | s_birthday          | s_class |+------+-----------+----------+---------------------+---------+| 101  | 曾华      | 男       | 1977-09-01 00:00:00 | 95033   || 104  | 李军      | 男       | 1976-02-20 00:00:00 | 95033   || 107  | 王尼玛    | 男       | 1976-02-20 00:00:00 | 95033   |+------+-----------+----------+---------------------+---------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="42-查询所有选修’计算机导论’课程的’男’同学的成绩表"><a href="#42-查询所有选修’计算机导论’课程的’男’同学的成绩表" class="headerlink" title="42. 查询所有选修’计算机导论’课程的’男’同学的成绩表"></a>42. 查询所有选修’计算机导论’课程的’男’同学的成绩表</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select student.s_no , student.s_name , student.s_gender, course.c_no , course.c_name ,score.sc_degree from student , course , score where score.s_no = student.s_no and score.c_no = course.c_no and student.s_gender = '男' and course.c_name = '计算机导论';+------+-----------+----------+-------+-----------------+-----------+| s_no | s_name    | s_gender | c_no  | c_name          | sc_degree |+------+-----------+----------+-------+-----------------+-----------+| 101  | 曾华      | 男       | 3-105 | 计算机导论      |        90 || 102  | 匡明      | 男       | 3-105 | 计算机导论      |        91 || 104  | 李军      | 男       | 3-105 | 计算机导论      |        89 || 109  | 赵铁柱    | 男       | 3-105 | 计算机导论      |        76 |+------+-----------+----------+-------+-----------------+-----------+4 rows in set (0.01 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="43-假设使用了以下命令建立了一个grade表-查询所有同学的s-no-c-no-和grade列"><a href="#43-假设使用了以下命令建立了一个grade表-查询所有同学的s-no-c-no-和grade列" class="headerlink" title="43. 假设使用了以下命令建立了一个grade表,查询所有同学的s_no , c_no 和grade列"></a>43. 假设使用了以下命令建立了一个grade表,查询所有同学的s_no , c_no 和grade列</h3><p>创建的grade表：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table grade(low int(3),up  int(3),grade char(1))INSERT INTO grade VALUES(90,100,'A');INSERT INTO grade VALUES(80,89,'B');INSERT INTO grade VALUES(70,79,'c');INSERT INTO grade VALUES(60,69,'D');INSERT INTO grade VALUES(0,59,'E');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查询所有同学的s_no , c_no 和grade列:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select score.s_no , student.s_no  , score.c_no , course.c_name , grade.grade from score , grade , student , course  where score.s_no = student.s_no and score.c_no = course.c_no and score.sc_degree between low and up;+------+------+-------+-----------------+-------+| s_no | s_no | c_no  | c_name          | grade |+------+------+-------+-----------------+-------+| 101  | 101  | 3-105 | 计算机导论      | A     || 102  | 102  | 3-105 | 计算机导论      | A     || 103  | 103  | 3-105 | 计算机导论      | A     || 103  | 103  | 3-245 | 操作系统        | B     || 103  | 103  | 6-166 | 数字电路        | B     || 104  | 104  | 3-105 | 计算机导论      | B     || 105  | 105  | 3-105 | 计算机导论      | B     || 105  | 105  | 3-245 | 操作系统        | c     || 105  | 105  | 6-166 | 数字电路        | c     || 109  | 109  | 3-105 | 计算机导论      | c     || 109  | 109  | 3-245 | 操作系统        | D     || 109  | 109  | 6-166 | 数字电路        | B     |+------+------+-------+-----------------+-------+12 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql Order</title>
      <link href="posts/51460.html"/>
      <url>posts/51460.html</url>
      
        <content type="html"><![CDATA[<h2 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">show databases;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">use databasesName;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查看该数据库中有哪些表"><a href="#查看该数据库中有哪些表" class="headerlink" title="查看该数据库中有哪些表"></a>查看该数据库中有哪些表</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">show tables;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="查询表中数据"><a href="#查询表中数据" class="headerlink" title="查询表中数据"></a>查询表中数据</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select * from tableName;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="退出数据库服务器"><a href="#退出数据库服务器" class="headerlink" title="退出数据库服务器"></a>退出数据库服务器</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">exit;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">drop table tableName;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create database databaseName;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h2><p>以创建student表为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table student(  id int primary key auto_increment,  name VARCHAR(20),  gender CHAR(1),  birth DATE,  death DATE );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：1.var()定常:哪怕存储的字符串没有达到”()”中数字的上限,var()依然会占用空格来填充空间.varchar()不定长,没有达到”()”中的上限则会自动去掉后面的空格;</p><p>2.定义最后一个字段的时候不要加”,”; </p><p>3.上面的”VAR”,”VARCHAR”,”DATE”可以用小写.不过最好用大写来表示区分关键字;</p><p>4.切换到英语状态下半角输入；</p><h2 id="查看数据表表结构"><a href="#查看数据表表结构" class="headerlink" title="查看数据表表结构"></a>查看数据表表结构</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">desc tableName; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以student表为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc student;+--------+-------------+------+-----+---------+----------------+| Field  | Type        | Null | Key | Default | Extra          |+--------+-------------+------+-----+---------+----------------+| id     | int         | NO   | PRI | NULL    | auto_increment || name   | varchar(20) | YES  |     | NULL    |                || gender | char(1)     | YES  |     | NULL    |                || birth  | date        | YES  |     | NULL    |                || death  | date        | YES  |     | NULL    |                |+--------+-------------+------+-----+---------+----------------+5 rows in set (0.01 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><p>Field ：字段名称</p><p>Type ：字段类型，比如 int , date , char , varchar</p><p>Key   :  是否是关键字，比如可以定义为： primary key 或者 unique key </p><p>Default  :  若是该字段没有主动设置值的时候,定义该字段的默认值</p><p>Extra :  auto_increment 表示自增；</p><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into student values(null,'BingoLin','1','1995-01-01',null);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：是 null ，不是  ‘Null’  </p><p>或者</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into student(name,gender,birth) values('BingoLin','1','1995-01-01');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时，已经向student增加了两条记录，这两条记录除了id 外一模一样。</p><p>使用select命令查看表，显示如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student;+----+----------+--------+------------+-------+| id | name     | gender | birth      | death |+----+----------+--------+------------+-------+|  1 | BingoLin | 1      | 1995-01-01 | NULL  ||  2 | BingoLin | 1      | 1995-01-01 | NULL  |+----+----------+--------+------------+-------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 注意： NULL:代表的是空,表示该字段还没有数据.</p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">delete from tableName where &lt;条件&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以student 表为例:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">delete from student where id = 2;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上述命令，意思是删除 student 表 中  id 为 2 的记录。</p><p>删除后的表查询结果如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student;+----+----------+--------+------------+-------+| id | name     | gender | birth      | death |+----+----------+--------+------------+-------+|  1 | BingoLin | 1      | 1995-01-01 | NULL  |+----+----------+--------+------------+-------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">update tableName set 字段1=值1,字段2=值2 ... where &lt;条件&gt;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以student 表为例:</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">update student set gender='0',birth = '1995-02-01' where name = 'BingoLin' ;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以上例子表示： 修改student 表 中  name 字段值为 BingoLin 的记录。修改方案是将Bingo Lin所在的这条记录中 的gender字段值设置为0，birth字段值设置为1995-02-01。</p><p>修改完成后，表查询结果如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student;+----+----------+--------+------------+-------+| id | name     | gender | birth      | death |+----+----------+--------+------------+-------+|  1 | BingoLin | 0      | 1995-02-01 | NULL  |+----+----------+--------+------------+-------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="建表约束"><a href="#建表约束" class="headerlink" title="建表约束"></a>建表约束</h2><h3 id="1-主键约束"><a href="#1-主键约束" class="headerlink" title="1.主键约束"></a>1.主键约束</h3><p>作用：唯一确定一张表中的一条记录。增加主键约束之后，使字段不重复且不为空；</p><p>以创建user表为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table user(id int primary key,name varchar(20));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>向user表添加记录：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into user values(1,'BingoLin');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 添加记录后表查询结果如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from user;+----+----------+| id | name     |+----+----------+|  1 | BingoLin |+----+----------+1 row in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user;+-------+-------------+------+-----+---------+-------+| Field | Type        | Null | Key | Default | Extra |+-------+-------------+------+-----+---------+-------+| id    | int         | NO   | PRI | NULL    |       || name  | varchar(20) | YES  |     | NULL    |       |+-------+-------------+------+-----+---------+-------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到：id 的Null字段值为No,即 id 不为空；id 的 Key 字段值为 PRI,即（primary）</p><h3 id="2-复合主键"><a href="#2-复合主键" class="headerlink" title="2.复合主键"></a>2.复合主键</h3><p>以创建user2表为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table user2(id int,name varchar(20),password varchar(20),primary key(id,name));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>向user2添加记录；</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into user2 values(1,'BingoLin','123456');insert into user2 values(2,'BingoLi','123456');insert into user2 values(3,'BingoLin','123456');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>添加记录后表查询结果如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from user2;+----+----------+----------+| id | name     | password |+----+----------+----------+|  1 | BingoLin | 123456   ||  2 | BingoLi  | 123456   ||  3 | BingoLin | 123456   |+----+----------+----------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user2;+----------+-------------+------+-----+---------+-------+| Field    | Type        | Null | Key | Default | Extra |+----------+-------------+------+-----+---------+-------+| id       | int         | NO   | PRI | NULL    |       || name     | varchar(20) | NO   | PRI | NULL    |       || password | varchar(20) | YES  |     | NULL    |       |+----------+-------------+------+-----+---------+-------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，添加 复合主键 的字段不为空且不重复。没有添加复合主键的字段值允许相同；</p><h3 id="3-自增约束"><a href="#3-自增约束" class="headerlink" title="3.自增约束"></a>3.自增约束</h3><p>以创建user3为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table user3(id int primary key auto_increment,name varchar(20));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>向user3添加记录</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into user3(name) values ('BingoLin');insert into user3(name) values ('BingoLi');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>添加记录后表查询结果如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from user3;+----+----------+| id | name     |+----+----------+|  1 | BingoLin ||  2 | BingoLi  |+----+----------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user3;+-------+-------------+------+-----+---------+----------------+| Field | Type        | Null | Key | Default | Extra          |+-------+-------------+------+-----+---------+----------------+| id    | int         | NO   | PRI | NULL    | auto_increment || name  | varchar(20) | YES  |     | NULL    |                |+-------+-------------+------+-----+---------+----------------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：auto_increment 表示自增。可以看到 id 添加了auto_increment 属性后，即使没有自定义id 值，也能自动生成id </p><h3 id="4-唯一约束"><a href="#4-唯一约束" class="headerlink" title="4.唯一约束"></a>4.唯一约束</h3><p>以创建user4为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table user4(id int primary key auto_increment,name varchar(20) unique key);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>向user4 添加记录</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into user4(name) values('BingoLin');insert into user4(name) values('BingoLi');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>添加记录后表结构查询如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from user4;+----+----------+| id | name     |+----+----------+|  2 | BingoLi  ||  1 | BingoLin |+----+----------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user4;+-------+-------------+------+-----+---------+----------------+| Field | Type        | Null | Key | Default | Extra          |+-------+-------------+------+-----+---------+----------------+| id    | int         | NO   | PRI | NULL    | auto_increment || name  | varchar(20) | YES  | UNI | NULL    |                |+-------+-------------+------+-----+---------+----------------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：可以看到，name 所在的 Key 的值是UNI 即Unique，</p><p>此时,如果还插入相同的name值的记录，比如：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into user4(name) values('BingoLi');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  会出现错误提示：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; insert into user4(name) values('BingoLi');ERROR 1062 (23000): Duplicate entry 'BingoLi' for key 'user4.name'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意：主键约束(primary key) 包含了唯一约束。</p><h3 id="5-非空约束"><a href="#5-非空约束" class="headerlink" title="5.非空约束"></a>5.非空约束</h3><p>以创建user5表为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table user5(id int primary key auto_increment,name varchar(20) not null,idCard varchar(20) unique key not null);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>向user5添加记录</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into user5(name,idCard) values ('BingoLin','123456');insert into user5(name,idCard) values ('BingoLi','33144245');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>添加记录后表查询结果如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from user5;+----+----------+----------+| id | name     | idCard   |+----+----------+----------+|  1 | BingoLin | 123456   ||  2 | BingoLi  | 33144245 |+----+----------+----------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user5;+--------+-------------+------+-----+---------+----------------+| Field  | Type        | Null | Key | Default | Extra          |+--------+-------------+------+-----+---------+----------------+| id     | int         | NO   | PRI | NULL    | auto_increment || name   | varchar(20) | NO   |     | NULL    |                || idCard | varchar(20) | NO   | UNI | NULL    |                |+--------+-------------+------+-----+---------+----------------+3 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：name,idCard 都设置了 not null ,即非空。此时，如果只添加含有name的记录：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into user5(name) values('Bingo');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>则会出现错误：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; insert into user5(name) values('Bingo');ERROR 1364 (HY000): Field 'idCard' doesn't have a default value<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>只添加含有idCard 的记录也会出错；</p><p>结论：两个非空参数必须一起设置；</p><h3 id="6-默认约束"><a href="#6-默认约束" class="headerlink" title="6.默认约束"></a>6.默认约束</h3><p>以创建user6表为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table user6(id int primary key auto_increment,name varchar(20) not null,idCard varchar(20) unique key not null ,status int default 0 comment'用户状态 0:启用 1:封禁 默认:0');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>向user6添加记录：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into user6(name,idCard) values ('BingoLin','123456');insert into user6(name,idCard) values ('BingoLi','1234567');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>添加记录后表查询如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from user6;+----+----------+---------+--------+| id | name     | idCard  | status |+----+----------+---------+--------+|  1 | BingoLin | 123456  |      0 ||  2 | BingoLi  | 1234567 |      0 |+----+----------+---------+--------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：没有设置status的值，默认为0。</p><p>表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user6;+--------+-------------+------+-----+---------+----------------+| Field  | Type        | Null | Key | Default | Extra          |+--------+-------------+------+-----+---------+----------------+| id     | int         | NO   | PRI | NULL    | auto_increment || name   | varchar(20) | NO   |     | NULL    |                || idCard | varchar(20) | NO   | UNI | NULL    |                || status | int         | YES  |     | 0       |                |+--------+-------------+------+-----+---------+----------------+4 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-外键约束"><a href="#7-外键约束" class="headerlink" title="7.外键约束"></a>7.外键约束</h3><p>以创建classes表、student表为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table classes(id int primary key auto_increment,name varchar(20) unique not null );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>向classes表中添加数据：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into classes(name) values('一班');insert into classes(name) values('二班');insert into classes(name) values('三班');insert into classes(name) values('四班');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>添加记录后表查询如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from classes;+----+--------+| id | name   |+----+--------+|  1 | 一班   ||  2 | 二班   ||  3 | 三班   ||  4 | 四班   |+----+--------+4 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc classes;+-------+-------------+------+-----+---------+----------------+| Field | Type        | Null | Key | Default | Extra          |+-------+-------------+------+-----+---------+----------------+| id    | int         | NO   | PRI | NULL    | auto_increment || name  | varchar(20) | NO   | UNI | NULL    |                |+-------+-------------+------+-----+---------+----------------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在创建student表：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table student(id int primary key auto_increment,name varchar(20) not null,idCard varchar(20) unique key not null,class_id int,foreign key(class_id) references classes(id));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：foreign key 外键；references 参考</p><p>向student表添加数据：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">insert into student(name,idCard,class_id) values ('BingoLin',123456,1);insert into student(name,idCard,class_id) values ('BingoLi',223456,2);insert into student(name,idCard,class_id) values ('BingoL',323456,3);insert into student(name,idCard,class_id) values ('Bingo',423456,4);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>添加记录后表查询结果如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; select * from student;+----+----------+--------+----------+| id | name     | idCard | class_id |+----+----------+--------+----------+|  1 | BingoLin | 123456 |        1 ||  2 | BingoLi  | 223456 |        2 ||  3 | BingoL   | 323456 |        3 ||  4 | Bingo    | 423456 |        4 |+----+----------+--------+----------+4 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc student;+----------+-------------+------+-----+---------+----------------+| Field    | Type        | Null | Key | Default | Extra          |+----------+-------------+------+-----+---------+----------------+| id       | int         | NO   | PRI | NULL    | auto_increment || name     | varchar(20) | NO   |     | NULL    |                || idCard   | varchar(20) | NO   | UNI | NULL    |                || class_id | int         | YES  | MUL | NULL    |                |+----------+-------------+------+-----+---------+----------------+4 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：因为存在外键，如果想在student表添加班级为5的数据，是行不通的，因为classes表还没有五班的数据：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; insert into student(name,idCard,class_id) values ('BingoLin',523456,5);ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`school`.`student`, CONSTRAINT `student_ibfk_1` FOREIGN KEY (`class_id`) REFERENCES `classes` (`id`))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>并且，因为student表中属于一班的同学是存在的，那么将无法删除classes表中一班的数据：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; delete from classes where name = '一班';ERROR 1451 (23000): Cannot delete or update a parent row: a foreign key constraint fails (`school`.`student`, CONSTRAINT `student_ibfk_1` FOREIGN KEY (`class_id`) REFERENCES `classes` (`id`))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>办法：只有先删除掉student表中关于一班的所有数据，才能在classes表中删除一班的数据。</p><h3 id="8-建表之后再添加-删除主键约束"><a href="#8-建表之后再添加-删除主键约束" class="headerlink" title="8.建表之后再添加/删除主键约束"></a>8.建表之后再添加/删除主键约束</h3><p>以创建user8为例：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table user8(id int,name varchar(20));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user8;+-------+-------------+------+-----+---------+-------+| Field | Type        | Null | Key | Default | Extra |+-------+-------------+------+-----+---------+-------+| id    | int         | YES  |     | NULL    |       || name  | varchar(20) | YES  |     | NULL    |       |+-------+-------------+------+-----+---------+-------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为user8表id 添加主键约束：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">alter table user8 add primary key(id);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加主键约束后表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user8;+-------+-------------+------+-----+---------+-------+| Field | Type        | Null | Key | Default | Extra |+-------+-------------+------+-----+---------+-------+| id    | int         | NO   | PRI | NULL    |       || name  | varchar(20) | YES  |     | NULL    |       |+-------+-------------+------+-----+---------+-------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将user8表id 删除主键约束：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">alter table user8 drop primary key;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>删除主键约束后表结构如下：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user8;+-------+-------------+------+-----+---------+-------+| Field | Type        | Null | Key | Default | Extra |+-------+-------------+------+-----+---------+-------+| id    | int         | NO   |     | NULL    |       || name  | varchar(20) | YES  |     | NULL    |       |+-------+-------------+------+-----+---------+-------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以再使用modify 修改字段从而添加主键约束：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">alter table user8 modify id int primary key;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改后查看表结构：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user8;+-------+-------------+------+-----+---------+-------+| Field | Type        | Null | Key | Default | Extra |+-------+-------------+------+-----+---------+-------+| id    | int         | NO   | PRI | NULL    |       || name  | varchar(20) | YES  |     | NULL    |       |+-------+-------------+------+-----+---------+-------+2 rows in set (0.00 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>给主键设置自增：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">alter table user8 modify id int  auto_increment;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>给主键设置自增后表结构：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; desc user8;+-------+-------------+------+-----+---------+----------------+| Field | Type        | Null | Key | Default | Extra          |+-------+-------------+------+-----+---------+----------------+| id    | int         | NO   | PRI | NULL    | auto_increment || name  | varchar(20) | YES  |     | NULL    |                |+-------+-------------+------+-----+---------+----------------+2 rows in set (0.01 sec)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Github</title>
      <link href="posts/25144.html"/>
      <url>posts/25144.html</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> <span class="token function">git</span><span class="token function">which</span> <span class="token function">git</span> <span class="token comment">#查看git路径 确保使用最新的git</span><span class="token comment">#配置git</span><span class="token function">git</span> config --global user.name <span class="token string">"BingoLin"</span> <span class="token function">git</span> config --global user.email BingoLin@pm.me<span class="token comment">#配置ssh key</span>ssh-keygen -t rsa -C <span class="token string">"BingoLin@pm.me"</span><span class="token function">cat</span> /Users/bingolin/.ssh/id_rsa.pub <span class="token comment">#打开id_rsa.pub文件，复制里面的key 数据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注册GitHub网站后，点击头像，setting ，找到ssh and GPG keys ,按提示添加 刚复制的 key 数据</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com <span class="token comment">#验证</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现 Hi Bingo-Lin! You’ve successfully authenticated, but GitHub does not provide shell access. 即链接成功。</p>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="posts/25246.html"/>
      <url>posts/25246.html</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> <span class="token function">git</span> <span class="token function">git</span> clone git@github.com:Bingo-Lin/Bingo-Lin.github.io.git  <span class="token comment">#将GitHub上的仓库克隆到本地 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>对本地仓库进行操作后</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token comment">#将文件添加到本地仓库（ .代表添加所有文件 ）</span><span class="token function">git</span> commit -m <span class="token string">"添加本次提交的名称"</span>  <span class="token comment">#将文件提交到本地仓库</span><span class="token function">git</span> push <span class="token comment">#上传到GitHub</span><span class="token function">git</span> pull <span class="token comment">#从Github拉取最新更新并合并到本地仓库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql Install</title>
      <link href="posts/62688.html"/>
      <url>posts/62688.html</url>
      
        <content type="html"><![CDATA[<h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> mysql mysql.server startmysql_secure_installation <span class="token comment">#根据提示设置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意一定要先运行第2步，再运行第3步，否则可能会出现以下错误：Error: Can’t connect to local MySQL server through socket ‘/tmp/mysql.sock’ (2)</p><h2 id="Create-user"><a href="#Create-user" class="headerlink" title="Create user"></a>Create user</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql -uroot -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入管理员密码后进入mysql界面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">create user <span class="token string">'xxx'</span>@<span class="token string">'%'</span> identified by <span class="token string">'xyz'</span><span class="token punctuation">;</span> <span class="token comment">#指定任何ip的名为xxx的用户登录,密码为xyz</span>grant all privileges  on *.*  to <span class="token string">"xxx"</span>@<span class="token string">'%'</span><span class="token punctuation">;</span> <span class="token comment">#授权xxx用户对所有数据库中文件有任何操作，此时xxx用户拥有除了grant这个命令外的所有的权限，grant这个命令是root才有的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Youtube-dl</title>
      <link href="posts/1439.html"/>
      <url>posts/1439.html</url>
      
        <content type="html"><![CDATA[<h2 id="Youtube-dl"><a href="#Youtube-dl" class="headerlink" title="Youtube-dl"></a>Youtube-dl</h2><p>使用<code>--output-dir</code>/<code>-o</code> 设定输出路径,</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">youtube-dl -o <span class="token string">'/Volumes/BingoLinData/Downloads/%(title)s.%(ext)s'</span>  https://www.youtube.com/watch?v<span class="token operator">=</span>HOyTH0QQvwk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Youtube-dl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>You-get</title>
      <link href="posts/21982.html"/>
      <url>posts/21982.html</url>
      
        <content type="html"><![CDATA[<h2 id="You-get"><a href="#You-get" class="headerlink" title="You-get"></a>You-get</h2><p>使用<code>--output-dir</code>/<code>-o</code> 设定输出路径, <code>--output-filename</code>/<code>-O</code> 设定输出文件名:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">you-get -o /Volumes/BingoLinData/Downloads --format<span class="token operator">=</span>dash-flv  https://www.bilibili.com/video/BV1vv41177jq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> You-get </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Smartmontools</title>
      <link href="posts/7.html"/>
      <url>posts/7.html</url>
      
        <content type="html"><![CDATA[<h2 id="Smartmontools"><a href="#Smartmontools" class="headerlink" title="Smartmontools"></a>Smartmontools</h2><p>在Terminal执行以下命令:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> smartmontools <span class="token comment">#安装</span>diskutil list <span class="token comment">#查找要测试「卷」的驱动器标识符</span>smartctl -a /dev/disk0 <span class="token comment">#获取指定驱动器的 SMART 状态</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Smartmontools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MNMP WordPress</title>
      <link href="posts/16928.html"/>
      <url>posts/16928.html</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>1.安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> nginxbrew services start nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2.为方便管理，在 nginx 配置目录下的 <code>servers</code> 新增一个配置文件<a href="http://www.conf/">www.conf</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /usr/local/etc/nginx/servers/www.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>并在<a href="http://www.conf中填充以下内容：">www.conf中填充以下内容：</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>  <span class="token comment"># 如果需要域名访问的话，注意需要修改 /etc/hosts 文件</span>    <span class="token comment"># server_name  bingolin.dev;</span>  <span class="token comment"># 项目根目录</span>    root /Users/bingolin/www<span class="token punctuation">;</span>    location / <span class="token punctuation">{</span>        index index.php index.html<span class="token punctuation">;</span>        autoindex on<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：最好每个项目都单独一个配置文件。从上面的配置中可以看出将项目放在用户下的 <code>www</code> 文件夹下，在这个文件夹中新建一个 html 文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> ~/www<span class="token function">vim</span> ~/www/index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>重启一下 nginx 服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew services restart nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>访问刚刚配置的主机，在浏览器网址输入localhost就可以访问到上面这个 html 文件</p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p>1.安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> phpbrew services start php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2.替换系统自带的 php-fpm：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'export PATH="/usr/local/opt/php/sbin:<span class="token environment constant">$PATH</span>"'</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc<span class="token builtin class-name">source</span> ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.查看版本信息：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">php -vphp-fpm -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>4.修改 nginx 的主机配置，使它支持 PHP</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /usr/local/etc/nginx/servers/www.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改后的<a href="http://www.conf/">www.conf</a> 内容为：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>  <span class="token comment"># 如果需要域名访问的话，注意需要修改 /etc/hosts 文件</span>    <span class="token comment"># server_name  bingolin.dev;</span>  <span class="token comment"># 项目根目录</span>    root /Users/bingolin/www<span class="token punctuation">;</span>    location / <span class="token punctuation">{</span>        index index.php index.html<span class="token punctuation">;</span>        autoindex on<span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment">#新增加的内容</span>    location ~ <span class="token punctuation">\</span>.php$ <span class="token punctuation">{</span>        fastcgi_pass   <span class="token number">127.0</span>.0.1:9000<span class="token punctuation">;</span>        fastcgi_index  index.php<span class="token punctuation">;</span>        fastcgi_param  SCRIPT_FILENAME  <span class="token variable">$document_root</span><span class="token variable">$fastcgi_script_name</span><span class="token punctuation">;</span>        include        fastcgi_params<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.重启 nginx 服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew services restart nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.在项目根目录新增一个 php 文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> ~/www/index.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>内容为：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>?php    phpinfo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在浏览器网址输入localhost就可以访问到上面这个 php 文件</p><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><p>详见Mysql Learning.md</p><p>电脑重新启动，以防止出现brew services  error </p><h2 id="Wordpress"><a href="#Wordpress" class="headerlink" title="Wordpress"></a>Wordpress</h2><p>1.安装</p><p>去官网下载Wordpress压缩包，并解压到之前的配置的用户下的 <code>www</code> 文件夹中</p><p>2.首先在在Mysql中建立一个名为Wordpress的数据库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mysql -uBingoLin -pcreate database Wordpress<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3.通过浏览器访问 <code>localhost/wordpress</code> ，就可以看到一个 Wordpress 的安装界面，输入数据库相关的信息 ，就成功安装了。</p>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MNMP </tag>
            
            <tag> WordPress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS Terminal Beautify</title>
      <link href="posts/26062.html"/>
      <url>posts/26062.html</url>
      
        <content type="html"><![CDATA[<p>从<code>MacOS Catalina</code>开始默认终端已经是<code>zsh</code>。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>使用以下命令可以查看当前终端，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token environment constant">$SHELL</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>如果不是<code>/bin/zsh</code>，执行以下命令切换到<code>zsh</code>，否则跳过此步。</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">chsh -s /bin/zsh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> <span class="token function">vim</span>brew <span class="token function">install</span> <span class="token function">git</span><span class="token comment"># 下载oh-my-zsh</span><span class="token function">git</span> clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh<span class="token comment"># 创建一个新的配置文件</span><span class="token function">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc<span class="token comment"># 授权，如果不授权每次会有警告</span><span class="token function">chmod</span> <span class="token number">755</span> /usr/local/share/zsh<span class="token function">chmod</span> <span class="token number">755</span> /usr/local/share/zsh/site-functions<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>退出并重启终端 command q</p><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 下载命令高亮插件</span><span class="token function">git</span> clone https://github.com/zsh-users/zsh-syntax-highlighting ~/.zsh/zsh-syntax-highlighting<span class="token comment"># 配置插件生效</span><span class="token builtin class-name">echo</span> <span class="token string">'# 命令高亮<span class="token entity" title="\n">\n</span>source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh'</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc<span class="token comment"># 下载命令提示插件</span><span class="token function">git</span> clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions<span class="token comment"># 配置插件生效</span><span class="token builtin class-name">echo</span> <span class="token string">'# 命令提示<span class="token entity" title="\n">\n</span>source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh'</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MacOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Terminal </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
